{"version":3,"sources":["webpack:///src/app/chanel-subscription/subscription-chanel/subscription-chanel.component.html","webpack:///src/app/chanel-subscription/subscription-chanel/subscription-chanel.component.ts","webpack:///src/app/chanel-subscription/subscription-chanel/plan-chanel/plan-chanel.component.html","webpack:///src/app/chanel-subscription/chanel-subscription-routing.module.ts","webpack:///src/app/chanel-subscription/subscription-chanel/plan-chanel/plan-chanel.component.ts","webpack:///src/app/chanel-subscription/chanel-subscription.module.ts"],"names":["SubscriptionChanelComponent","router","planList","plan","str","title","slice","this","navigate","queryParams","PlanChanelComponent","ChanelSubscriptionModule","ChanelSubscriptionRoutingModule","routes","path","component","data","route","_location","subject","dialog","paymentsService","getAuthUser","subscriptions","params","snapshot","authUser","transform","filterPlan","push","currentUserCards","subscribe","dt","userCards","value","arr","forEach","elem","includes","open","width","cards","afterClosed","console","log","payment","paymentIntent","status","height","getAllPaymentsHistory","user_id","id","customer","ph","setAllPaymentsData","changePaymentsData","back","backPage","openModalPayment","forChild"],"mappings":"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","file":"x","sourcesContent":["<div class=\"channelDiv\">\n    <div class=\"channelSubscriptionDiv\">\n        <div class=\"logoAndChannel\">\n            <img src=\"../../assets/img/logoSubscriptionPart.png\" alt=\"logo\">\n            <div class=\"channelAndIcon\">\n                <div class=\"channelSubscription\"> Metl.tv Channel Subscribtion</div>\n                <img src=\"../../assets/img/rocket.png\" alt=\"rocket\">\n            </div>\n        </div>\n    </div>\n    <div class=\"channelBelowDiv\">\n        <div class=\"chooseTrier\">Choose Trier for Subscrition</div>\n        <div class=\"subscriptionText\">With  Metl.tv Channel subscribtion gets even better with features you can't get anywhere else.</div>\n        <div class=\"cardDivs\">\n            <div class=\"cardDiv\" *ngFor=\"let plan of planList\">\n                <div class=\"cardPart1\">\n                    <img [src]=plan.img alt=\"bronzeFrame\">\n                    <div class=\"cardTitle\">{{plan.title}}</div>\n                </div>\n                <div class=\"cardText\">{{plan.card_text}}</div>\n                <div class=\"cardPart2\">\n                    <div class=\"cardLeftPart\">\n                        <div class=\"cardLeftPart1\">{{plan.title}}</div>\n                        <div class=\"cardLeftPart2\">${{(plan.price / 100).toFixed(2)}} / Month</div>\n                    </div>\n                    <button class=\"cardRightPartBtn\" (click)=\"goToPlanChanel(plan)\">View</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CHANEL_SUBSCRIPTIONS_LIST } from '@core/constants/global';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-subscription-chanel',\n  templateUrl: './subscription-chanel.component.html',\n  styleUrls: ['./subscription-chanel.component.scss']\n})\nexport class SubscriptionChanelComponent implements OnInit {\n\n    planList = CHANEL_SUBSCRIPTIONS_LIST;\n\n  constructor(\n      private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n    goToPlanChanel(plan) {\n        const str = plan.title.slice(0, -6);\n        this.router.navigate(['turbo-plan/plan-chanel'], {queryParams: {plan: str}});\n    }\n\n}\n","<div class=\"channelDiv\">\n    <div class=\"channelSubscriptionDiv\">\n        <div class=\"logoAndChannel\">\n            <img src=\"../../assets/img/logoSubscriptionPart.png\" alt=\"logo\">\n            <div class=\"channelAndIcon\">\n                <div class=\"channelSubscription\"> Metl.tv Channel Subscribtion</div>\n                <img src=\"../../assets/img/rocket.png\" alt=\"logo\">\n            </div>\n        </div>\n    </div>\n    <div class=\"backAndDetailsDiv\">\n        <div class=\"backDiv\" (click)=\"backPage()\">\n            <img src=\"../../assets/img/backSign.png\" alt=\"backSign\">\n            <div class=\"back\">Back</div>\n        </div>\n        <div class=\"detailsDiv\">Details</div>\n        <div></div>\n    </div>\n    <div class=\"cardDetailed\">\n        <div class=\"CardDetailedTitleAndLogo\">\n            <div class=\"CardDetailedLogo\">\n                <img [src]=plan.img alt=\"goldFrame\">\n            </div>\n            <div class=\"CardDetailedTitle\">{{plan.title}}</div>\n        </div>\n        <div class=\"cardsTotal\">\n            <div class=\"cardTotalDiv\">\n                <div class=\"cardDiv1\">Ad Free Viewing For This Channel</div>\n                <div class=\"cardDiv2\">\n                    <img src=\"../../assets/img/freeGreenIcon.png\" alt=\"freeIcon\">\n                </div>\n                <div class=\"cardDiv3\">User gets ad-free viewing for this specific streaming channel (not for others)</div>\n            </div>\n            <div class=\"cardTotalDiv\">\n                <div class=\"cardDiv1\">Chat Badge</div>\n                <div class=\"cardDiv2\">\n                    <img [src]=plan.img alt=\"goldIcon\">\n                </div>\n                <div class=\"cardDiv3\">User gets gold custom diamond badge for the live stream chats</div>\n            </div>\n            <div class=\"cardTotalDiv\" *ngIf=\"params === 'Silver' || params === 'Gold'\">\n                <div class=\"cardDiv1\">Custom Chat Username Colors</div>\n                <div class=\"cardDiv2\">\n                    <img src=\"../../assets/img/colorCircle.png\" alt=\"colorCircle\">\n                </div>\n                <div class=\"cardDiv3\">User can add color to their username \"custom chat usernames\" for the live stream chat</div>\n            </div>\n            <div class=\"cardTotalDiv\" *ngIf=\"params === 'Gold'\">\n                <div class=\"cardDiv1\">Custom Chat Username Colors</div>\n                <div class=\"cardDiv2\">\n                    <img src=\"../../assets/img/sadIcon.png\" alt=\"sadIcon\">\n                    <img class=\"coolImgClassName\" src=\"../../assets/img/coolIcon.png\" alt=\"coolIcon\">\n                </div>\n                <div class=\"cardDiv3\">User gets custom emojis that other users do not have access to for the live stream chat</div>\n            </div>\n        </div>\n        <div class=\"subscriptionDivs\">\n            <div class=\"subscriptionLeftPart\">\n                <div class=\"subscriptionLeftPart1\">{{plan.title}}</div>\n                <div class=\"subscriptionLeftPart2\">\n                    <div class=\" subscriptionLeftDiv2\">${{(plan.price / 100).toFixed(2)}} / Month</div>\n                </div>\n            </div>\n            <button class=\"subscribeBtn\" (click)=\"openModalPayment()\">Subscribe</button>\n        </div>\n    </div>\n    <div class=\"belowGreyDiv\"></div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SubscriptionChanelComponent } from '@app/chanel-subscription/subscription-chanel/subscription-chanel.component';\nimport { PlanChanelComponent } from '@app/chanel-subscription/subscription-chanel/plan-chanel/plan-chanel.component';\n\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SubscriptionChanelComponent,\n        data: {\n            title: 'Channel Subscription'\n        }\n    },\n    {\n        path: 'plan-chanel',\n        component: PlanChanelComponent,\n        data: {\n            title: 'Plan Channel'\n        }\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChanelSubscriptionRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CHANEL_SUBSCRIPTIONS_LIST } from '@core/constants/global';\r\nimport { Location } from '@angular/common';\r\nimport { Subscription } from 'rxjs';\r\nimport { SubjectService } from '@core/services/subject.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PaymentPlanComponent } from '@core/components/modals/payment-plan/payment-plan.component';\r\nimport { PaymentCompletedComponent } from '@core/components/modals/payment-completed/payment-completed.component';\r\nimport { PaymentsService } from '@core/services/wallet/payments.service';\r\nimport { GetAuthUserPipe } from \"@shared/pipes/get-auth-user.pipe\";\r\n\r\n@Component({\r\n  selector: 'app-plan-chanel',\r\n  templateUrl: './plan-chanel.component.html',\r\n  styleUrls: ['./plan-chanel.component.scss']\r\n})\r\nexport class PlanChanelComponent implements OnInit {\r\n\r\n    params;\r\n    planList = CHANEL_SUBSCRIPTIONS_LIST;\r\n    plan;\r\n    userCards;\r\n    subscriptions: Subscription[] = [];\r\n    authUser;\r\n\r\n  constructor(\r\n      private route: ActivatedRoute,\r\n      private _location: Location,\r\n      private subject: SubjectService,\r\n      private dialog: MatDialog,\r\n      private paymentsService: PaymentsService,\r\n      private getAuthUser: GetAuthUserPipe,\r\n  ) {\r\n      this.params = this.route.snapshot?.queryParams?.plan;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n      this.authUser = this.getAuthUser.transform();\r\n      this.filterPlan(this.params, this.planList);\r\n      this.subscriptions.push(this.subject.currentUserCards.subscribe(dt => {\r\n          this.userCards = dt;\r\n      }));\r\n  }\r\n\r\n  filterPlan(value, arr) {\r\n      arr.forEach((elem) => {\r\n          if (elem.title.includes(value)) {\r\n              this.plan = elem;\r\n          }\r\n      });\r\n  }\r\n\r\n    openModalPayment() {\r\n      this.dialog.open(PaymentPlanComponent, {\r\n          width: '1085px',\r\n          data: {\r\n              plan: this.plan,\r\n              cards: this.userCards,\r\n          }\r\n      }).afterClosed().subscribe(dt => {\r\n          console.log(dt);\r\n          if (dt?.payment.paymentIntent.status === 'succeeded') {\r\n              this.dialog.open(PaymentCompletedComponent, {\r\n                  width: '591px',\r\n                  height: '292px'\r\n              }).afterClosed().subscribe();\r\n          }\r\n          this.subscriptions.push(this.paymentsService.getAllPaymentsHistory({\r\n              user_id: this.authUser.id,\r\n              customer: dt.customer\r\n          }).subscribe(ph => {\r\n              this.subject.setAllPaymentsData(ph);\r\n              this.subject.changePaymentsData(ph);\r\n          }));\r\n      });\r\n    }\r\n\r\n    backPage() {\r\n      this._location.back();\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ChanelSubscriptionRoutingModule } from './chanel-subscription-routing.module';\nimport { SubscriptionChanelComponent } from './subscription-chanel/subscription-chanel.component';\nimport { PlanChanelComponent } from './subscription-chanel/plan-chanel/plan-chanel.component';\n\n\n@NgModule({\n  declarations: [SubscriptionChanelComponent, PlanChanelComponent],\n  imports: [\n    CommonModule,\n    ChanelSubscriptionRoutingModule\n  ]\n})\nexport class ChanelSubscriptionModule { }\n"]}