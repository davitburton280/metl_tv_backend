{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/core/components/layout/left-sidebar/channel-subscriptions/channel-subscriptions.component.html","webpack:///src/app/core/components/layout/left-sidebar/channel-subscriptions/channel-subscriptions.component.ts","webpack:///src/app/core/components/layout/left-sidebar/left-sidebar.component.html","webpack:///src/app/core/components/layout/left-sidebar/left-sidebar.component.ts","webpack:///src/app/core/components/layout/left-sidebar/section-links/section-links.component.html","webpack:///src/app/core/components/layout/left-sidebar/section-links/section-links.component.ts","webpack:///src/app/core/components/layout/left-sidebar/stocks-lists-portable/stocks-lists-portable.component.html","webpack:///src/app/core/components/layout/left-sidebar/stocks-lists-portable/stocks-lists-portable.component.ts","webpack:///src/app/core/components/layout/navbar/navbar.component.html","webpack:///src/app/core/components/layout/navbar/navbar.component.ts","webpack:///src/app/core/components/modals/add-playlist-dialog/add-playlist-dialog.component.ts","webpack:///src/app/core/components/modals/add-playlist-dialog/add-playlist-dialog.component.html","webpack:///src/app/core/components/modals/add-stock-dialog/add-stock-dialog.component.ts","webpack:///src/app/core/components/modals/add-stock-dialog/add-stock-dialog.component.html","webpack:///src/app/core/components/modals/add-video-to-another-playlist/add-video-to-another-playlist.component.ts","webpack:///src/app/core/components/modals/add-video-to-another-playlist/add-video-to-another-playlist.component.html","webpack:///src/app/core/components/modals/add-video-to-playlist-dialog/add-video-to-playlist-dialog.component.ts","webpack:///src/app/core/components/modals/add-video-to-playlist-dialog/add-video-to-playlist-dialog.component.html","webpack:///src/app/core/components/modals/add-video-to-playlist-dialog/search-videos-tab/search-videos-tab.component.html","webpack:///src/app/core/components/modals/add-video-to-playlist-dialog/search-videos-tab/search-videos-tab.component.ts","webpack:///src/app/core/components/modals/add-video-to-playlist-dialog/video-url-tab/video-url-tab.component.html","webpack:///src/app/core/components/modals/add-video-to-playlist-dialog/video-url-tab/video-url-tab.component.ts","webpack:///src/app/core/components/modals/add-video-to-playlist-dialog/your-videos-tab/your-videos-tab.component.html","webpack:///src/app/core/components/modals/add-video-to-playlist-dialog/your-videos-tab/your-videos-tab.component.ts","webpack:///src/app/core/components/modals/confirmation-dialog/confirmation-dialog.component.ts","webpack:///src/app/core/components/modals/confirmation-dialog/confirmation-dialog.component.html","webpack:///src/app/core/components/modals/purchase-bits/purchase-bits.component.ts","webpack:///src/app/core/components/modals/purchase-bits/purchase-bits.component.html","webpack:///src/app/core/components/ungrouped/about/about.component.ts","webpack:///src/app/core/components/ungrouped/about/about.component.html","webpack:///src/app/core/components/ungrouped/accessibility-statement/accessibility-statement.component.ts","webpack:///src/app/core/components/ungrouped/accessibility-statement/accessibility-statement.component.html","webpack:///src/app/core/components/ungrouped/contact-us/contact-us.component.ts","webpack:///src/app/core/components/ungrouped/contact-us/contact-us.component.html","webpack:///src/app/core/components/ungrouped/cookie-policy/cookie-policy.component.ts","webpack:///src/app/core/components/ungrouped/cookie-policy/cookie-policy.component.html","webpack:///src/app/core/components/ungrouped/help/help.component.ts","webpack:///src/app/core/components/ungrouped/help/help.component.html","webpack:///src/app/core/components/ungrouped/not-found/not-found.component.ts","webpack:///src/app/core/components/ungrouped/not-found/not-found.component.html","webpack:///src/app/core/components/ungrouped/page-loading/page-loading.component.ts","webpack:///src/app/core/components/ungrouped/page-loading/page-loading.component.html","webpack:///src/app/core/components/ungrouped/privacy-policy/privacy-policy.component.ts","webpack:///src/app/core/components/ungrouped/privacy-policy/privacy-policy.component.html","webpack:///src/app/core/components/ungrouped/security/security.component.ts","webpack:///src/app/core/components/ungrouped/security/security.component.html","webpack:///src/app/core/constants/charts.ts","webpack:///src/app/core/constants/global.ts","webpack:///src/app/core/constants/patterns.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/guards/auth.guard.ts","webpack:///src/app/core/guards/do-not-leave-page.guard.ts","webpack:///src/app/core/guards/non-auth.guard.ts","webpack:///src/app/core/helpers/build-play-video-route.ts","webpack:///src/app/core/helpers/http.interceptor.ts","webpack:///src/app/core/helpers/is-responsive.ts","webpack:///src/app/core/helpers/move-item-in-array.ts","webpack:///src/app/core/helpers/pattern-validator.ts","webpack:///src/app/core/helpers/update-stock-details.ts","webpack:///src/app/core/modules/material.module.ts","webpack:///src/app/core/services/auth.service.ts","webpack:///src/app/core/services/channels.service.ts","webpack:///src/app/core/services/chat.service.ts","webpack:///src/app/core/services/loader.service.ts","webpack:///src/app/core/services/opentok.service.ts","webpack:///src/app/core/services/openvidu.service.ts","webpack:///src/app/core/services/playlists.service.ts","webpack:///src/app/core/services/stocks.service.ts","webpack:///src/app/core/services/subject.service.ts","webpack:///src/app/core/services/users.service.ts","webpack:///src/app/core/services/video.service.ts","webpack:///src/app/shared/components/categories/categories.component.ts","webpack:///src/app/shared/components/categories/categories.component.html","webpack:///src/app/shared/components/chat-box/chat-box.component.ts","webpack:///src/app/shared/components/chat-box/chat-box.component.html","webpack:///src/app/shared/components/search-stocks-form-old/search-stocks-form.component.html","webpack:///src/app/shared/components/search-stocks-form-old/search-stocks-form-old.component.ts","webpack:///src/app/shared/components/search-stocks-form/search-stocks-form.component.html","webpack:///src/app/shared/components/search-stocks-form/search-stocks-form.component.ts","webpack:///src/app/shared/components/search-videos-form/search-videos-form.component.ts","webpack:///src/app/shared/components/search-videos-form/search-videos-form.component.html","webpack:///src/app/shared/components/stocks-list-sample/stocks-list-sample.component.html","webpack:///src/app/shared/components/stocks-list-sample/stocks-list-sample.component.ts","webpack:///src/app/shared/components/stocks-lists-modal/stocks-lists-modal.component.ts","webpack:///src/app/shared/components/stocks-lists-modal/stocks-lists-modal.component.html","webpack:///src/app/shared/components/stocks-tiles/stocks-tiles.component.ts","webpack:///src/app/shared/components/stocks-tiles/stocks-tiles.component.html","webpack:///src/app/shared/components/user-tags/user-tags.component.ts","webpack:///src/app/shared/components/user-tags/user-tags.component.html","webpack:///src/app/shared/components/video-carousel-holder/video-carousel-holder.component.html","webpack:///src/app/shared/components/video-carousel-holder/video-carousel-holder.component.ts","webpack:///src/app/shared/components/video-filters/video-filters.component.ts","webpack:///src/app/shared/components/video-filters/video-filters.component.html","webpack:///src/app/shared/components/video-js-record/video-js-record.component.ts","webpack:///src/app/shared/components/video-js-record/video-js-record.component.html","webpack:///src/app/shared/components/video-js/video-js.component.ts","webpack:///src/app/shared/components/video-js/video-js.component.html","webpack:///src/app/shared/components/videos-list-holder/videos-list-holder.component.html","webpack:///src/app/shared/components/videos-list-holder/videos-list-holder.component.ts","webpack:///src/app/shared/pipes/base64-to-file.pipe.ts","webpack:///src/app/shared/pipes/blob-to-file.pipe.ts","webpack:///src/app/shared/pipes/check-for-empty-object.pipe.ts","webpack:///src/app/shared/pipes/date-from-now.pipe.ts","webpack:///src/app/shared/pipes/filter-devices.pipe.ts","webpack:///src/app/shared/pipes/filter-out-falsy-values-from-object.pipe.ts","webpack:///src/app/shared/pipes/get-auth-user.pipe.ts","webpack:///src/app/shared/pipes/get-selected-videos-to-be-added-to-playlist.pipe.ts","webpack:///src/app/shared/pipes/get-thumb-path.pipe.ts","webpack:///src/app/shared/pipes/update-user-stocks.pipe.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/user/home/home.component.html","webpack:///src/app/user/home/home.component.ts","webpack:///src/app/user/openvidu-test/join-streaming-form/join-streaming-form.component.ts","webpack:///src/app/user/openvidu-test/join-streaming-form/join-streaming-form.component.html","webpack:///src/app/user/openvidu-test/publisher/publisher.component.ts","webpack:///src/app/user/openvidu-test/publisher/publisher.component.html","webpack:///src/app/user/openvidu-test/subscriber/subscriber.component.ts","webpack:///src/app/user/openvidu-test/subscriber/subscriber.component.html","webpack:///src/app/user/openvidu-test/video-library/video-library.component.html","webpack:///src/app/user/openvidu-test/video-library/video-library.component.ts","webpack:///src/app/user/profile/profile.component.html","webpack:///src/app/user/profile/profile.component.ts","webpack:///src/app/user/publisher-flow/check-streaming-requirements/check-streaming-requirements.component.html","webpack:///src/app/user/publisher-flow/check-streaming-requirements/check-streaming-requirements.component.ts","webpack:///src/app/user/publisher-flow/collect-streaming-details-form/collect-streaming-details-form.component.ts","webpack:///src/app/user/publisher-flow/collect-streaming-details-form/collect-streaming-details-form.component.html","webpack:///src/app/user/publisher-flow/publisher-flow.component.html","webpack:///src/app/user/publisher-flow/publisher-flow.component.ts","webpack:///src/app/user/publisher-flow/video/video.component.ts","webpack:///src/app/user/publisher-flow/video/video.component.html","webpack:///src/app/user/subscriber-flow/join-video-streaming/join-video-streaming.component.ts","webpack:///src/app/user/subscriber-flow/join-video-streaming/join-video-streaming.component.html","webpack:///src/app/user/subscriber-flow/ov-video/ov-video.component.ts","webpack:///src/app/user/subscriber-flow/ov-video/ov-video.component.html","webpack:///src/app/user/subscriber-flow/subscriber-flow.component.ts","webpack:///src/app/user/subscriber-flow/subscriber-flow.component.html","webpack:///src/app/user/subscriber-flow/user-video/user-video.component.ts","webpack:///src/app/user/subscriber-flow/user-video/user-video.component.html","webpack:///src/app/user/user-routing.module.ts","webpack:///src/app/user/user.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///min-document (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","routes","path","component","data","title","loadChildren","m","ChannelsModule","canActivate","AuthModule","UserModule","StocksModule","VideosModule","ChatModule","PlaylistsModule","AppRoutingModule","forRoot","imports","AppComponent","router","subject","loader","titleService","route","stocksService","subscriptions","isSmallScreen","production","console","log","getStockTypes","push","events","pipe","child","firstChild","snapshot","subscribe","pageTitle","setTitle","searchType","queryParams","search","navigate","test","url","sidenav","screen","width","includes","close","open","dt","changeStockTypes","selector","templateUrl","styleUrls","tokenGetter","localStorage","getItem","AppModule","provide","useClass","multi","config","whitelistedDomains","blacklistedRoutes","declarations","providers","bootstrap","ChannelSubscriptionsComponent","auth","channelsService","channels","closeSidenav","ev","routerUrl","getUserChannelSubscriptions","user_id","authUser","getUserSubscriptions","event","channel","previousIndex","currentIndex","sendData","rows","JSON","stringify","channel_id","changeSubscriptionPriority","emit","navigateByUrl","skipLocationChange","username","user","LeftSidebarComponent","getAuthUser","apiUrl","envName","transform","params","SectionLinksComponent","mainSections","StocksListsPortableComponent","cdr","activeTab","name","dataLoading","authDataLoaded","selectedSortType","stocks_order_type","currentUserStocks","userStocks","stocks","detectChanges","hide","getUserStocks","getIndices","getStocksData","indices","changeIndices","stock","tab","sort_type","user_stocks","changeUserStocks","empty","length","updateFollowedStocks","forEach","s","unsubscribe","NavbarComponent","modalService","dialog","additionalLinks","passedUsername","getDailyStocks","loggedIn","maxWidth","maxHeight","height","panelClass","afterClosed","logout","removeItem","l","link","setStocksData","changesPercentage","replace","value","color","AddPlaylistDialogComponent","modal","fb","playlistService","isSubmitted","addPlaylistForm","group","required","description","privacy","valid","addPlaylist","get","cancel","createPlaylist","AddStockDialogComponent","AddVideoToAnotherPlaylistComponent","playlistsService","videoId","video_id","playlists","saveToPlaylistsForm","array","getPlaylistsFormGroup","ret","p","found","videos","find","v","checked","control","patchValue","target","playlist","playlistIds","controls","c","addVideoToOtherPlaylists","save","AddVideoToPlaylistDialogComponent","videoService","toastr","selectedVideos","playlist_id","video_ids","addVideosToPlaylist","error","currentUser","changeTab","addVideos","SearchVideosTabComponent","getSelectedVideos","searchedVideos","searched","selectVid","searchInAllVideos","video","tag","searchVideos","VideoUrlTabComponent","validUrl","searchingVideo","searchVideoByUrlForm","possibleUrl","clipboardData","getData","getVideos","parsedUrl","URL","searchParams","getVideoById","getUrlString","YourVideosTabComponent","getUserVideos","ConfirmationDialogComponent","dialogRef","confirm","PurchaseBitsComponent","AboutComponent","AccessibilityStatementComponent","ContactUsComponent","CookiePolicyComponent","HelpComponent","NotFoundComponent","PageLoadingComponent","PrivacyPolicyComponent","SecurityComponent","STOCK_TILE_CHART_SETTINGS","view","colorScheme","domain","tooltipDisabled","autoScale","timeline","animations","API_URL","VIDEO_DEFAULT_THUMBNAILS_PATH","VIDEO_DEFAULT_COVERS_PATH","VIDEO_DEFAULT_AVATARS_PATH","USER_DEFAULT_AVATARS_PATH","DEFAULT_VIDEO_SUGGESTIONS_COUNT","OWL_OPTIONS","loop","margin","nav","pullDrag","dots","navSpeed","navText","responsive","items","PROFILE_PAGE_TABS","NAVBAR_ADDITIONAL_LINKS","VIDEO_CATEGORIES","ALLOWED_IMG_MIME_TYPES","PASSWORD_MAX_LENGTH","PASSWORD_MIN_LENGTH","DEVICES_ICONS","messages","type","msg","icon","VIDEO_FILTERS","utc","subtract","format","startOf","STOCK_CATEGORIES","DESCRIPTION_CHARACTERS_LIMIT","MAIN_SECTIONS","img","separator","TEXT_ONLY_PATTERN_WITHOUT_SPECIALS","NUMBER_AFTER_TEXT_PATTERN","NO_SPACE_PATTERN","NUMBERS_ONLY","FOUR_DIGIT_NUMBERS_ONLY","TEXT_ONLY_WITH_SPECIALS_PATTERN","EMAIL_PATTERN","METL_URL_PATTERN","URL_PATTERN","CoreModule","entryComponents","AuthGuard","next","state","redirectUrl","providedIn","DoNotLeavePageGuard","currentRoute","currentState","nextState","recordingState","alertOfLeaving","NonAuthGuard","checkRoles","buildPlayVideoRoute","status","session","session_name","publisher","RequestInterceptor","request","handle","res","err","formProcessing","stocksLoading","message","hasOwnProperty","db_error","main","IsResponsive","navigator","userAgent","window","availWidth","moveItemInArray","arr","from","to","f","splice","patternValidator","pattern","patternInvalid","updateStockDetails","currentStocks","st","fs","change","price","MaterialModule","AuthService","httpClient","jwtHelper","post","isTokenExpired","role","userData","toLowerCase","roles","r","some","Boolean","ChannelsService","put","ChatService","LoaderService","isLoading","text","loaderSource","currentLoaderState","asObservable","OpentokService","room","OpenviduService","PlaylistsService","StocksService","SubjectService","token","authUserData","initial","stockTypes","messageData","videoRecordingState","videoSearchData","subscriptionsData","streamSessionData","toggleFiltersData","stocksData","indicesData","userStocksData","userStocksSource","authUserSource","indicesSource","stockTypesSource","currentStockTypes","currentIndices","UsersService","VideoService","CategoriesComponent","ChatBoxComponent","chatService","messageSent","selectedUsersToReply","userSelected","loadingMessages","customEmojis","shortNames","emoticons","keywords","imageUrl","sendMsg","initForm","getChatMessagesFromParentComponents","getVideoRecordingState","loadVideoPreviousMessages","chatForm","openViduToken","from_id","to_id","avatar","getChatMessages","getMsgData","msgData","parse","clientData","myUserName","recording","filter","emoji","SearchStocksFormOldComponent","searchResults","myControl","loadingSearch","portable","openStockOnEnter","searchOnEnter","autocomplete","searchStocksForm","val","passedSearch","searchStocks","grouped","slice","searchStocksBySymbol","trigger","closePanel","symbol","reset","openStockPage","SearchStocksFormComponent","groupResults","returnSearchText","returnFoundStock","updateStocksOnEnter","whiteForm","transparentForm","handleEnter","handleRegularKeyup","SearchVideosFormComponent","searchVideosForm","StocksListSampleComponent","updateStocks","passedStocks","followAllowed","unfollow","sort","editPortable","pagination","userStocksOnly","show","editUserStocks","sortTypes","sortedListLoading","portableView","updatedStocksList","selectedStockType","following","updateFollowedStocksList","order_type","updateUserStocksPriority","setItem","changeAuthUser","index","a","b","localeCompare","reverse","changeSortTypeOnly","changes","property","currentValue","StocksListsModalComponent","matDialogRef","filteredStocks","filteredUserStocks","pageSize","pageIndex","getStocksByType","type_id","t","searchInStockType","filterStocks","allStocks","getStockGraphsDataByType","item","i","assign","stockNamesList","join","searchInStockTypeData","stockType","stockTypeChanged","closeModal","getSearchResults","StocksTilesComponent","stockChartSettings","stocksGeneralList","dragDropDisabled","previousContainer","container","UserTagsComponent","tags","tagSelected","getUserTags","VideoCarouselHolderComponent","owlOptions","removable","confirmed","removeVideo","filename","success","videoLen","VideoFiltersComponent","ifObjectEmpty","subjectService","filters","selectedFilters","filterAction","getToggleFiltersData","VideoJsRecordComponent","elementRef","blobToFile","idx","shareScreen","recordingStarted","screenSharing","player","plugin","autoplay","fluid","bigPlayButton","controlBar","volumePanel","plugins","record","audio","frameRate","ideal","max","min","displayMilliseconds","maxLength","debug","videoEngine","videoMimeType","frameWidth","frameHeight","el","document","getElementById","VERSION","getPluginVersion","updateSrc","src","label","on","aa","setVideoRecordingState","viaSocket","recordingStartTimeStamp","currentTimestamp","saveVideoToken","author_id","category_id","videoSettings","sessionName","thumbnail","recordingEndTimeStamp","recordingDuration","diff","fd","FormData","append","recordedData","saveRecordedData","convertedData","element","warn","deviceErrorCode","dispose","VideoJsComponent","getElementsByTagName","videoUrl","videoData","setAttribute","poster","muted","load","play","captions","active","quality","options","VideosListHolderComponent","videoLoading","updatePrivacy","Base64ToFilePipe","allowedImgMimeTypes","base64","mime","indexOf","cleanedBase64","bs","atob","buffer","ArrayBuffer","ba","Uint8Array","charCodeAt","Blob","BlobToFilePipe","theBlob","File","CheckForEmptyObjectPipe","obj","constructor","DateFromNowPipe","datetime","fromNow","FilterDevicesPipe","filterKey","FilterOutFalsyValuesFromObjectPipe","projectSpecific","entries","reduce","k","GetAuthUserPipe","GetSelectedVideosToBeAddedToPlaylistPipe","checkIfVideoAddedToPlaylist","GetThumbPathPipe","sanitizer","folder","extra","getDefaultPaths","bypassSecurityTrustStyle","bypassSecurityTrustUrl","UpdateUserStocksPipe","selectedTypeId","SharedModule","HomeComponent","JoinStreamingFormComponent","formReady","joinSessionForm","submit","PublisherComponent","opentokService","playerOptions","html5","vhs","overrideNative","withCredentials","liveui","sources","publishing","publisherDiv","nativeElement","insertMode","publish","alert","SubscriberComponent","subscriber","stream","subscriberDiv","VideoLibraryComponent","openViduService","elRef","OPENVIDU_SERVER_URL","OPENVIDU_SERVER_SECRET","mySessionId","Math","floor","random","tokens","getToken","email","ovLocalUsers","ovSessionComponent","getLocalUsers","ovLayout","getOpenviduLayout","ovLayoutOptions","getOpenviduLayoutOptions","leaveSession","ProfileComponent","usersService","currentDate","Date","dropzoneConfig","dropzoneFiles","profileForm","birthday","full_name","formData","formValue","dropFileExist","field","file","fileName","now","buildFormData","saveProfileChanges","dateChanged","saveChanges","CheckStreamingRequirementsComponent","deviceStatus","deviceRecognitionForm","video_device","audio_device","getConnectedDevices","pageLoad","mediaDevices","getUserMedia","enumerateDevices","devices","userMediaDevices","defaultVideoDevice","d","kind","defaultAudioDevice","CollectStreamingDetailsFormComponent","thumbnailUploading","thumbnailUploaded","separatorKeysCodes","privacyTypes","selectedPrivacy","getVideoCategories","startStreamingForm","videoCategories","input","trim","fruit","thumbnailFile","files","saveVideoThumbnail","categoryName","add","changedPrivacy","PublisherFlowComponent","sessionData","requirementsChecked","setSessionData","VideoComponent","ref","videoJSPlayerOptions","subscribers","webcams","participants","getVideoSessionData","joinSession","sendRecordingState","removeLiveVideoByToken","savedSession","OV","initSession","getStreamEvents","receiveMessage","receiveRecordingState","connect","querySelector","initPublisher","audioSource","undefined","videoSource","publishAudio","publishVideo","resolution","mirror","mainStreamManager","connection","deleteSubscriber","streamManager","disconnect","signal","saveMessage","setMsgData","removeVideoByToken","location","reload","JoinVideoStreamingComponent","streamDestroyed","getSessionData","getRecordingState","videoFound","streamCreated","socket","OvVideoComponent","_streamManager","addVideoElement","SubscriberFlowComponent","UserVideoComponent","canDeactivate","UserRoutingModule","forChild","DEFAULT_DROPZONE_CONFIG","maxFilesize","maxFiles","acceptedFiles","autoProcessQueue","addRemoveLinks","useValue","environment","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {HomeComponent} from './user/home/home.component';\r\nimport {AuthGuard} from '@core/guards/auth.guard';\r\nimport {NonAuthGuard} from '@core/guards/non-auth.guard';\r\nimport {NotFoundComponent} from '@core/components/ungrouped/not-found/not-found.component';\r\nimport {AccessibilityStatementComponent} from '@app/core/components/ungrouped/accessibility-statement/accessibility-statement.component';\r\nimport {AboutComponent} from '@core/components/ungrouped/about/about.component';\r\nimport {CookiePolicyComponent} from '@core/components/ungrouped/cookie-policy/cookie-policy.component';\r\nimport {PrivacyPolicyComponent} from '@core/components/ungrouped/privacy-policy/privacy-policy.component';\r\nimport {SecurityComponent} from '@core/components/ungrouped/security/security.component';\r\nimport {HelpComponent} from '@core/components/ungrouped/help/help.component';\r\nimport {ContactUsComponent} from '@core/components/ungrouped/contact-us/contact-us.component';\r\nimport {PageLoadingComponent} from '@core/components/ungrouped/page-loading/page-loading.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: HomeComponent,\r\n        data: {\r\n            title: 'Metl TV',\r\n        }\r\n    },\r\n    {\r\n        path: 'channels',\r\n        loadChildren: () => import('./channels/channels.module').then(m => m.ChannelsModule),\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'auth',\r\n        loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule),\r\n        canActivate: [NonAuthGuard]\r\n    },\r\n    {\r\n        path: 'user',\r\n        loadChildren: () => import('./user/user.module').then(m => m.UserModule),\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'stocks',\r\n        loadChildren: () => import('./stocks/stocks.module').then(m => m.StocksModule),\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'videos',\r\n        loadChildren: () => import('./videos/videos.module').then(m => m.VideosModule),\r\n    },\r\n    {\r\n        path: 'trending',\r\n        loadChildren: () => import('./videos/videos.module').then(m => m.VideosModule),\r\n    },\r\n    {\r\n        path: 'chat',\r\n        loadChildren: () => import('./chat/chat.module').then(m => m.ChatModule),\r\n    },\r\n    {\r\n        path: 'playlists',\r\n        loadChildren: () => import('./playlists/playlists.module').then(m => m.PlaylistsModule),\r\n    },\r\n    {\r\n        path: 'about',\r\n        component: AboutComponent,\r\n        data: {\r\n            title: 'About',\r\n        }\r\n    },\r\n    {\r\n        path: 'help',\r\n        component: HelpComponent,\r\n        data: {\r\n            title: 'Help',\r\n        }\r\n    },\r\n    {\r\n        path: 'cookie-policy',\r\n        component: CookiePolicyComponent,\r\n        data: {\r\n            title: 'Cookie policy',\r\n        }\r\n    },\r\n    {\r\n        path: 'accessibility-assessment',\r\n        component: AccessibilityStatementComponent,\r\n        data: {\r\n            title: 'Accessibility statement',\r\n        }\r\n    },\r\n    {\r\n        path: 'contact-us',\r\n        component: ContactUsComponent,\r\n        data: {\r\n            title: 'Contact us',\r\n        }\r\n    },\r\n    {\r\n        path: 'privacy-policy',\r\n        component: PrivacyPolicyComponent,\r\n        data: {\r\n            title: 'Privacy policy',\r\n        }\r\n    },\r\n    {\r\n        path: 'security',\r\n        component: SecurityComponent,\r\n        data: {\r\n            title: 'Security',\r\n        }\r\n    },\r\n    {\r\n        path: 'test',\r\n        component: PageLoadingComponent,\r\n        data: {\r\n            title: 'Security',\r\n        }\r\n    },\r\n\r\n    {path: '**', component: NotFoundComponent},\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","<mat-sidenav-container>\r\n    <mat-sidenav [mode]=\"getMode(sidenav)\" #sidenav\r\n                 id=\"sidenav\" [opened]=\"!router.url.includes('auth')\">\r\n        <app-left-sidebar (closeSidenav)=\"closeSidenav($event, sidenav)\" *ngIf=\"isSmallScreen\"></app-left-sidebar>\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content class=\"ml-0 ml-md-0\">\r\n        <app-navbar (search)=\"getSearch($event)\" *ngIf=\"!router.url.includes('auth')\"\r\n                    (closeSidenav)=\"closeSidenav($event, sidenav)\"></app-navbar>\r\n        <!--        <app-navbar (toggleSide)=\"sidenav.toggle()\"></app-navbar>-->\r\n\r\n        <!--        <mat-spinner [diameter]=\"30\" *ngIf=\"loader.dataLoading\"></mat-spinner>-->\r\n\r\n        <section class=\"body-content\" [class.full-width]=\"router.url.includes('auth')\">\r\n            <div class=\"body-content-left\"\r\n                 *ngIf=\"!router.url.includes('auth') && !checkIfPolicyPage() && !isSmallScreen\">\r\n                <div class=\"position-relative\">\r\n                    <div class=\"close-left-menu\">&times;</div>\r\n                    <app-left-sidebar></app-left-sidebar>\r\n                </div>\r\n            </div>\r\n            <div class=\"body-content-right\"\r\n                 [ngClass]=\"{'full-width': checkIfPolicyPage() || router.url.includes('auth')}\">\r\n                <div class=\"position-relative\">\r\n                    <router-outlet></router-outlet>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {LoaderService} from '@core/services/loader.service';\r\nimport {Title} from '@angular/platform-browser';\r\nimport {Subscription} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport IsResponsive from '@core/helpers/is-responsive';\r\nimport {StocksService} from '@core/services/stocks.service';\r\nimport {environment} from '@env';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n    title = '';\r\n    subscriptions: Subscription[] = [];\r\n    pageTitle;\r\n    isSmallScreen = IsResponsive.isSmallScreen();\r\n\r\n    constructor(\r\n        public router: Router,\r\n        private subject: SubjectService,\r\n        public loader: LoaderService,\r\n        private titleService: Title,\r\n        private route: ActivatedRoute,\r\n        private stocksService: StocksService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        // const player = new Plyr('video', {\r\n        //     captions: {active: true},\r\n        //     quality: {default: 576, options: [4320, 2880, 2160, 1440, 1080, 720, 576, 480, 360, 240]}\r\n        // });\r\n        // console.log(player)\r\n\r\n        if (environment.production) {\r\n            console.log = () => {\r\n            };\r\n        }\r\n\r\n        this.getStockTypes();\r\n\r\n        // Getting current page title\r\n        this.subscriptions.push(this.router.events.pipe(map(() => {\r\n            let child = this.route.firstChild;\r\n            while (child) {\r\n                if (child.firstChild) {\r\n                    child = child.firstChild;\r\n                } else if (child.snapshot.data && child.snapshot.data.title) {\r\n                    return child.snapshot.data.title;\r\n                } else {\r\n                    return null;\r\n                }\r\n            }\r\n            return null;\r\n        })).subscribe(title => {\r\n            this.pageTitle = title;\r\n            if (this.pageTitle) {\r\n                this.titleService.setTitle(this.pageTitle);\r\n            }\r\n        }));\r\n    }\r\n\r\n    async getSearch(e) {\r\n        if (e.searchType === 'videos') {\r\n            const queryParams = e.search ? {queryParams: e} : {};\r\n            await this.router.navigate(['videos/'], queryParams);\r\n        }\r\n    }\r\n\r\n    checkIfPolicyPage() {\r\n        return /accessibility-assessment|security|help|privacy-policy|cookie-policy|about/.test(this.router.url);\r\n    }\r\n\r\n\r\n    getMode(sidenav) {\r\n\r\n        // sidenav.toggle();\r\n        if (screen.width <= 991 && !this.router.url.includes('auth')) {\r\n            return 'over';\r\n        } else {\r\n            return 'side';\r\n        }\r\n    }\r\n\r\n    closeSidenav(close, sidenav) {\r\n        // if (this.responsiveMode) {\r\n        if (close) {\r\n            sidenav.close();\r\n        } else {\r\n            sidenav.open();\r\n        }\r\n        // }\r\n    }\r\n\r\n    getStockTypes() {\r\n        this.stocksService.getStockTypes({}).subscribe(dt => {\r\n            this.subject.changeStockTypes(dt);\r\n            // this.selectedStockType = dt[0];\r\n        });\r\n    }\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {CoreModule} from '@core/core.module';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {CarouselModule} from 'ngx-owl-carousel-o';\r\nimport {JwtModule} from '@auth0/angular-jwt';\r\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport {RequestInterceptor} from '@core/helpers/http.interceptor';\r\nimport {DatePipe} from '@angular/common';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {MaterialModule} from '@core/modules/material.module';\r\nimport {NgxChartsModule} from '@swimlane/ngx-charts';\r\nimport {UserModule} from '@app/user/user.module';\r\n\r\n// Token getter for JWT module\r\nexport function tokenGetter() {\r\n    return localStorage.getItem('token') || '';\r\n}\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        AppRoutingModule,\r\n        CoreModule,\r\n        CarouselModule,\r\n        MatDialogModule,\r\n        MaterialModule,\r\n        NgxChartsModule,\r\n        JwtModule.forRoot({\r\n            config: {\r\n                tokenGetter,\r\n                whitelistedDomains: ['localhost:3001',],\r\n                blacklistedRoutes: ['localhost:3001/auth/']\r\n            }\r\n        }),\r\n        NgbModule,\r\n        UserModule,\r\n    ],\r\n    providers: [\r\n        DatePipe,\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: RequestInterceptor,\r\n            multi: true\r\n        },\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","<ng-container *ngIf=\"auth.loggedIn() && channels?.length!==0\">\r\n    <p class=\"subscriptions-text\">Subscriptions</p>\r\n    <div class=\"left-list\" cdkDropList (cdkDropListDropped)=\"drop($event)\">\r\n        <div class=\"main-item-block subscription\" *ngFor=\"let channel of channels;let i = index\" cdkDrag\r\n             (cdkDragDropped)=\"dragDropped($event, channel)\" (click)=\"openChannelPage(channel)\">\r\n            <ng-container *ngIf=\"i < 5\">\r\n                <img class=\"list-img\" [src]=\"channel.avatar | getImgPath:'avatars'\">\r\n                <div class=\"d-flex align-items-center\">\r\n                    <p class=\"channel-name\">{{channel.name}}</p>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n    <p (click)=\"viewAllSubscriptions()\" *ngIf=\"routerUrl !== '/channels/subscriptions'\" class=\"see-more\">\r\n        See more</p>\r\n</ng-container>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {AuthService} from '@core/services/auth.service';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {CdkDragDrop} from '@angular/cdk/drag-drop';\r\nimport {moveItemInArray} from '@core/helpers/move-item-in-array';\r\nimport {ActivationEnd, NavigationEnd, Router} from '@angular/router';\r\nimport {SubjectService} from '@core/services/subject.service';\r\n\r\n@Component({\r\n    selector: 'app-channel-subscriptions',\r\n    templateUrl: './channel-subscriptions.component.html',\r\n    styleUrls: ['./channel-subscriptions.component.scss']\r\n})\r\nexport class ChannelSubscriptionsComponent implements OnInit {\r\n\r\n    channels = [];\r\n    routerUrl;\r\n\r\n    @Input('authUser') authUser;\r\n    @Output('closeSidenav') closeSidenav = new EventEmitter();\r\n\r\n    constructor(\r\n        public auth: AuthService,\r\n        private channelsService: ChannelsService,\r\n        public router: Router,\r\n        private subject: SubjectService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.router.events.subscribe(ev => {\r\n            if (ev instanceof NavigationEnd) {\r\n                this.routerUrl = ev.url;\r\n            }\r\n        });\r\n\r\n\r\n        this.channelsService.getUserChannelSubscriptions({user_id: this.authUser.id}).subscribe(dt => {\r\n            this.channels = dt;\r\n        });\r\n\r\n        this.subject.getUserSubscriptions().subscribe(dt => {\r\n            this.channels = dt;\r\n        });\r\n    }\r\n\r\n    drop(event: CdkDragDrop<string[]>) {\r\n        // this.channels = moveItemInArray(this.channels, event.previousIndex, event.currentIndex);\r\n\r\n    }\r\n\r\n    dragDropped(e, channel) {\r\n        // console.log(e)\r\n        // console.log(channel)\r\n        this.channels = moveItemInArray(this.channels, e.previousIndex, e.currentIndex);\r\n        // console.log(this.channels)\r\n        const sendData = {\r\n            rows: JSON.stringify(this.channels),\r\n            channel_id: channel.id,\r\n            user_id: this.authUser.id\r\n        };\r\n        this.channelsService.changeSubscriptionPriority(sendData).subscribe(dt => {\r\n        });\r\n    }\r\n\r\n    async openChannelPage(channel) {\r\n        this.closeSidenav.emit(true);\r\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(async () =>\r\n            await this.router.navigate(['channels/show'], {queryParams: {username: channel.user.username}})\r\n        );\r\n    }\r\n\r\n    async viewAllSubscriptions() {\r\n        await this.router.navigate(['channels/subscriptions']);\r\n        this.closeSidenav.emit(true);\r\n    }\r\n\r\n}\r\n","<div class=\"logo-container\" *ngIf=\"isSmallScreen\">\r\n    <img class=\"header-left-logo navbar-brand\" src=\"assets/img/logo.png\" (click)=\"changePage('/')\">\r\n</div>\r\n<div id=\"left-sidebar\">\r\n    <div id=\"left-menu\">\r\n        <app-section-links (closeSidenav)=\"closeSidenav.emit($event)\"></app-section-links>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"auth.loggedIn()\">\r\n        <div id=\"channel-subscriptions\">\r\n            <app-channel-subscriptions [authUser]=\"authUser\"></app-channel-subscriptions>\r\n        </div>\r\n\r\n        <div id=\"stock-lists\">\r\n            <app-stocks-lists-portable [authUser]=\"authUser\"></app-stocks-lists-portable>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {CdkDragDrop} from '@angular/cdk/drag-drop';\r\nimport {ActivationEnd, NavigationEnd, Router} from '@angular/router';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {API_URL, MAIN_SECTIONS} from '@core/constants/global';\r\nimport {moveItemInArray} from '@core/helpers/move-item-in-array';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {AuthService} from '@core/services/auth.service';\r\nimport {environment} from '@env';\r\nimport {StocksService} from '@core/services/stocks.service';\r\nimport IsResponsive from '@core/helpers/is-responsive';\r\n\r\n@Component({\r\n    selector: 'app-left-sidebar',\r\n    templateUrl: './left-sidebar.component.html',\r\n    styleUrls: ['./left-sidebar.component.scss']\r\n})\r\nexport class LeftSidebarComponent implements OnInit {\r\n\r\n    apiUrl = API_URL;\r\n    authUser;\r\n    routerUrl;\r\n    envName;\r\n    isSmallScreen = IsResponsive.isSmallScreen();\r\n\r\n\r\n    @Output('closeSidenav') closeSidenav = new EventEmitter();\r\n\r\n    constructor(\r\n        public router: Router,\r\n        private channelsService: ChannelsService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        public auth: AuthService,\r\n        private subject: SubjectService,\r\n    ) {\r\n        this.envName = environment.envName;\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.router.events.subscribe(ev => {\r\n            if (ev instanceof NavigationEnd) {\r\n                this.routerUrl = ev.url;\r\n            } else if (ev instanceof ActivationEnd) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    changePage(route, params = {}) {\r\n        this.closeSidenav.emit(true);\r\n        this.router.navigateByUrl('/test', {skipLocationChange: true}).then(async () =>\r\n            await this.router.navigate([route], {queryParams: params})\r\n        );\r\n    }\r\n}\r\n","<ng-container *ngFor=\"let section of mainSections;let i = index\">\r\n    <div class=\"left-menu-main\" [class.st-left-menu]=\"i===0\" [class.active]=\"router.url === section.link\"\r\n         (click)=\"changePage(section.link)\" *ngIf=\"(section.auth && auth.loggedIn()) || !section.auth\"\r\n         [hidden]=\"!section.production && envName==='production'\">\r\n        <mat-icon *ngIf=\"section.icon\">{{section.icon}}</mat-icon>\r\n        <img *ngIf=\"section.img\" [src]=\"'assets/img/'+section.img+'.png'\" alt=\"section-icon\">\r\n        <p>{{section.name}}</p>\r\n    </div>\r\n    <div class=\"line-item\" *ngIf=\"auth.loggedIn() && section.separator\"></div>\r\n</ng-container>\r\n\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {MAIN_SECTIONS} from '@core/constants/global';\r\nimport {Router} from '@angular/router';\r\nimport {environment} from '@env';\r\nimport {AuthService} from '@core/services/auth.service';\r\n\r\n@Component({\r\n    selector: 'app-section-links',\r\n    templateUrl: './section-links.component.html',\r\n    styleUrls: ['./section-links.component.scss']\r\n})\r\nexport class SectionLinksComponent implements OnInit {\r\n    mainSections = MAIN_SECTIONS;\r\n    envName;\r\n\r\n    @Output('closeSidenav') closeSidenav = new EventEmitter();\r\n\r\n    constructor(\r\n        public router: Router,\r\n        public auth: AuthService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.envName = environment.envName;\r\n    }\r\n\r\n    changePage(route, params = {}) {\r\n        this.closeSidenav.emit(true);\r\n        this.router.navigateByUrl('/test', {skipLocationChange: true}).then(async () =>\r\n            await this.router.navigate([route], {queryParams: params})\r\n        );\r\n    }\r\n\r\n}\r\n","<div class=\"stocks-watchlist\" id=\"sidebar-watchlist\" *ngIf=\"auth.loggedIn() && !isSmallScreen\">\r\n    <ul class=\"nav nav-tabs\" id=\"watchlist\">\r\n        <li class=\"nav-item\" (click)=\"changeTab('watchlist')\">\r\n            <a class=\"nav-link\" [class.active]=\"activeTab.name==='watchlist'\" id=\"watchlist-tab\">My Watchlist</a>\r\n        </li>\r\n        <li class=\"nav-item\" (click)=\"changeTab('today')\">\r\n            <a class=\"nav-link active\" [class.active]=\"activeTab.name==='today'\" id=\"today-tab\">Today</a>\r\n        </li>\r\n    </ul>\r\n    <div class=\"spinner-container\">\r\n        <mat-spinner [diameter]=\"15\" *ngIf=\"dataLoading==='loading'\"></mat-spinner>\r\n    </div>\r\n    <ng-template #noStocks>\r\n        <small class=\"error\" [hidden]=\"dataLoading==='loading'\">No stocks added to watchlist</small>\r\n    </ng-template>\r\n    <div class=\"tab-content\" id=\"watchlistContent\" [hidden]=\"activeTab.name!=='watchlist'\">\r\n\r\n        <app-stocks-list-sample [stocks]=\"userStocks\" [userStocks]=\"userStocks\" [portable]=\"true\"\r\n                                [followAllowed]=\"false\"\r\n                                [editPortable]=\"true\"\r\n                                *ngIf=\"userStocks?.length > 0\" [sort]=\"selectedSortType\"\r\n                                (updatedStocksList)=\"updateFollowedLists($event)\"></app-stocks-list-sample>\r\n\r\n        <p (click)=\"viewFullWatchlist()\" class=\"see-more\"\r\n           *ngIf=\"(dataLoading!=='loading' && userStocks?.length > 0) else noStocks\">\r\n            See more\r\n        </p>\r\n\r\n\r\n    </div>\r\n    <div class=\"tab-content\" id=\"todayContent\" [hidden]=\"activeTab.name!=='today'\">\r\n\r\n        <app-stocks-list-sample [stocks]=\"indices\" [userStocks]=\"userStocks\" [followAllowed]=\"false\"\r\n                                (updatedStocksList)=\"updateFollowedLists($event)\" *ngIf=\"dataLoading==='finished'\"\r\n                                [portable]=\"true\"></app-stocks-list-sample>\r\n        <p (click)=\"viewFullWatchlist()\" *ngIf=\"!routerUrl?.includes('analytics') && dataLoading==='finished'\"\r\n           class=\"see-more\">\r\n            See more\r\n        </p>\r\n\r\n    </div>\r\n</div>\r\n<img class=\"ads\" [hidden]=\"true\" src=\"assets/img/ads.png\">\r\n<img class=\"ads\" [hidden]=\"true\" src=\"assets/img/ads.png\">\r\n","import {ChangeDetectorRef, Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {AuthService} from '@core/services/auth.service';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {StocksService} from '@core/services/stocks.service';\r\nimport {NavigationEnd, Router, RoutesRecognized} from '@angular/router';\r\nimport IsResponsive from '@core/helpers/is-responsive';\r\nimport {Subscription} from 'rxjs';\r\nimport {LoaderService} from '@core/services/loader.service';\r\n\r\n@Component({\r\n    selector: 'app-stocks-lists-portable',\r\n    templateUrl: './stocks-lists-portable.component.html',\r\n    styleUrls: ['./stocks-lists-portable.component.scss']\r\n})\r\nexport class StocksListsPortableComponent implements OnInit, OnDestroy {\r\n\r\n    @Input('authUser') authUser;\r\n    routerUrl;\r\n    userStocks;\r\n    activeTab = {name: 'watchlist'};\r\n    selectedSortType;\r\n\r\n    stocks;\r\n    indices;\r\n\r\n    isSmallScreen = IsResponsive.isSmallScreen();\r\n    dataLoading = 'idle';\r\n\r\n    subscriptions: Subscription[] = [];\r\n    authDataLoaded = false;\r\n\r\n    constructor(\r\n        public router: Router,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        public auth: AuthService,\r\n        private subject: SubjectService,\r\n        private stocksService: StocksService,\r\n        private cdr: ChangeDetectorRef,\r\n        private loader: LoaderService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n\r\n        this.authUser = this.getAuthUser.transform();\r\n        this.selectedSortType = this.authUser.stocks_order_type;\r\n\r\n        this.subscriptions.push(this.router.events.subscribe(ev => {\r\n            if (ev instanceof RoutesRecognized) {\r\n                if (ev.url !== '/test') {\r\n                    this.routerUrl = ev.url;\r\n                    // if (!this.routerUrl?.includes('analytics')) {\r\n                    // this.getIndices();  //@todo responsible for indices refresh on every page change\r\n                    // }\r\n                }\r\n\r\n            }\r\n        }));\r\n\r\n\r\n        if (this.authUser) {\r\n            this.subscriptions.push(this.subject.currentUserStocks.subscribe((dt: any) => {\r\n                this.userStocks = dt.stocks;\r\n                // this.getStockTypes();\r\n\r\n                this.cdr.detectChanges();\r\n                this.loader.hide();\r\n            }));\r\n\r\n\r\n            this.getUserStocks();\r\n            this.getIndices(); // @todo remove if refreshing implemented\r\n        }\r\n\r\n        this.subscriptions.push(this.subject.getStocksData().subscribe(dt => {\r\n            this.stocks = dt;\r\n            this.cdr.detectChanges();\r\n        }));\r\n\r\n\r\n    }\r\n\r\n\r\n    getIndices() {\r\n        this.subscriptions.push(this.stocksService.getIndices({}).subscribe(dt => {\r\n            this.indices = dt;\r\n            this.subject.changeIndices(dt);\r\n        }));\r\n    }\r\n\r\n\r\n    openStockProfile(stock) {\r\n        this.router.navigateByUrl('/test', {skipLocationChange: true}).then(async () =>\r\n            await this.router.navigate([`stocks/${stock}/analytics`])\r\n        );\r\n    }\r\n\r\n    changeTab(tab) {\r\n        this.activeTab.name = tab;\r\n    }\r\n\r\n    getUserStocks() {\r\n        this.dataLoading = 'loading';\r\n        this.subscriptions.push(this.stocksService.getUserStocks({\r\n            user_id: this.authUser.id,\r\n            sort_type: this.authUser.stocks_order_type?.name\r\n        }).subscribe(dt => {\r\n            this.selectedSortType = dt?.stocks_order_type;\r\n            this.userStocks = dt?.user_stocks || [];\r\n            this.dataLoading = 'finished';\r\n            this.subject.changeUserStocks({stocks: this.userStocks, empty: this.userStocks.length === 0});\r\n        }));\r\n\r\n\r\n    }\r\n\r\n    updateFollowedLists(stocks) {\r\n\r\n        this.subscriptions.push(this.stocksService.updateFollowedStocks({user_id: this.authUser.id, ...{stocks}}).subscribe(dt => {\r\n            this.userStocks = dt?.user_stocks || [];\r\n\r\n            this.subject.changeUserStocks({stocks: this.userStocks, empty: this.userStocks.length === 0});\r\n        }));\r\n    }\r\n\r\n    async viewFullWatchlist() {\r\n        await this.router.navigate(['channels/show'], {\r\n            queryParams: {\r\n                username: this.authUser.username,\r\n                tab: 'watchlist'\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n}\r\n","<nav class=\"home-header navbar navbar-expand-lg navbar-light\">\r\n    <div>\r\n        <img class=\"navbar-brand\" src=\"assets/img/logo.png\" (click)=\"router.navigate(['/'])\">\r\n    </div>\r\n\r\n    <!-- Search videos for responsive mode-->\r\n    <div *ngIf=\"!routerUrl?.includes('analytics')\">\r\n        <app-search-videos-form class=\"d-block d-lg-none mb-0 flex-1\"\r\n                                (search)=\"searchVideos($event)\"></app-search-videos-form>\r\n    </div>\r\n    <div class=\"right-side-actions d-sm-flex d-md-flex d-lg-none d-block\">\r\n        <button class=\"navbar-toggler\" type=\"button\" (click)=\"closeSidenav.emit(false)\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <button data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" id=\"top-row-toggle\">\r\n            <mat-icon>more_vert</mat-icon>\r\n        </button>\r\n    </div>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <div class=\"header-right nav-menu\">\r\n            <app-search-videos-form class=\"d-none d-lg-block\" *ngIf=\"!routerUrl?.includes('analytics')\"\r\n                                    (search)=\"searchVideos($event)\"></app-search-videos-form>\r\n            <app-search-stocks-form class=\"d-none d-lg-block\" [autocomplete]=\"true\" [openStockOnEnter]=\"true\"\r\n                                    *ngIf=\"routerUrl?.includes('analytics')\" [groupResults]=\"true\"\r\n                                    (search)=\"searchStocks($event)\"></app-search-stocks-form>\r\n            <marquee class=\"home-black-block marquee\" direction=\"left\" height=\"40px\" (click)=\"openModal()\"\r\n                     *ngIf=\"stocks\">\r\n                <div class=\"marquee-content\">\r\n                    <div class=\"home-black-item\" *ngFor=\"let stock of stocks\">\r\n                        <p class=\"black-text\">{{stock.symbol}}</p>\r\n                        <p class=\"black-percent\"\r\n                           [ngClass]=\"getPercentageDetails(stock)?.color\">{{getPercentageDetails(stock)?.value}}%</p>\r\n                    </div>\r\n                </div>\r\n                <!--            <i class=\"down-white fa fa-chevron-down\"></i>-->\r\n            </marquee>\r\n            <div class=\"notification-block\">\r\n                <div class=\"nav-item dropdown\" [hidden]=\"envName==='production'\">\r\n                    <a class=\"header-bit-btn nav-lin\" data-toggle=\"dropdown\">Buy Bits</a>\r\n                    <div class=\"dropdown-menu\">\r\n                        <app-purchase-bits></app-purchase-bits>\r\n                    </div>\r\n                </div>\r\n                <div class=\"notification\" [hidden]=\"envName==='production'\">\r\n                    <i class=\"fas fa-bell\"></i>\r\n                    <span>+99</span>\r\n                </div>\r\n                <a class=\"header-login-btn\" *ngIf=\"!auth.loggedIn()\" (click)=\"router.navigate(['auth/login'])\">Login</a>\r\n\r\n                <div class=\"nav-item dropdown\" *ngIf=\"auth.loggedIn()\">\r\n                    <img src=\"assets/img/user.svg\" data-toggle=\"dropdown\"\r\n                         class=\"user-icon nav-link dropdown-toggle\">\r\n                    <div class=\"dropdown-menu\">\r\n                    <span class=\"dropdown-item\" *ngIf=\"toggleMyProfileLink()\"\r\n                          (click)=\"router.navigate(['user/profile'])\">My Profile</span>\r\n                        <span class=\"dropdown-item\" *ngIf=\"toggleMyChannelLink()\"\r\n                              (click)=\"goToChannelPage()\">My Channel</span>\r\n                        <span class=\"dropdown-item\" (click)=\"logout()\">Logout</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"dotes\">\r\n                    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n                        <i class=\"fas fa-ellipsis-v\"></i>\r\n                    </button>\r\n                    <mat-menu #menu=\"matMenu\">\r\n                        <ng-container *ngFor=\"let l of additionalLinks\">\r\n                            <button mat-menu-item (click)=\"changePage(l)\">\r\n                                {{l.name}}\r\n                            </button>\r\n                        </ng-container>\r\n                    </mat-menu>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</nav>\r\n","import {Component, EventEmitter, OnInit, Output, TemplateRef} from '@angular/core';\r\nimport {ActivatedRoute, ActivationEnd, NavigationEnd, Router} from '@angular/router';\r\nimport {AuthService} from '@core/services/auth.service';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {NAVBAR_ADDITIONAL_LINKS} from '@core/constants/global';\r\nimport {environment} from '@env';\r\nimport {StocksService} from '@core/services/stocks.service';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {StocksListsModalComponent} from '@shared/components/stocks-lists-modal/stocks-lists-modal.component';\r\nimport IsResponsive from '@core/helpers/is-responsive';\r\n\r\n@Component({\r\n    selector: 'app-navbar',\r\n    templateUrl: './navbar.component.html',\r\n    styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n    authUser;\r\n    routerUrl;\r\n    isSmallScreen = IsResponsive.isSmallScreen();\r\n\r\n    envName = environment.envName;\r\n\r\n\r\n    @Output('search') search = new EventEmitter();\r\n    @Output('closeSidenav') closeSidenav = new EventEmitter();\r\n    additionalLinks = NAVBAR_ADDITIONAL_LINKS;\r\n\r\n    passedUsername;\r\n\r\n    stocks;\r\n\r\n    constructor(\r\n        public router: Router,\r\n        public auth: AuthService,\r\n        private modalService: BsModalService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private subject: SubjectService,\r\n        private stocksService: StocksService,\r\n        private route: ActivatedRoute,\r\n        private dialog: MatDialog\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.authUser = this.getAuthUser.transform();\r\n\r\n        this.router.events.subscribe(ev => {\r\n            if (ev instanceof NavigationEnd) {\r\n                this.routerUrl = ev.url;\r\n            } else if (ev instanceof ActivationEnd) {\r\n                this.passedUsername = ev.snapshot.queryParams.username;\r\n            }\r\n        });\r\n\r\n        this.getDailyStocks();\r\n\r\n    }\r\n\r\n    openModal() {\r\n        if (this.auth.loggedIn()) {\r\n            this.dialog.open(StocksListsModalComponent, {\r\n                maxWidth: '100vw',\r\n                maxHeight: '100vh',\r\n                height: '100%',\r\n                width: '100%',\r\n                panelClass: 'stocks-lists-modal'\r\n            }).afterClosed().subscribe(dt => {\r\n            });\r\n        }\r\n    }\r\n\r\n    logout() {\r\n        this.auth.logout().subscribe(async () => {\r\n            localStorage.removeItem('token');\r\n            await this.router.navigate(['/']);\r\n        });\r\n    }\r\n\r\n    searchVideos(e) {\r\n        // this.subject.setVideosSearch(this.searchVideosForm.value);\r\n        this.search.emit({...e, searchType: 'videos'});\r\n    }\r\n\r\n    searchStocks(e) {\r\n        this.search.emit({...e, searchType: 'stocks'});\r\n    }\r\n\r\n    toggleMyProfileLink() {\r\n        return !this.router.url.includes('user/profile');\r\n    }\r\n\r\n    toggleMyChannelLink() {\r\n        return !this.router.url.includes('channels/show') || this.passedUsername !== this.authUser.username;\r\n    }\r\n\r\n    async changePage(l) {\r\n        await this.router.navigate([l.link]);\r\n    }\r\n\r\n    getDailyStocks() {\r\n        this.stocksService.getDailyStocks({}).subscribe(dt => {\r\n            this.stocks = dt;\r\n            this.subject.setStocksData(dt);\r\n        });\r\n    }\r\n\r\n    getPercentageValue(stock) {\r\n        return stock.changesPercentage.replace(/[(%)]/g, '');\r\n    }\r\n\r\n    getPercentageDetails(stock) {\r\n        const value = stock.changesPercentage.replace(/[(%)]/g, '');\r\n        return {...{value}, color: 'black-percent-' + (+value > 0 ? 'green' : 'red')};\r\n\r\n    }\r\n\r\n    goToChannelPage() {\r\n        this.router.navigateByUrl('/test', {skipLocationChange: true}).then(async () =>\r\n            this.router.navigate(['channels/show'], {queryParams: {username: this.authUser.username}})\r\n        );\r\n    }\r\n\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {AbstractControl, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {PlaylistsService} from '@core/services/playlists.service';\r\n\r\n@Component({\r\n    selector: 'app-add-playlist-dialog',\r\n    templateUrl: './add-playlist-dialog.component.html',\r\n    styleUrls: ['./add-playlist-dialog.component.scss']\r\n})\r\nexport class AddPlaylistDialogComponent implements OnInit {\r\n    addPlaylistForm: FormGroup;\r\n    isSubmitted = false;\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private modal: MatDialogRef<AddPlaylistDialogComponent>,\r\n        private fb: FormBuilder,\r\n        private playlistService: PlaylistsService\r\n    ) {\r\n        console.log(data)\r\n        this.addPlaylistForm = this.fb.group({\r\n            channel_id: data.channel_id,\r\n            name: ['', Validators.required],\r\n            description: ['', Validators.required],\r\n            privacy: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    createPlaylist() {\r\n        this.isSubmitted = true;\r\n        if (this.addPlaylistForm.valid) {\r\n            this.playlistService.addPlaylist(this.addPlaylistForm.value).subscribe(dt => {\r\n                this.modal.close();\r\n            });\r\n        }\r\n    }\r\n\r\n    cancel() {\r\n        this.modal.close();\r\n    }\r\n\r\n    get nameCtrl(): AbstractControl {\r\n        return this.addPlaylistForm.get('name');\r\n    }\r\n\r\n    get privacyCtrl(): AbstractControl {\r\n        return this.addPlaylistForm.get('privacy');\r\n    }\r\n\r\n    get descCtrl(): AbstractControl {\r\n        return this.addPlaylistForm.get('description');\r\n    }\r\n\r\n\r\n}\r\n","<div class=\"add-playlist-modal\">\r\n    <form [formGroup]=\"addPlaylistForm\">\r\n        <input type=\"text\" placeholder=\"Playlist Name\" formControlName=\"name\">\r\n        <span class=\"error\" *ngIf=\"nameCtrl.hasError('required') && isSubmitted\">Playlist name is required</span>\r\n\r\n        <textarea id=\"playlist-description\" cols=\"30\" rows=\"10\" formControlName=\"description\"\r\n                  placeholder=\"Playlist Description\"></textarea>\r\n        <span class=\"error\" *ngIf=\"descCtrl.hasError('required') && isSubmitted\">Playlist description is required</span>\r\n\r\n        <div class=\"select\">\r\n            <select id=\"visibility\" formControlName=\"privacy\">\r\n                <option [value]=\"''\">Visibility</option>\r\n                <option [value]=\"0\">Public</option>\r\n                <option [value]=\"1\">Private</option>\r\n            </select>\r\n        </div>\r\n        <span class=\"error\" *ngIf=\"privacyCtrl.hasError('required') && isSubmitted\">Playlist privacy is required</span>\r\n\r\n        <div class=\"btn-wrap\">\r\n            <button class=\"btn cancel\" (click)=\"cancel()\">Cancel</button>\r\n            <button class=\"btn create\" (click)=\"createPlaylist()\">Create</button>\r\n        </div>\r\n    </form>\r\n</div>\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-add-stock-dialog',\r\n    templateUrl: './add-stock-dialog.component.html',\r\n    styleUrls: ['./add-stock-dialog.component.scss']\r\n})\r\nexport class AddStockDialogComponent implements OnInit {\r\n    addStockForm: FormGroup;\r\n\r\n    constructor(\r\n        private fb: FormBuilder\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n}\r\n","<form [formGroup]=\"addStockForm\">\r\n\r\n</form>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {PlaylistsService} from '@core/services/playlists.service';\r\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\n\r\n@Component({\r\n    selector: 'app-add-video-to-another-playlist',\r\n    templateUrl: './add-video-to-another-playlist.component.html',\r\n    styleUrls: ['./add-video-to-another-playlist.component.scss']\r\n})\r\nexport class AddVideoToAnotherPlaylistComponent implements OnInit {\r\n    playlists;\r\n    saveToPlaylistsForm: FormGroup;\r\n    addPlaylistForm: FormGroup;\r\n    videoId;\r\n    authUser;\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private playlistsService: PlaylistsService,\r\n        private fb: FormBuilder,\r\n        private dialog: MatDialogRef<AddVideoToAnotherPlaylistComponent>,\r\n        private getAuthUser: GetAuthUserPipe\r\n    ) {\r\n        this.videoId = data.video_id;\r\n        this.playlists = data.playlists;\r\n        this.authUser = this.getAuthUser.transform();\r\n        this.saveToPlaylistsForm = this.fb.group({\r\n            video_id: [this.videoId, Validators.required],\r\n            playlists: this.fb.array(\r\n                this.getPlaylistsFormGroup(this.playlists)\r\n            )\r\n        });\r\n\r\n        this.addPlaylistForm = this.fb.group({\r\n            name: ['', Validators.required],\r\n            channel_id: [this.authUser?.channel?.id],\r\n            privacy: ['']\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    getPlaylistsFormGroup(playlists) {\r\n        const ret = [];\r\n        playlists.map(p => {\r\n            const found = p.videos.find(v => v.id === this.videoId);\r\n            ret.push(this.fb.group({id: p.id, name: p.name, privacy: p.privacy, checked: !!found}));\r\n        });\r\n        console.log(ret)\r\n        return ret;\r\n    }\r\n\r\n    addToPlaylist(e, control) {\r\n\r\n        control.patchValue({checked: e.target.checked});\r\n        // console.log(this.playlistForm.value)\r\n        // const value = id;\r\n        // if (e.target.checked && !this.playlistIds.controls.find(c => c.value === value)) {\r\n        //     // this.playlistIds.push(new FormControl(value));\r\n        // } else {\r\n        //     let i = 0;\r\n        //     this.playlistIds.controls.forEach((item: FormControl) => {\r\n        //         if (+item.value === value) {\r\n        //             console.log('removing')\r\n        //             // this.playlistIds.removeAt(i);\r\n        //             return;\r\n        //         }\r\n        //         i++;\r\n        //     });\r\n        // }\r\n    }\r\n\r\n    checkIfVideoInPlaylist(videoId, playlist) {\r\n        const found = playlist.videos.find(v => v.id === videoId);\r\n        if (found && !this.playlistIds.controls.find(c => c.value === videoId)) {\r\n            this.playlistIds.push(new FormControl(videoId));\r\n        }\r\n    }\r\n\r\n    save() {\r\n        this.playlistsService.addVideoToOtherPlaylists(this.saveToPlaylistsForm.value).subscribe(dt => {\r\n            this.dialog.close();\r\n        });\r\n    }\r\n\r\n    addPlaylist() {\r\n        this.playlistsService.addPlaylist(this.addPlaylistForm.value).subscribe(dt => {\r\n            this.playlistIds.controls.push(this.fb.group({\r\n                id: dt.id,\r\n                name: dt.name,\r\n                privacy: +dt.privacy,\r\n                checked: true\r\n            }));\r\n            this.addPlaylistForm.patchValue({name: '', privacy: ''});\r\n        });\r\n    }\r\n\r\n    get playlistIds() {\r\n        return this.saveToPlaylistsForm.controls.playlists as FormArray;\r\n    }\r\n\r\n}\r\n","<div class=\"save-to-playlists-popup\">\r\n    <div class=\"save-to-playlists-form\">\r\n        <h2>Save to...</h2>\r\n        <form [formGroup]=\"saveToPlaylistsForm\">\r\n            <ul formArrayName=\"playlists\">\r\n                <li *ngFor=\"let c of playlistIds.controls;let i = index\" class=\"playlist\">\r\n\r\n                    <div class=\"d-flex justify-content-between\" [formGroupName]=\"i\">\r\n                        <div class=\"d-flex align-items-center\">\r\n                            <input type=\"hidden\" formControlName=\"id\">\r\n                            <input type=\"checkbox\" [id]=\"'playlist-'+(i+1)\" formControlName=\"checked\"\r\n                                   (change)=\"addToPlaylist($event, c)\">\r\n                            <label [for]=\"'playlist-'+(i+1)\">{{c.value.name}}</label>\r\n                        </div>\r\n                        <mat-icon>{{c.value.privacy ? 'lock' : 'public'}}</mat-icon>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n\r\n            <button class=\"btn save-playlists\" (click)=\"save()\">Save</button>\r\n        </form>\r\n    </div>\r\n\r\n    <div class=\"new-playlist\">\r\n        <form [formGroup]=\"addPlaylistForm\">\r\n\r\n            <h2><i class=\"fas fa-plus\"></i> Create new playlist</h2>\r\n\r\n            <div class=\"input\">\r\n                <input type=\"text\" placeholder=\"Playlist Title\" formControlName=\"name\">\r\n            </div>\r\n\r\n            <div class=\"select\">\r\n                <select name=\"\" id=\"privacy\" formControlName=\"privacy\">\r\n                    <option [value]=\"''\">Visibility</option>\r\n                    <option [value]=\"0\">Public</option>\r\n                    <option [value]=\"1\">Private</option>\r\n                </select>\r\n            </div>\r\n            <button class=\"btn\" (click)=\"addPlaylist()\">Add playlist</button>\r\n        </form>\r\n    </div>\r\n\r\n</div>\r\n","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {PlaylistsService} from '@core/services/playlists.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\n@Component({\r\n    selector: 'app-add-video-to-playlist-dialog',\r\n    templateUrl: './add-video-to-playlist-dialog.component.html',\r\n    styleUrls: ['./add-video-to-playlist-dialog.component.scss']\r\n})\r\nexport class AddVideoToPlaylistDialogComponent implements OnInit {\r\n    activeTab = 'yours';\r\n    authUser;\r\n    currentUser;\r\n    selectedVideos = [];\r\n    playlist;\r\n\r\n\r\n    @ViewChild('urlInput') urlInput;\r\n\r\n    constructor(\r\n        private modal: MatDialogRef<AddVideoToPlaylistDialogComponent>,\r\n        private videoService: VideoService,\r\n        private playlistsService: PlaylistsService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private toastr: ToastrService,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n    ) {\r\n        this.playlist = data.playlist;\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    selectVideo(videos) {\r\n        this.selectedVideos = videos;\r\n    }\r\n\r\n    changeTab(tab) {\r\n        this.activeTab = tab;\r\n        this.selectedVideos = [];\r\n    }\r\n\r\n\r\n    addVideos() {\r\n        if (this.selectedVideos.length > 0) {\r\n            const params = {playlist_id: this.playlist.id, video_ids: JSON.stringify(this.selectedVideos)};\r\n            this.playlistsService.addVideosToPlaylist(params).subscribe(dt => {\r\n                this.modal.close();\r\n            });\r\n        } else {\r\n            this.toastr.error('Please select at least one video', 'No videos selected');\r\n        }\r\n    }\r\n\r\n    cancel() {\r\n        this.modal.close();\r\n    }\r\n\r\n    ifSubmitInactive(activeTab) {\r\n        if (activeTab === 'yours') {\r\n            return this.currentUser?.videos?.length === 0;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","<div class=\"add-video-playlist-modal\">\r\n    <div class=\"content-wrap\">\r\n        <h1 class=\"title\">Add videos to playlist</h1>\r\n\r\n        <div class=\"content\">\r\n            <div class=\"tab-list\">\r\n                <ul>\r\n                    <li>\r\n                        <a class=\"nav-link\" [class.active]=\"activeTab==='search'\" (click)=\"changeTab('search')\">\r\n                            Video search\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a class=\"nav-link\" [class.active]=\"activeTab==='url'\" (click)=\"changeTab('url')\">URL</a>\r\n                    </li>\r\n                    <li>\r\n                        <a class=\"nav-link\" [class.active]=\"activeTab==='yours'\" (click)=\"changeTab('yours')\">\r\n                            Your videos\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div class=\"tab-items\">\r\n\r\n                <app-search-videos-tab *ngIf=\"activeTab==='search'\" [playlist]=\"playlist\"\r\n                                       (selectVideo)=\"selectVideo($event)\"></app-search-videos-tab>\r\n                <app-video-url-tab *ngIf=\"activeTab==='url'\" [playlist]=\"playlist\"\r\n                                   (selectVideo)=\"selectVideo($event)\"></app-video-url-tab>\r\n                <app-your-videos-tab *ngIf=\"activeTab==='yours'\" [currentUser]=\"currentUser\" [authUser]=\"authUser\"\r\n                                     [playlist]=\"playlist\" (selectVideo)=\"selectVideo($event)\">\r\n                </app-your-videos-tab>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"btn-wrap\">\r\n        <button class=\"btn cancel\" (click)=\"cancel()\">Cancel</button>\r\n        <button class=\"btn add-videos\" (click)=\"addVideos()\" [disabled]=\"ifSubmitInactive(activeTab)\">Add videos\r\n        </button>\r\n    </div>\r\n\r\n</div>\r\n","<div class=\"tab1\">\r\n    <div class=\"input-wrap\">\r\n        <app-search-videos-form (search)=\"searchVideos($event)\"></app-search-videos-form>\r\n    </div>\r\n    <ng-container *ngIf=\"searchedVideos.length > 0\">\r\n        <div class=\"video-item\" [class.selected]=\"checkIfVideoSelected(video.id)\"\r\n             [class.added]=\"getSelectedVideos.checkIfVideoAddedToPlaylist(video, playlist)\"\r\n             *ngFor=\"let video of searchedVideos\" (click)=\"selectVideo(video)\">\r\n            <div class=\"video-container\">\r\n                <div class=\"img\">\r\n                    <span class=\"added-placeholder\"></span>\r\n                    <img class=\"thumbnail\" [src]=\"video.thumbnail|getImgPath\">\r\n                    <span class=\"duration\">{{video.duration}}</span>\r\n                </div>\r\n\r\n                <div class=\"details\">\r\n                    <div class=\"title\">\r\n                        <h4 class=\"\">{{video.name}}</h4>\r\n                    </div>\r\n                    <div class=\"shortened-details\">\r\n                        <span class=\"channel-name\">{{video.channel.name}}</span>\r\n                        <span class=\"dot\">&middot;</span>\r\n                        <span class=\"watchers-count\">\r\n                            {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\r\n                        </span>\r\n                        <span class=\"dot\">&middot;</span>\r\n                        <span class=\"upload-time\">{{video.created_at|dateFromNow}}</span>\r\n                    </div>\r\n\r\n                    <div class=\"desc-tags\">\r\n                        <p class=\"shortened-description\">{{video.description}}</p>\r\n                        <div class=\"tags\">\r\n                            <ul>\r\n                                <li *ngFor=\"let tag of video?.tags\" (click)=\"getVideosByTag(tag.name)\">\r\n                                    <span>{{tag.name}}</span>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n    <div class=\"no-results-found\" *ngIf=\"searchedVideos.length === 0 && searched\">\r\n        <span>No search results found</span>\r\n    </div>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {GetSelectedVideosToBeAddedToPlaylistPipe} from '@shared/pipes/get-selected-videos-to-be-added-to-playlist.pipe';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-search-videos-tab',\r\n    templateUrl: './search-videos-tab.component.html',\r\n    styleUrls: ['./search-videos-tab.component.scss']\r\n})\r\nexport class SearchVideosTabComponent implements OnInit {\r\n    searchedVideos = [];\r\n    selectedVideos = [];\r\n    searched = false;\r\n\r\n    @Input('playlist') playlist;\r\n    @Output('selectVideo') selectVid = new EventEmitter();\r\n\r\n    constructor(\r\n        private videoService: VideoService,\r\n        public getSelectedVideos: GetSelectedVideosToBeAddedToPlaylistPipe,\r\n        public router: Router\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    searchVideos(e) {\r\n        console.log('searched')\r\n        this.searched = true;\r\n        this.videoService.searchInAllVideos(e).subscribe(dt => {\r\n            this.searchedVideos = dt;\r\n        });\r\n    }\r\n\r\n    checkIfVideoSelected(id) {\r\n        return this.selectedVideos.find(v => v === id);\r\n    }\r\n\r\n    selectVideo(video) {\r\n        this.selectedVideos = this.getSelectedVideos.transform(video, this.selectedVideos, this.playlist);\r\n        this.selectVid.emit(this.selectedVideos);\r\n    }\r\n\r\n    async getVideosByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n}\r\n","<div class=\"tab2\">\r\n    <div class=\"input-wrap\" id=\"search-by-url-input\">\r\n        <div class=\"input\">\r\n            <form [formGroup]=\"searchVideoByUrlForm\">\r\n                <input type=\"text\" placeholder=\"Paste URL here\" #urlInput\r\n                       (keyup.enter)=\"getUrlString($event.target.value)\"\r\n                       (paste)=\"getUrlString($event)\" formControlName=\"url\">\r\n                <mat-hint>Please put only Metl.tv URLs here</mat-hint>\r\n                <span *ngIf=\"urlCtrl.hasError('patternInvalid')\" class=\"error\">Please provide a valid URL</span>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    <mat-spinner *ngIf=\"searchingVideo\" [diameter]=\"15\"></mat-spinner>\r\n    <ng-container *ngIf=\"searchedVideos.length > 0\">\r\n        <div class=\"video-item\" [class.selected]=\"checkIfVideoSelected(video.id)\"\r\n             [class.added]=\"getSelectedVideos.checkIfVideoAddedToPlaylist(video, playlist)\"\r\n             *ngFor=\"let video of searchedVideos\" (click)=\"selectVideo(video)\">\r\n            <div class=\"video-container\">\r\n                <div class=\"img\">\r\n                    <span class=\"added-placeholder\"></span>\r\n                    <img class=\"thumbnail\" [src]=\"video.thumbnail|getImgPath\">\r\n                    <span class=\"duration\">{{video.duration}}</span>\r\n                </div>\r\n\r\n                <div class=\"details\">\r\n                    <div class=\"title\">\r\n                        <h4 class=\"\">{{video.name}}</h4>\r\n                    </div>\r\n                    <div class=\"shortened-details\">\r\n                        <span class=\"channel-name\">{{video.channel.name}}</span>\r\n                        <span class=\"dot\">&middot;</span>\r\n                        <span class=\"watchers-count\">\r\n                        {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\r\n                    </span>\r\n                        <span class=\"dot\">&middot;</span>\r\n                        <span class=\"upload-time\">{{video.created_at|dateFromNow}}</span>\r\n                    </div>\r\n                    <div class=\"desc-tags\">\r\n                        <p class=\"shortened-description\">{{video.description}}</p>\r\n                        <div class=\"tags\">\r\n                            <ul>\r\n                                <li *ngFor=\"let tag of video?.tags\" (click)=\"getVideosByTag(tag.name)\">\r\n                                    <span>{{tag.name}}</span>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"searchedVideos.length === 0 && isSubmitted && validUrl\">\r\n        <span>No videos found via specified url</span>\r\n    </ng-container>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {AbstractControl, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {patternValidator} from '@core/helpers/pattern-validator';\r\nimport {METL_URL_PATTERN} from '@core/constants/patterns';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {GetSelectedVideosToBeAddedToPlaylistPipe} from '@shared/pipes/get-selected-videos-to-be-added-to-playlist.pipe';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-video-url-tab',\r\n    templateUrl: './video-url-tab.component.html',\r\n    styleUrls: ['./video-url-tab.component.scss']\r\n})\r\nexport class VideoUrlTabComponent implements OnInit {\r\n    searchVideoByUrlForm: FormGroup;\r\n    validUrl = true;\r\n    searchedVideos = [];\r\n    selectedVideos = [];\r\n\r\n    apiUrl = API_URL;\r\n\r\n    searchingVideo = false;\r\n    isSubmitted = false;\r\n    @Input('playlist') playlist;\r\n    @Output('selectVideo') selectVid = new EventEmitter();\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private videoService: VideoService,\r\n        public getSelectedVideos: GetSelectedVideosToBeAddedToPlaylistPipe,\r\n        public router: Router\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.searchVideoByUrlForm = this.fb.group({\r\n            url: ['', [Validators.required, patternValidator(METL_URL_PATTERN)]]\r\n        });\r\n    }\r\n\r\n    getUrlString(e) {\r\n        const possibleUrl = e.clipboardData?.getData('text') || e;\r\n        this.isSubmitted = true;\r\n        this.searchedVideos = [];\r\n        this.getVideos(possibleUrl);\r\n    }\r\n\r\n    getVideos(possibleUrl) {\r\n        this.validUrl = METL_URL_PATTERN.test(possibleUrl);\r\n        if (this.validUrl) {\r\n            const parsedUrl = new URL(possibleUrl);\r\n            const id = parsedUrl.searchParams.get('id');\r\n            if (id) {\r\n                this.searchingVideo = true;\r\n                this.videoService.getVideoById({id}).subscribe(dt => {\r\n                    this.searchingVideo = false;\r\n                    this.searchedVideos = dt ? [dt] : [];\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    checkIfVideoSelected(id) {\r\n        return this.selectedVideos.find(v => v === id);\r\n    }\r\n\r\n    selectVideo(video) {\r\n        this.selectedVideos = this.getSelectedVideos.transform(video, this.selectedVideos, this.playlist);\r\n        this.selectVid.emit(this.selectedVideos);\r\n    }\r\n\r\n    get urlCtrl(): AbstractControl {\r\n        return this.searchVideoByUrlForm.get('url');\r\n    }\r\n\r\n    async getVideosByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n}\r\n","<div class=\"tab3\" *ngIf=\"currentUser\">\r\n    <ng-container *ngIf=\"currentUser.videos?.length > 0\">\r\n        <div class=\"video-item\" [class.selected]=\"ifVideoSelected(video.id)\"\r\n             [class.added]=\"getSelectedVideos.checkIfVideoAddedToPlaylist(video, playlist)\"\r\n             *ngFor=\"let video of currentUser.videos\" (click)=\"selectVideo(video)\">\r\n            <div class=\"video-container\">\r\n                <div class=\"img\">\r\n                    <span class=\"added-placeholder\"></span>\r\n                    <img class=\"thumbnail\" [src]=\"video.thumbnail|getImgPath\">\r\n                    <span class=\"duration\">{{video.duration}}</span>\r\n                </div>\r\n\r\n                <div class=\"details\">\r\n                    <div class=\"title\">\r\n                        <h4 class=\"\">{{video.name}}</h4>\r\n                    </div>\r\n                    <div class=\"shortened-details\">\r\n                        <span class=\"channel-name\">{{video.channel.name}}</span>\r\n                        <span class=\"dot\">&middot;</span>\r\n                        <span class=\"watchers-count\">\r\n                            {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\r\n                        </span>\r\n                        <span class=\"dot\">&middot;</span>\r\n                        <span class=\"upload-time\">{{video.created_at|dateFromNow}}</span>\r\n                    </div>\r\n                    <div class=\"desc-tags\">\r\n                        <p class=\"shortened-description\">{{video.description}}</p>\r\n                        <div class=\"tags\">\r\n                            <ul>\r\n                                <li *ngFor=\"let tag of video?.tags\" (click)=\"getVideosByTag(tag.name)\">\r\n                                    <span>{{tag.name}}</span>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"currentUser.videos?.length === 0\">There are no videos in this list</ng-container>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {GetSelectedVideosToBeAddedToPlaylistPipe} from '@shared/pipes/get-selected-videos-to-be-added-to-playlist.pipe';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-your-videos-tab',\r\n    templateUrl: './your-videos-tab.component.html',\r\n    styleUrls: ['./your-videos-tab.component.scss']\r\n})\r\nexport class YourVideosTabComponent implements OnInit {\r\n    apiUrl = API_URL;\r\n    selectedVideos = [];\r\n\r\n    @Input('currentUser') currentUser;\r\n    @Input('authUser') authUser;\r\n    @Input('playlist') playlist;\r\n\r\n    @Output('selectVideo') selectVid = new EventEmitter();\r\n\r\n    constructor(\r\n        private videoService: VideoService,\r\n        public getSelectedVideos: GetSelectedVideosToBeAddedToPlaylistPipe,\r\n        public router: Router\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.videoService.getUserVideos({user_id: this.authUser.id}).subscribe(dt => {\r\n            this.currentUser = dt;\r\n        });\r\n\r\n    }\r\n\r\n    ifVideoSelected(id) {\r\n        return this.selectedVideos.find(v => v === id);\r\n    }\r\n\r\n    selectVideo(video) {\r\n        this.selectedVideos = this.getSelectedVideos.transform(video, this.selectedVideos, this.playlist);\r\n        this.selectVid.emit(this.selectedVideos);\r\n    }\r\n\r\n    async getVideosByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'app-confirmation-dialog',\r\n    templateUrl: './confirmation-dialog.component.html',\r\n    styleUrls: ['./confirmation-dialog.component.scss']\r\n})\r\nexport class ConfirmationDialogComponent implements OnInit {\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<ConfirmationDialogComponent>\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    confirm() {\r\n        this.dialogRef.close(true);\r\n    }\r\n    \r\n    cancel() {\r\n        this.dialogRef.close(false);\r\n    }\r\n\r\n}\r\n","<div class=\"confirmation-modal\">\r\n    <span>Please confirm this action</span>\r\n    <div class=\"actions\">\r\n        <button class=\"confirm\" (click)=\"confirm()\">Confirm</button>\r\n        <button class=\"cancel\" (click)=\"cancel()\">Cancel</button>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-purchase-bits',\r\n  templateUrl: './purchase-bits.component.html',\r\n  styleUrls: ['./purchase-bits.component.scss']\r\n})\r\nexport class PurchaseBitsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"purchase-bits\">\r\n  <p class=\"purchase-text\">Purchase Bits</p>\r\n  <p class=\"purchase-text-2\">You have <span class=\"purchase-text-3\">0 Bits</span></p>\r\n  <p class=\"purchase-text-4\">29% off for first-time Bits buyers!</p>\r\n  <a class=\"purchase-text-5\">Buy 300 Bits for $3,00</a>\r\n  <p class=\"purchase-text-2\">Prices are shown in USD</p>\r\n  <div class=\"bits-block\">\r\n    <div class=\"bits-block-item\">\r\n      <p class=\"bits-text-1\">300 Bits</p>\r\n      <p class=\"bits-text-2\">29% discount</p>\r\n      <a class=\"bits-text-3\">$3,00</a>\r\n    </div>\r\n    <div class=\"bits-block-item\">\r\n      <p class=\"bits-text-1\">300 Bits</p>\r\n      <p class=\"bits-text-2\">30% discount</p>\r\n      <a class=\"bits-text-3\">$3,00</a>\r\n    </div>\r\n    <div class=\"bits-block-item\">\r\n      <p class=\"bits-text-1\">300 Bits</p>\r\n      <p class=\"bits-text-2\">2% discount</p>\r\n      <a class=\"bits-text-3\">$5,00</a>\r\n    </div>\r\n    <div class=\"bits-block-item\">\r\n      <p class=\"bits-text-1\">300 Bits</p>\r\n      <p class=\"bits-text-2\">29% discount</p>\r\n      <a class=\"bits-text-3\">$3,00</a>\r\n    </div>\r\n    <div class=\"bits-block-item\">\r\n      <p class=\"bits-text-1\">300 Bits</p>\r\n      <p class=\"bits-text-2\">29% discount</p>\r\n      <a class=\"bits-text-3\">$308,00</a>\r\n    </div>\r\n    <div class=\"bits-block-item\">\r\n      <p class=\"bits-text-1\">300 Bits</p>\r\n      <p class=\"bits-text-2\">29% discount</p>\r\n      <a class=\"bits-text-3\">$3,00</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.scss']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<section class=\"about-wrap\">\r\n    <div class=\"inner-wrap\">\r\n        <div class=\"text-img\">\r\n\r\n            <div class=\"text\">\r\n                <h1>About Us</h1>\r\n                <p>METL.TV was created with a certain kind of user in mind. With the onset of zero-commission trading, we saw an opportunity to build a platform that provided entertainment to anyone who wanted to invest. Whether you are new to the market or a seasoned trader we are sure you will be able to interact with our site in a very user-friendly experience. We are constantly striving to provide a comprehensive experience that anyone can use. The world of trading can be lonely at times and we strive to bring together traders from around the world to our METL.TV community. Thank you so much for checking us out and we are excited to provide you with a great entertainment experience!</p>\r\n                <p>Please keep in mind METL.TV if for <span>entertainment purposes only.</span> None of the personalities (Streamers and Viewers) shown on this website are investment advisors or brokers and are not registered as such. All opinions expressed by the personalities in any broadcast on METL.TV are solely the personalities’ opinions and neither reflect the opinions nor are made on the behalf of METL LLC or any of its respective affiliates.</p>\r\n\r\n            </div>\r\n            <div class=\"img\"><img src=\"../../../../../assets/img/img2.png\" alt=\"\"></div>\r\n        </div>\r\n\r\n        <div class=\"text\">\r\n            <p>The trading and investing ideas and strategies discussed on METL.TV are not recommendations of any kind, but are made available solely for entertainment purposes. Investments or strategies mentioned in any content on METL.TV may not be suitable for your particular investment objectives, financial situation or needs. Any personalities’ opinions are based upon information they consider reliable, but no representation or warranty is made by any person as to its completeness or accuracy.</p>\r\n            <p>Any of the personalities on METL.TV may hold positions in the securities discussed in a stream, chat room, or direct message, including positions not discussed on METL.TV, and in other securities./p>\r\n            <p>METL.TV content will never be an offer to sell or a solicitation to of an offer to buy any securities. Before acting on information on METL.TV, you should consider whether is it suitable for your particular circumstances and strongly consider seeking advice from your own financial or investment adviser. Any investment in any security Is subject to a number of risks, and that discussions of any security on this broadcast will not identify or describe all or, in some cases, any relevant risk factors.</p>\r\n            <p>Some of the stocks, ETF’s, and cryptocurrencies talked about on METL.TV have a low market capitalization, and/or limited public float. Those stocks are subject to more risk than stocks of larger companies, including greater volatility, lower liquidity and less publicly available information. You should be aware of the real risk of loss in following any strategy or investment discussed on METL.TV, including the acquisition of any security.</p>\r\n            <p>We understand that the markets can offer the same type of thrill as gambling. If you have a gambling addiction please seek help.</p>\r\n            <p class=\"green\">To reach out to the National Problem Gaming Helpline dial 1-800-522-4700.</p>\r\n        </div>\r\n    </div>\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-accessibility-statement',\r\n  templateUrl: './accessibility-statement.component.html',\r\n  styleUrls: ['./accessibility-statement.component.scss']\r\n})\r\nexport class AccessibilityStatementComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"accessibility-statement text-list\">\r\n    <h1>Accessibility Statement</h1>\r\n    <div class=\"text\">\r\n        <p>You’re already one of us.</p>\r\n        <p>As children, some of our earliest memories came from the playground. When we played together, we made cherished memories. That’s what we want METL.TV to be: A place where anyone can play and make memories together.</p>\r\n        <p class=\"bold\">What are the guidelines?</p>\r\n        <p>To help us make the METL.TV experience positive for everyone, we’re committed to using the Web Content Accessibility Guidelines (WCAG) 2.2. The guidelines provide a framework to make our content more accessible for everyone.</p>\r\n        <p>WCAG has three levels of accessibility: A, AA, and AAA. We chose Level A as our target for the METL.TV experience for 2020. In 2021 we plan to level up to AA.</p>\r\n        <p class=\"bold\">How do we do this?</p>\r\n        <p>Here’s a few things we’re working on right now:</p>\r\n        <p class=\"bold list\">Reducing accessibility defects</p>\r\n        <p class=\"bold list\">Including accessibility documentation in our core components</p>\r\n        <p class=\"bold list\">Reducing accessibility dSetting up a resource group for employees with disabilities</p>\r\n        <p class=\"bold list\">And more!</p>\r\n        <p>We’re working hard on the METL.TV experience and are on our way to our Level A accessibility goal.</p>\r\n        <p class=\"bold\">Exceptions</p>\r\n        <p class=\"list\">An exception is WCAG Success Criteria 1.2.5: Audio Description. It’s not feasible for us to create accurate audio descriptions for the hours of video content streamed on our platform daily. We apologize for this inconvenience.</p>\r\n        <p class=\"list\">Also, METL.TV cannot be held responsible for the accessibility of content our customers create or advertisements our vendors create.</p>\r\n        <p class=\"list\">Also, METL.TV cannot be held responsible for the accessibility of content our customers create or advertisements our vendors create.</p>\r\n        <p class=\"bold\">Photosensitive Seizure Warning</p>\r\n        <p>METL.TV allows you to watch streams of video game play and other types of video content. A very small percentage of individuals may experience epileptic seizures when exposed to certain visual images, including light patterns or flashing lights that may appear in video games or other video content. Exposure to certain patterns or backgrounds on a computer screen, or while watching video games, may induce an epileptic seizure in these individuals. Certain conditions may induce previously undetected epileptic symptoms even in persons who have no history of prior seizures or epilepsy.</p>\r\n        <p>If you, or anyone in your family, have an epileptic condition, consult your physician prior to watching video game content on METL.TV. If you experience any of the following symptoms while watching – dizziness, altered vision, eye or muscle twitches, loss of awareness, disorientation, any involuntary movement, or convulsions – discontinue use IMMEDIATELY and consult your physician before resuming use of METL.TV.</p>\r\n        <p class=\"bold\">How can you help?</p>\r\n        <p>We use automated, semi-automated, and manual checks, but if you do find any problems, we want your help to solve them!</p>\r\n        <p>If you enjoy using the METL.TV experience, or have trouble with any part of it, please let us know!</p>\r\n        <p class=\"list\">Email us your story: info@metl.tv</p>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact-us',\r\n  templateUrl: './contact-us.component.html',\r\n  styleUrls: ['./contact-us.component.scss']\r\n})\r\nexport class ContactUsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"contact-wrap\">\r\n    <div class=\"form\">\r\n        <div class=\"inner-wrap\">\r\n            <h2>Contact us</h2>\r\n            <form action=\"\">\r\n                <div class=\"input-wrap\">\r\n                    <div class=\"input\">\r\n                        <label for=\"\">Full Name:</label>\r\n                        <input type=\"text\" placeholder=\"First name, last name\">\r\n                    </div>\r\n                    <div class=\"input\">\r\n                        <label for=\"\">Email Address:</label>\r\n                        <input type=\"text\" placeholder=\"Email\">\r\n                    </div>\r\n                    <div class=\"input\">\r\n                        <label for=\"\">Text</label>\r\n                        <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\" placeholder=\"Your text here\"></textarea>\r\n                    </div>\r\n                </div>\r\n                <button class=\"btn\">Send</button>\r\n            </form>\r\n        </div> \r\n    </div>\r\n\r\n    <div class=\"map-info\">\r\n        <div class=\"inner-wrap\">\r\n            <div class=\"map\">\r\n                <iframe src=\"https://maps.google.com/maps?q=university%20of%20san%20francisco&t=&z=13&ie=UTF8&iwloc=&output=embed\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\"></iframe>\r\n            </div>\r\n\r\n            <div class=\"info\">\r\n                <ul>\r\n                    <li>\r\n                        <h2>Address</h2>\r\n                        <p><span class=\"material-icons\">place</span>Lorem ipsum dolor sit amet</p>\r\n                    </li>\r\n                    <li>\r\n                        <h2>Call Us</h2>\r\n                        <p><span class=\"material-icons\">phone</span>+1 202 555 0156</p>\r\n                    </li>\r\n                    <li>\r\n                        <h2>Open Hours</h2>\r\n                        <p><span class=\"material-icons\">watch_later</span>09:00 - 18:00 </p>\r\n                    </li>\r\n                    <li>\r\n                        <h2>Follow us</h2>\r\n                        <p>\r\n                            <a href=\"\"><img src=\"../../../../../assets/img/facebook.svg\" alt=\"\"></a>\r\n                            <a href=\"\"><img src=\"../../../../../assets/img/twitter.svg\" alt=\"\"></a>\r\n                            <a href=\"\"><img src=\"../../../../../assets/img/instagram.svg\" alt=\"\"></a>\r\n                            <a href=\"\"><img src=\"../../../../../assets/img/linkedin.svg\" alt=\"\"></a>\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-cookie-policy',\r\n  templateUrl: './cookie-policy.component.html',\r\n  styleUrls: ['./cookie-policy.component.scss']\r\n})\r\nexport class CookiePolicyComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"cookie-policy text-list\">\r\n    <h1>METL.TV COOKIE POLICY</h1>\r\n    <div class=\"text\">\r\n        <p class=\"bold\">INTRODUCTION</p>\r\n        <p>[Market Exchange Trading Live LLC] (“we” or “us” or “our”) may use cookies, web beacons, tracking pixels, and other tracking technologies when you visit our website [METL.TV], including any other media form, media channel, mobile website, or mobile application related or connected thereto (collectively, the “Site”) to help customize METL.TV and improve your experience.</p>\r\n        <p>We reserve the right to make changes to this Cookie Policy at any time and for any reason. We will alert you about any changes by updating the “Last Updated” date of this Cookie Policy. Any changes or modifications will be effective immediately upon posting the updated Cookie Policy on METL.TV, and you waive the right to receive specific notice of each such change or modification.</p>\r\n        <p>You are encouraged to periodically review this Cookie Policy to stay informed of updates. You will be deemed to have been made aware of, will be subject to, and will be deemed to have accepted the changes in any revised Cookie Policy by your continued use of METL.TV after the date such revised Cookie Policy is posted.</p>\r\n        <p class=\"bold\">USE OF COOKIES</p>\r\n        <p>A “cookie” is a string of information which assigns you a unique identifier that we store on your computer. Your browser then provides that unique identifier to use each time you submit a query to METL.TV. We use cookies on METL.TV to, among other things, keep track of services you have used, record registration information, record your user preferences, keep you logged into METL.TV, facilitate purchase procedures, and track the pages you visit. Cookies help us understand how METL.TV is being used and improve your user experience.</p>\r\n        <p class=\"bold\">TYPES OF COOKIES</p>\r\n        <p>The following types of cookies may be used when you visit METL.TV:</p>\r\n        <p class=\"bold green\">Advertising Cookies</p>\r\n        <p>Advertising cookies are placed on your computer by advertisers and ad servers in order to display advertisements that are most likely to be of interest to you. These cookies allow advertisers and ad servers to gather information about your visits to METL.TV and other websites, alternate the ads sent to a specific computer, and track how often an ad has been viewed and by whom. These cookies are linked to a computer and do not gather any personal information about you.</p>\r\n        <p class=\"bold green\">Analytics Cookies</p>\r\n        <p>Analytics cookies monitor how users reached METL.TV, and how they interact with and move around once on METL.TV. These cookies let us know what features on METL.TV are working the best and what features on METL.TV can be improved.</p>\r\n        <p class=\"bold green\">Our Cookies</p>\r\n        <p>Our cookies are “first-party cookies”, and can be either permanent or temporary. These are necessary cookies, without which METL.TV won't work properly or be able to provide certain features and functionalities. Some of these may be manually disabled in your browser, but may affect the functionality of METL.TV.</p>\r\n        <p class=\"bold green\">Personalization Cookies</p>\r\n        <p>Personalization cookies are used to recognize repeat visitors to METL.TV. We use these cookies to record your browsing history, the pages you have visited, and your settings and preferences each time you visit METL.TV.</p>\r\n        <p class=\"bold green\">Security Cookies</p>\r\n        <p>Security cookies help identify and prevent security risks. We use these cookies to authenticate users and protect user data from unauthorized parties.</p>\r\n        <p class=\"bold green\">Site Management Cookies</p>\r\n        <p>Site management cookies are used to maintain your identity or session on METL.TV so that you are not logged off unexpectedly, and any information you enter is retained from page to page. These cookies cannot be turned off individually, but you can disable all cookies in your browser.</p>\r\n        <p class=\"bold green\">Third-Party Cookies</p>\r\n        <p>Third-party cookies may be place on your computer when you visit METL.TV by companies that run certain services we offer. These cookies allow the third parties to gather and track certain information about you. These cookies can be manually disabled in your browser.</p>\r\n        <p class=\"bold\">CONTROL OF COOKIES</p>\r\n        <p>Most browsers are set to accept cookies by default. However, you can remove or reject cookies in your browser’s settings. Please be aware that such action could affect the availability and functionality of METL.TV.</p>\r\n        <p>For more information on how to control cookies, check your browser or device’s settings for how you can control or reject cookies, or visit the following links:</p>\r\n        <a href=\"\" class=\"red\">Apple Safari </a>\r\n        <a href=\"\" class=\"red\">Google Chrome</a>\r\n        <a href=\"\" class=\"red\">Microsoft Edge</a>\r\n        <a href=\"\" class=\"red\">Microsoft Internet Explorer</a>\r\n        <a href=\"\" class=\"red\">Mozilla Firefox</a>\r\n        <a href=\"\" class=\"red\">Opera</a>\r\n        <a href=\"\" class=\"red\">Android (Chrome)</a>\r\n        <a href=\"\" class=\"red\">Blackberry</a>\r\n        <a href=\"\" class=\"red\">Iphone or Ipad (Chrome)</a>\r\n        <a href=\"\" class=\"red\">Iphone or Ipad (Safari)</a>\r\n        <p>In addition, you may opt-out of some third-party cookies through the  <a href=\"\" class=\"red\"> Network Advertising Initiative’s Opt-Out Tool.</a></p>\r\n        <p class=\"bold\">OTHER TRACKING TECHNOLOGIES</p>\r\n        <p>In addition to cookies, we may use web beacons, pixel tags, and other tracking technologies on METL.TV to help customize METL.TV and improve your experience. A “web beacon” or “pixel tag” is tiny object or image embedded in a web page or email. They are used to track the number of users who have visited particular pages and viewed emails, and acquire other statistical data. They collect only a limited set of data, such as a cookie number, time and date of page or email view, and a description of the page or email on which they reside. Web beacons and pixel tags cannot be declined. However, you can limit their use by controlling the cookies that interact with them.</p>\r\n        <p class=\"bold\">PRIVACY POLICY</p>\r\n        <p>For more information about how we use information collected by cookies and other tracking technologies, please refer to our Privacy Policy posted on METL.TV. This Cookie Policy is part of and is incorporated into our Privacy Policy. By using METL.TV, you agree to be bound by this Cookie Policy and our Privacy Policy.</p>\r\n        <p class=\"bold\">CONTACT US</p>\r\n        <p>If you have questions or comments about this Cookie Policy, please contact us at:</p>\r\n        <a href=\"\"><i class=\"fas fa-envelope\"></i> info@metl.tv</a>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-help',\r\n  templateUrl: './help.component.html',\r\n  styleUrls: ['./help.component.scss']\r\n})\r\nexport class HelpComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"help-wrap\">\r\n    <div class=\"inner-wrap\">\r\n        <div class=\"img\"><img src=\"../../../../../assets/img/img1.png\" alt=\"\"></div>\r\n        <div class=\"text\">\r\n            <h1>Help</h1>\r\n            <p>At METL.TV we take all of your concerns and suggestions seriously. We look to offer each of our customers with a superior interactive experience. With this being our initial launch, we are constantly working to make this a great site that anyone can enjoy. Because of our initial limitations, we ask that you email us any concerns or suggestions at <a href=\"\">info@metl.tv</a> and we will be happy to respond within 48 hours.</p>\r\n\r\n            <p class=\"green\">Thank you for all of your input and patience with our initial growth.</p>\r\n        </div>\r\n    </div>\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1>The page is not found</h1>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-loading',\r\n  templateUrl: './page-loading.component.html',\r\n  styleUrls: ['./page-loading.component.scss']\r\n})\r\nexport class PageLoadingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n    <mat-spinner [diameter]=\"20\"></mat-spinner>\r\n    <span>Loading page...</span>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-privacy-policy',\r\n  templateUrl: './privacy-policy.component.html',\r\n  styleUrls: ['./privacy-policy.component.scss']\r\n})\r\nexport class PrivacyPolicyComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"privacy-policy text-list\">\r\n    <h1>METL.TV PRIVACY NOTICE</h1>\r\n    <span>Last updated September 27, 2020</span>\r\n    <div class=\"text\">\r\n        <p>Thank you for choosing to be part of our community at Market Exchange Trading Live LLC, doing business as METL.TV (\"abc\", \"we\", \"us\", \"our\"). We are committed to protecting your personal information and your right to privacy. If you have any questions or concerns about this privacy notice, or our practices with regards to your personal information, please contact us at info@metl.tv.</p>\r\n        <p>When you visit our website METL.TV(the \"Website\"), and more generally, use any of our services (the \"Services\", which include the Website), we appreciate that you are trusting us with your personal information. We take your privacy very seriously. In this privacy notice, we seek to explain to you in the clearest way possible what information we collect, how we use it and what rights you have in relation to it. We hope you take some time to read through it carefully, as it is important. If there are any terms in this privacy notice that you do not agree with, please discontinue use of our Services immediately.</p>\r\n        <p>This privacy notice applies to all information collected through our Services (which, as described above, includes our Website), as well as, any related services, sales, marketing or events.</p>\r\n\r\n        <p class=\"red bold\">Please read this privacy notice carefully as it will help you understand what we do with the information that we collect.</p>\r\n        <p class=\"bold\">TABLE OF CONTENTS</p>\r\n        <p class=\"green\">1. WHAT INFORMATION DO WE COLLECT?</p>\r\n        <p class=\"bold\">Personal information you disclose to us</p>\r\n        <p class=\"italic\">In Short: We collect personal information that you provide to us.</p>\r\n        <p>We collect personal information that you voluntarily provide to us when you register on the Website, express an interest in obtaining information about us or our products and Services, when you participate in activities on the Website (such as by posting messages in our online forums or entering competitions, contests or giveaways) or otherwise when you contact us.</p>\r\n        <p>The personal information that we collect depends on the context of your interactions with us and the Website, the choices you make and the products and features you use. The personal information we collect may include the following:</p>\r\n        <p class=\"bold\">Personal Information Provided by You.</p>\r\n        <p>We collect names; phone numbers; email addresses; mailing addresses; usernames; passwords; contact preferences; contact or authentication data; billing addresses; debit/credit card numbers; and other similar information.</p>\r\n        <p class=\"bold\">Payment Data.</p>\r\n        <p>We may collect data necessary to process your payment if you make purchases, such as your payment instrument number (such as a credit card number), and the security code associated with your payment instrument. All payment data is stored by Stripe Privacy Policy. You may find their privacy notice link(s) here: https://stripe.com/privacy.</p>\r\n        <p>All personal information that you provide to us must be true, complete and accurate, and you must notify us of any changes to such personal information.</p>\r\n        <p class=\"bold\">Information automatically collected </p>\r\n        <p class=\"italic\">In Short: Some information — such as your Internet Protocol (IP) address and/or browser and device characteristics — is collected automatically when you visit our Website.</p>\r\n        <p>We automatically collect certain information when you visit, use or navigate the Website. This information does not reveal your specific identity (like your name or contact information) but may include device and usage information, such as your IP address, browser and device characteristics, operating system, language preferences, referring URLs, device name, country, location, information about how and when you use our Website and other technical information. This information is primarily needed to maintain the security and operation of our Website, and for our internal analytics and reporting purposes.</p>\r\n        <p>Like many businesses, we also collect information through cookies and similar technologies.</p>\r\n        <p>The information we collect includes:</p>\r\n        <p class=\"list\">Log and Usage Data. Log and usage data is service-related, diagnostic, usage and performance information our servers automatically collect when you access or use our Website and which we record in log files. Depending on how you interact with us, this log data may include your IP address, device information, browser type and settings and information about your activity in the Website (such as the date/time stamps associated with your usage, pages and files viewed, searches and other actions you take such as which features you use), device event information (such as system activity, error reports (sometimes called 'crash dumps') and hardware settings). </p>\r\n        <p class=\"list\">Device Data. We collect device data such as information about your computer, phone, tablet or other device you use to access the Website. Depending on the device used, this device data may include information such as your IP address (or proxy server), device and application identification numbers, location, browser type, hardware model Internet service provider and/or mobile carrier, operating system and system configuration information.</p>\r\n        <p class=\"list\">Location Data. We collect location data such as information about your device's location, which can be either precise or imprecise. How much information we collect depends on the type and settings of the device you use to access the Website. For example, we may use GPS and other technologies to collect geolocation data that tells us your current location (based on your IP address). You can opt out of allowing us to collect this information either by refusing access to the information or by disabling your Location setting on your device. Note however, if you choose to opt out, you may not be able to use certain aspects of the Services.</p>\r\n        <p class=\"bold green\">2. HOW DO WE USE YOUR INFORMATION?</p>\r\n        <p class=\"italic\">In Short: We process your information for purposes based on legitimate business interests, the fulfillment of our contract with you, compliance with our legal obligations, and/or your consent.</p>\r\n        <p>We use personal information collected via our Website for a variety of business purposes described below. We process your personal information for these purposes in reliance on our legitimate business interests, in order to enter into or perform a contract with you, with your consent, and/or for compliance with our legal obligations. We indicate the specific processing grounds we rely on next to each purpose listed below.</p>\r\n        <p>We use the information we collect or receive:</p> \r\n        <p class=\"list bold\">To facilitate account creation and logon process.</p>\r\n        <p>If you choose to link your account with us to a third-party account (such as your Google or Facebook account), we use the information you allowed us to collect from those third parties to facilitate account creation and logon process for the performance of the contract.</p>\r\n        <p class=\"list bold\">To post testimonials.</p>\r\n        <p>We post testimonials on our Website that may contain personal information. Prior to posting a testimonial, we will obtain your consent to use your name and the content of the testimonial. If you wish to update, or delete your testimonial, please contact us at info@metl.tv and be sure to include your name, testimonial location, and contact information.</p>\r\n        <p class=\"list bold\">Request feedback.</p>\r\n        <p>We may use your information to request feedback and to contact you about your use of our Website.</p>\r\n        <p class=\"list bold\">To enable user-to-user communications.</p>\r\n        <p>We may use your information in order to enable user-to-user communications with each user's consent.</p>\r\n        <p class=\"list bold\">To manage user accounts.</p>\r\n        <p>We may use your information for the purposes of managing our account and keeping it in working order.</p>\r\n        <p class=\"list bold\">To send administrative information to you.</p>\r\n        <p>We may use your personal information to send you product, service and new feature information and/or information about changes to our terms, conditions, and policies.</p>\r\n        <p class=\"list bold\">To protect our Services.</p>\r\n        <p>We may use your information as part of our efforts to keep our Website safe and secure (for example, for fraud monitoring and prevention).</p>\r\n        <p class=\"list bold\">To enforce our terms, conditions and policies for business purposes, to comply with legal and regulatory requirements or in connection with our contract.</p>\r\n        <p class=\"list bold\">To respond to legal requests and prevent harm.</p>\r\n        <p>If we receive a subpoena or other legal request, we may need to inspect the data we hold to determine how to respond. </p>\r\n        <p class=\"list bold\">Fulfill and manage your orders.</p>\r\n        <p>We may use your information to fulfill and manage your orders, payments, returns, and exchanges made through the Website</p>\r\n        <p class=\"list bold\">Administer prize draws and competitions.</p>\r\n        <p>We may use your information to administer prize draws and competitions when you elect to participate in our competitions.</p>\r\n        <p class=\"list bold\">To deliver and facilitate delivery of services to the user.</p>\r\n        <p>We may use your information to provide you with the requested service.</p>\r\n        <p class=\"list bold\">To respond to user inquiries/offer support to users.</p>\r\n        <p>We may use your information to respond to your inquiries and solve any potential issues you might have with the use of our Services.</p>\r\n        <p class=\"list bold\">To send you marketing and promotional communications.</p>\r\n        <p>We and/or our third-party marketing partners may use the personal information you send to us for our marketing purposes, if this is in accordance with your marketing preferences. For example, when expressing an interest in obtaining information about us or our Website, subscribing to marketing or otherwise contacting us, we will collect personal information from you. You can opt-out of our marketing emails at any time (see the \"WHAT ARE YOUR PRIVACY RIGHTS\" below).</p>\r\n        <p class=\"list bold\">Deliver targeted advertising to you.</p>\r\n        <p>We may use your information to develop and display personalized content and advertising (and work with third parties who do so) tailored to your interests and/or location and to measure its effectiveness. </p>\r\n        <p class=\"list bold\">For other business purposes.</p>\r\n        <p>We may use your information for other business purposes, such as data analysis, identifying usage trends, determining the effectiveness of our promotional campaigns and to evaluate and improve our Website, products, marketing and your experience. We may use and store this information in aggregated and anonymized form so that it is not associated with individual end users and does not include personal information. We will not use identifiable personal information without your consent. </p>\r\n        <p class=\"bold green\">3. WILL YOUR INFORMATION BE SHARED WITH ANYONE?</p>\r\n        <p class=\"italic\">In Short: We only share information with your consent, to comply with laws, to provide you with services, to protect your rights, or to fulfill business obligations.</p>\r\n        <p>We may process or share your data that we hold based on the following legal basis:</p>\r\n        <p class=\"list bold\">Consent:</p>\r\n        <p>We may process your data if you have given us specific consent to use your personal information for a specific purpose.</p>\r\n        <p class=\"list bold\">Legitimate Interests: </p>\r\n        <p>We may process your data when it is reasonably necessary to achieve our legitimate business interests.</p>\r\n        <p class=\"list bold\">Performance of a Contract:</p>\r\n        <p>Where we have entered into a contract with you, we may process your personal information to fulfill the terms of our contract.</p>\r\n        <p class=\"list bold\">Legal Obligations:</p>\r\n        <p>We may disclose your information where we are legally required to do so in order to comply with applicable law, governmental requests, a judicial proceeding, court order, or legal process, such as in response to a court order or a subpoena (including in response to public authorities to meet national security or law enforcement requirements).</p>\r\n        <p class=\"list bold\">Vital Interests:</p>\r\n        <p>We may disclose your information where we believe it is necessary to investigate, prevent, or take action regarding potential violations of our policies, suspected fraud, situations involving potential threats to the safety of any person and illegal activities, or as evidence in litigation in which we are involved.</p>\r\n        <p>More specifically, we may need to process your data or share your personal information in the following situations:</p>\r\n        <p class=\"list bold\">Business Transfers.</p>\r\n        <p>We may share or transfer your information in connection with, or during negotiations of, any merger, sale of company assets, financing, or acquisition of all or a portion of our business to another company.</p>\r\n        <p class=\"list bold\">Vendors, Consultants and Other Third-Party Service Providers.</p>\r\n        <p>We may share your data with third-party vendors, service providers, contractors or agents who perform services for us or on our behalf and require access to such information to do that work. Examples include: payment processing, data analysis, email delivery, hosting services, customer service and marketing efforts. We may allow selected third parties to use tracking technology on the Website, which will enable them to collect data on our behalf about how you interact with our Website over time. This information may be used to, among other things, analyze and track data, determine the popularity of certain content, pages or features, and better understand online activity. Unless described in this notice, we do not share, sell, rent or trade any of your information with third parties for their promotional purposes. We have contracts in place with our data processors, which are designed to help safeguard your personal information. This means that they cannot do anything with your personal information unless we have instructed them to do it. They will also not share your personal information with any organization apart from us. They also commit to protect the data they hold on our behalf and to retain it for the period we instruct. </p>\r\n        <p class=\"list bold\">Third-Party Advertisers.</p>\r\n        <p>We may use third-party advertising companies to serve ads when you visit or use the Website. These companies may use information about your visits to our Website(s) and other websites that are contained in web cookies and other tracking technologies in order to provide advertisements about goods and services of interest to you.</p>\r\n        <p class=\"list bold\">Affiliates.</p>\r\n        <p>We may share your information with our affiliates, in which case we will require those affiliates to honor this privacy notice. Affiliates include our parent company and any subsidiaries, joint venture partners or other companies that we control or that are under common control with us.</p>\r\n        <p class=\"list bold\">Business Partners.</p>\r\n        <p>We may share your information with our business partners to offer you certain products, services or promotions.</p>\r\n        <p class=\"list bold\">Other Users.</p>\r\n        <p>When you share personal information (for example, by posting comments, contributions or other content to the Website) or otherwise interact with public areas of the Website, such personal information may be viewed by all users and may be publicly made available outside the Website in perpetuity. Similarly, other users will be able to view descriptions of your activity, communicate with you within our Website, and view your profile.</p>\r\n        <p class=\"bold green\">4. WHO WILL YOUR INFORMATION BE SHARED WITH?</p>\r\n        <p class=\"italic\">In Short: We only share information with the following third parties.</p>\r\n        <p>We only share and disclose your information with the following third parties. We have categorized each party so that you may be easily understand the purpose of our data collection and processing practices. If we have processed your data based on your consent and you wish to revoke your consent, please contact us using the contact details provided in the section below titled \"HOW CAN YOU CONTACT US ABOUT THIS NOTICE?\".</p>\r\n        <p class=\"list bold\">Advertising, Direct Marketing, and Lead Generation</p>\r\n        <p>Google AdSense </p>\r\n        <p class=\"list bold\">Cloud Computing Services</p>\r\n        <p>Amazon Web Services (AWS) and phoenixNAP</p>\r\n        <p class=\"list bold\">Invoice and Billing</p>\r\n        <p>Stripe</p> \r\n        <p class=\"bold green\">5. DO WE USE COOKIES AND OTHER TRACKING TECHNOLOGIES?</p>\r\n        <p class=\"italic\">In Short: We may use cookies and other tracking technologies to collect and store your information.</p>\r\n        <p>We may use cookies and similar tracking technologies (like web beacons and pixels) to access or store information. Specific information about how we use such technologies and how you can refuse certain cookies is set out in our Cookie Notice.</p>\r\n        <p class=\"bold green\">6. DO WE USE GOOGLE MAPS?</p>\r\n        <p class=\"italic\">In Short: Yes, we use Google Maps for the purpose of providing better service.</p>\r\n        <p>This Website uses Google Maps APIs which is subject to Google’s Terms of Service. You may find the Google Maps APIs Terms of Service here. To find out more about Google’s Privacy Policy, please refer to this link. We obtain and store on your device ('cache') your location for six (6) months. You may revoke your consent anytime by contacting us at the contact details provided at the end of this document.</p>\r\n        <p class=\"bold green\">7. IS YOUR INFORMATION TRANSFERRED INTERNATIONALLY?</p>\r\n        <p class=\"italic\">In Short: We may transfer, store, and process your information in countries other than your own.</p>\r\n        <p>Our servers are located in United States. If you are accessing our Website from outside United States, please be aware that your information may be transferred to, stored, and processed by us in our facilities and by those third parties with whom we may share your personal information (see \"WILL YOUR INFORMATION BE SHARED WITH ANYONE?\" above), in United States, and other countries.</p>\r\n        <p>If you are a resident in the European Economic Area, then these countries may not necessarily have data protection laws or other similar laws as comprehensive as those in your country. We will however take all necessary measures to protect your personal information in accordance with this privacy notice and applicable law. </p>\r\n        <p class=\"bold green\">8. WHAT IS OUR STANCE ON THIRD-PARTY WEBSITES?</p>\r\n        <p class=\"italic\">In Short: We are not responsible for the safety of any information that you share with third-party providers who advertise, but are not affiliated with, our Website.</p>\r\n        <p>The Website may contain advertisements from third parties that are not affiliated with us and which may link to other websites, online services or mobile applications. We cannot guarantee the safety and privacy of data you provide to any third parties. Any data collected by third parties is not covered by this privacy notice. We are not responsible for the content or privacy and security practices and policies of any third parties, including other websites, services or applications that may be linked to or from the Website. You should review the policies of such third parties and contact them directly to respond to your questions.</p>\r\n        <p class=\"bold green\">9. HOW LONG DO WE KEEP YOUR INFORMATION?</p>\r\n        <p class=\"italic\">In Short: We keep your information for as long as necessary to fulfill the purposes outlined in this privacy notice unless otherwise required by law.</p>\r\n        <p>We will only keep your personal information for as long as it is necessary for the purposes set out in this privacy notice, unless a longer retention period is required or permitted by law (such as tax, accounting or other legal requirements). No purpose in this notice will require us keeping your personal information for longer than six (6) months past the termination of the user's account.</p>\r\n        <p>When we have no ongoing legitimate business need to process your personal information, we will either delete or anonymize such information, or, if this is not possible (for example, because your personal information has been stored in backup archives), then we will securely store your personal information and isolate it from any further processing until deletion is possible. </p>\r\n        <p class=\"bold green\">10. HOW DO WE KEEP YOUR INFORMATION SAFE?</p>\r\n        <p class=\"italic\">In Short: We aim to protect your personal information through a system of organizational and technical security measures.</p>\r\n        <p>We have implemented appropriate technical and organizational security measures designed to protect the security of any personal information we process. However, despite our safeguards and efforts to secure your information, no electronic transmission over the Internet or information storage technology can be guaranteed to be 100% secure, so we cannot promise or guarantee that hackers, cybercriminals, or other unauthorized third parties will not be able to defeat our security, and improperly collect, access, steal, or modify your information. Although we will do our best to protect your personal information, transmission of personal information to and from our Website is at your own risk. You should only access the Website within a secure environment.</p>\r\n        <p class=\"bold green\">11. DO WE COLLECT INFORMATION FROM MINORS?</p>\r\n        <p class=\"italic\">In Short: We do not knowingly collect data from or market to children under 18 years of age.</p>\r\n        <p>We do not knowingly solicit data from or market to children under 18 years of age. By using the Website, you represent that you are at least 18 or that you are the parent or guardian of such a minor and consent to such minor dependent’s use of the Website. If we learn that personal information from users less than 18 years of age has been collected, we will deactivate the account and take reasonable measures to promptly delete such data from our records. If you become aware of any data we may have collected from children under age 18, please contact us at info@metl.tv. </p>\r\n        <p class=\"bold green\">12. WHAT ARE YOUR PRIVACY RIGHTS?</p>\r\n        <p class=\"italic\">In Short: In some regions, such as the European Economic Area, you have rights that allow you greater access to and control over your personal information. You may review, change, or terminate your account at any time.</p>\r\n        <p>In some regions (like the European Economic Area), you have certain rights under applicable data protection laws. These may include the right (i) to request access and obtain a copy of your personal information, (ii) to request rectification or erasure; (iii) to restrict the processing of your personal information; and (iv) if applicable, to data portability. In certain circumstances, you may also have the right to object to the processing of your personal information. To make such a request, please use the contact details provided below. We will consider and act upon any request in accordance with applicable data protection laws.</p>\r\n        <p>If we are relying on your consent to process your personal information, you have the right to withdraw your consent at any time. Please note however that this will not affect the lawfulness of the processing before its withdrawal, nor will it affect the processing of your personal information conducted in reliance on lawful processing grounds other than consent.</p>\r\n        <p>If you are a resident in the European Economic Area and you believe we are unlawfully processing your personal information, you also have the right to complain to your local data protection supervisory authority. You can find their contact details here: http://ec.europa.eu/justice/data-protection/bodies/authorities/index_en.htm.</p>\r\n        <p>If you are a resident in Switzerland, the contact details for the data protection authorities are available here: https://www.edoeb.admin.ch/edoeb/en/home.html.</p>\r\n        <p>If you have questions or comments about your privacy rights, you may email us at info@metl.tv.</p>       \r\n        <p class=\"bold\">Account Information</p>\r\n        <p>If you would at any time like to review or change the information in your account or terminate your account, you can:</p>\r\n        <p class=\"bold\">Cookies and similar technologies:</p>\r\n        <p>Most Web browsers are set to accept cookies by default. If you prefer, you can usually choose to set your browser to remove cookies and to reject cookies. If you choose to remove cookies or reject cookies, this could affect certain features or services of our Website.</p>\r\n        <p class=\"bold\">Opting out of email marketing:</p>\r\n        <p>You can unsubscribe from our marketing email list at any time by contacting us using the details provided below. You will then be removed from the marketing email list — however, we may still communicate with you, for example to send you service-related emails that are necessary for the administration and use of your account, to respond to service requests, or for other non-marketing purposes. To otherwise opt-out, you may:</p>\r\n        <p class=\"bold\">Contact us</p>\r\n        <p><span class=\"material-icons\">email</span>info@metl.tv</p>\r\n        <p class=\"bold green\">13. CONTROLS FOR DO-NOT-TRACK FEATURES</p>\r\n        <p>Most web browsers and some mobile operating systems and mobile applications include a Do-Not-Track (\"DNT\") feature or setting you can activate to signal your privacy preference not to have data about your online browsing activities monitored and collected. At this stage no uniform technology standard for recognizing and implementing DNT signals has been finalized. As such, we do not currently respond to DNT browser signals or any other mechanism that automatically communicates your choice not to be tracked online. If a standard for online tracking is adopted that we must follow in the future, we will inform you about that practice in a revised version of this privacy notice.</p>\r\n        <p class=\"bold green\">14. DO CALIFORNIA RESIDENTS HAVE SPECIFIC PRIVACY RIGHTS?</p>\r\n        <p class=\"italic\">In Short: Yes, if you are a resident of California, you are granted specific rights regarding access to your personal information.</p>\r\n        <p>California Civil Code Section 1798.83, also known as the \"Shine The Light\" law, permits our users who are California residents to request and obtain from us, once a year and free of charge, information about categories of personal information (if any) we disclosed to third parties for direct marketing purposes and the names and addresses of all third parties with which we shared personal information in the immediately preceding calendar year. If you are a California resident and would like to make such a request, please submit your request in writing to us using the contact information provided below.</p>\r\n        <p>If you are under 18 years of age, reside in California, and have a registered account with the Website, you have the right to request removal of unwanted data that you publicly post on the Website. To request removal of such data, please contact us using the contact information provided below, and include the email address associated with your account and a statement that you reside in California. We will make sure the data is not publicly displayed on the Website, but please be aware that the data may not be completely or comprehensively removed from all our systems (e.g. backups, etc.).</p>\r\n        <p class=\"bold\">CCPA Privacy Notice</p>\r\n        <p>The California Code of Regulations defines a \"resident\" as:</p>\r\n        <p>1. every individual who is in the State of California for other than a temporary or transitory purpose</p>\r\n        <p>2. every individual who is domiciled in the State of California who is outside the State of California for a temporary or transitory purpose</p>\r\n        <p>All other individuals are defined as \"non-residents.\"</p>\r\n        <p>If this definition of \"resident\" applies to you, we must adhere to certain rights and obligations regarding your personal information.</p>\r\n        <p class=\"bold \">What categories of personal information do we collect?</p>\r\n        <p>We have collected the following categories of personal information in the past twelve (12) months:</p>\r\n\r\n        <div class=\"table\">\r\n            <div class=\"tr\">\r\n                <div class=\"td\">Category</div>\r\n                <div class=\"td\">Examples</div>\r\n                <div class=\"td\">Collected</div>\r\n            </div>\r\n            <div class=\"tr\">\r\n                <div class=\"td\">Identifiers</div>\r\n                <div class=\"td\">Contact details, such as real name, alias, postal address, telephone or mobile contact number, unique personal identifier, online identifier, Internet Protocol address, email address and account name</div>\r\n                <div class=\"td\">Yes</div>\r\n            </div>\r\n            <div class=\"tr\">\r\n                <div class=\"td\">Personal information categories listed in the California Customer Records statute</div>\r\n                <div class=\"td\">Name, contact information, education, employment, employment history and financial information</div>\r\n                <div class=\"td\">Yes</div>\r\n            </div>\r\n            <div class=\"tr\">\r\n                <div class=\"td\">Protected classification characteristics under California or federal law</div>\r\n                <div class=\"td\">Gender and date of birth</div>\r\n                <div class=\"td\">Yes</div>\r\n            </div>\r\n            <div class=\"tr\">\r\n                <div class=\"td\">Commercial information</div>\r\n                <div class=\"td\">Transaction information, purchase history, financial details and payment information</div>\r\n                <div class=\"td\">Yes</div>\r\n            </div>\r\n            <div class=\"tr\">\r\n                <div class=\"td\">Biometric information</div>\r\n                <div class=\"td\">Fingerprints and voiceprints </div>\r\n                <div class=\"td\">Yes</div>\r\n            </div>\r\n            <div class=\"tr\">\r\n                <div class=\"td\">Internet or other similar network activity</div>\r\n                <div class=\"td\">Browsing history, search history, online behavior, interest data, and interactions with our and other websites, applications, systems and advertisements</div>\r\n                <div class=\"td\">Yes</div>\r\n            </div>\r\n            <div class=\"tr\">\r\n                <div class=\"td\">Geolocation data</div>\r\n                <div class=\"td\">Device location</div>\r\n                <div class=\"td\">Yes</div>\r\n            </div>\r\n            <div class=\"tr\">\r\n                <div class=\"td\">Audio, electronic, visual, thermal, olfactory, or similar information</div>\r\n                <div class=\"td\">Images and audio, video or call recordings created in connection with our business activities</div>\r\n                <div class=\"td\">Yes</div>\r\n            </div>\r\n            <div class=\"tr\">\r\n                <div class=\"td\">Professional or employment-related information</div>\r\n                <div class=\"td\">Business contact details in order to provide you our services at a business level, job title as well as work history and professional qualifications if you apply for a job with us</div>\r\n                <div class=\"td\">Yes</div>\r\n            </div>\r\n            <div class=\"tr\">\r\n                <div class=\"td\">Education Information</div>\r\n                <div class=\"td\">Student records and directory information</div>\r\n                <div class=\"td\">Yes</div>\r\n            </div>\r\n            <div class=\"tr\">\r\n                <div class=\"td\">Inferences drawn from other personal information</div>\r\n                <div class=\"td\">Inferences drawn from any of the collected personal information listed above to create a profile or summary about, for example, an individual’s preferences and characteristics</div>\r\n                <div class=\"td\">Yes</div>\r\n            </div>\r\n        </div>\r\n\r\n        <p>We have collected the following categories of personal information in the past twelve (12) months:</p>\r\n        <p class=\"list bold\">Receiving help through our customer support channels;</p>\r\n        <p class=\"list bold\">Participation in customer surveys or contests; and</p>\r\n        <p class=\"list bold\">Facilitation in the delivery of our Services and to respond to your inquiries.</p>\r\n        <p>How do we use and share your personal information?</p>\r\n        <p>METL.TV collects and shares your personal information through:</p>\r\n        <p class=\"list bold\">Targeting cookies/Marketing cookies</p>\r\n        <p class=\"list bold\">Social media cookies</p>\r\n        <p class=\"list bold\">Social media cookies</p>\r\n        <p class=\"list bold\">Click redirects: daytradeslive.com</p>\r\n        <p>More information about our data collection and sharing practices can be found in this privacy notice.</p>\r\n        <p>You can opt out from the selling of your personal information by disabling cookies in Cookie Preference Settings and clicking on the Do Not Sell My Personal Information tab under My profile settings tab..</p>\r\n        <p>You may contact us by email at info@metl.tv or by referring to the contact details at the bottom of this document.</p>\r\n        <p>If you are using an authorized agent to exercise your right to opt-out we may deny a request if the authorized agent does not submit proof that they have been validly authorized to act on your behalf.</p>\r\n        <p class=\"bold\">Will your information be shared with anyone else?</p>\r\n        <p>We may disclose your personal information with our service providers pursuant to a written contract between us and each service provider. Each service provider is a for-profit entity that processes the information on our behalf.</p>\r\n        <p>The current list of our service providers can be found in below. </p>\r\n        <p>We may use your personal information for our own business purposes, such as for undertaking internal research for technological development and demonstration. This is not considered to be \"selling\" of your personal data.</p>\r\n        <p>METL.TV has disclosed the following categories of personal information to third parties for a business or commercial purpose in the preceding twelve (12) months:</p>\r\n        \r\n        <p class=\"list\">Category A. Identifiers, such as contact details, like your real name, alias, postal address, telephone or mobile contact number, unique personal identifier, online identifier, Internet Protocol address, email address and account name.</p>\r\n        <p class=\"list\">Category B. Personal information, as defined in the California Customer Records law, such as your name, contact information, education, employment, employment history and financial information.</p>\r\n        <p class=\"list\">Category C. Characteristics of protected classifications under California or federal law, such as gender or date of birth.</p>\r\n        <p class=\"list\">Category D. Commercial information, such as transaction information, purchase history, financial details and payment information.</p>\r\n        <p class=\"list\">Category E. Biometric information, such as fingerprints and voiceprints.</p>\r\n        <p class=\"list\">Category F. Internet or other electronic network activity information, such as browsing history, search history, online behavior, interest data, and interactions with our and other websites, applications, systems and advertisements.</p>\r\n        <p class=\"list\">Category G. Geolocation data, such as device location.</p>\r\n        <p class=\"list\">Category H. Audio, electronic, visual and similar information, such as images and audio, video or call recordings created in connection with our business activities.</p>\r\n        <p class=\"list\">Category I. Professional or employment-related information, such as business contact details in order to provide you our services at a business level, job title as well as work history and professional qualifications if you apply for a job with us.</p>\r\n        <p class=\"list\">Category J. Education information, such as student records and directory information.</p>\r\n        <p class=\"list\">Category K. Inferences drawn from any of the personal information listed above to create a profile or summary about, for example, an individual's preferences and characteristics.</p>\r\n        <p>The categories of third parties to whom we disclosed personal information for a business or commercial purpose can be found under \"WHO WILL YOUR INFORMATION BE SHARED WITH?\".</p>\r\n        <p>METL.TV has sold the following categories of personal information to third parties in the preceding twelve (12) months:</p>\r\n        <p class=\"list\">Category A. Identifiers, such as contact details, like your real name, alias, postal address, telephone or mobile contact number, unique personal identifier, online identifier, Internet Protocol address, email address and account name.</p>\r\n        <p class=\"list\">Category B. Personal information, as defined in the California Customer Records law, such as your name, contact information, education, employment, employment history and financial information. </p>\r\n        <p class=\"list\">Category C. Characteristics of protected classifications under California or federal law, such as gender or date of birth.</p>\r\n        <p class=\"list\">Category D. Commercial information, such as transaction information, purchase history, financial details and payment information.</p>\r\n        <p class=\"list\">Category E. Biometric information, such as fingerprints and voiceprints.</p>\r\n        <p class=\"list\">Category F. Internet or other electronic network activity information, such as browsing history, search history, online behavior, interest data, and interactions with our and other websites, applications, systems and advertisements.</p>\r\n        <p class=\"list\">Category G. Geolocation data, such as device location.</p>\r\n        <p class=\"list\">Category H. Audio, electronic, visual and similar information, such as images and audio, video or call recordings created in connection with our business activities.</p>\r\n        <p class=\"list\">Category I. Professional or employment-related information, such as business contact details in order to provide you our services at a business level, job title as well as work history and professional qualifications if you apply for a job with us.</p>\r\n        <p class=\"list\">Category J. Education information, such as student records and directory information.</p>\r\n        <p class=\"list\">Category K. Inferences drawn from any of the personal information listed above to create a profile or summary about, for example, an individual's preferences and characteristics.</p>\r\n        <p>The categories of third parties to whom we sold personal information are:</p>\r\n        <p class=\"list\">Advertising, Direct Marketing, and Lead Generation</p>\r\n        <p>Google AdSense</p>\r\n        <p class=\"bold green underline\">Your rights with respect to your personal data</p>\r\n        <p>Right to request deletion of the data - Request to delete</p>\r\n        <p>You can ask for the deletion of your personal information. If you ask us to delete your personal information, we will respect your request and delete your personal information, subject to certain exceptions provided by law, such as (but not limited to) the exercise by another consumer of his or her right to free speech, our compliance requirements resulting from a legal obligation or any processing that may be required to protect against illegal activities.</p>\r\n        <p class=\"bold green underline\">Right to be informed - Request to know</p>\r\n        <p>Depending on the circumstances, you have a right to know: </p>\r\n        <p class=\"list\">whether we collect and use your personal information;</p>\r\n        <p class=\"list\">the categories of personal information that we collect;</p>\r\n        <p class=\"list\">the purposes for which the collected personal information is used;</p>\r\n        <p class=\"list\">whether we sell your personal information to third parties;</p>\r\n        <p class=\"list\">the categories of personal information that we sold or disclosed for a business purpose;</p>\r\n        <p class=\"list\">the categories of third parties to whom the personal information was sold or disclosed for a business purpose;</p>\r\n        <p class=\"list\">the business or commercial purpose for collecting or selling personal information.</p>\r\n        <p>In accordance with applicable law, we are not obligated to provide or delete consumer information that is de-identified in response to a consumer request or to re-identify individual data to verify a consumer request.</p>\r\n        <p class=\"bold green underline\">Right to Non-Discrimination for the Exercise of a Consumer’s Privacy Rights</p>\r\n        <p>We will not discriminate against you if you exercise your privacy rights.</p>\r\n        <p class=\"bold green underline\">Verification process</p>\r\n        <p>Upon receiving your request, we will need to verify your identity to determine you are the same person about whom we have the information in our system. These verification efforts require us to ask you to provide information so that we can match it with information you have previously provided us. For instance, depending on the type of request you submit, we may ask you to provide certain information so that we can match the information you provide with the information we already have on file, or we may contact you through a communication method (e.g. phone or email) that you have previously provided to us. We may also use other verification methods as the circumstances dictate.</p>\r\n        <p>We will only use personal information provided in your request to verify your identity or authority to make the request. To the extent possible, we will avoid requesting additional information from you for the purposes of verification. If, however, if we cannot verify your identity from the information already maintained by us, we may request that you provide additional information for the purposes of verifying your identity, and for security or fraud-prevention purposes. We will delete such additionally provided information as soon as we finish verifying you.</p>\r\n        <p class=\"bold green underline\">Other privacy rights </p>\r\n        <p class=\"list\">you may object to the processing of your personal data</p>\r\n        <p class=\"list\">you may request correction of your personal data if it is incorrect or no longer relevant, or ask to restrict the processing of the data</p>\r\n        <p class=\"list\">you can designate an authorized agent to make a request under the CCPA on your behalf. We may deny a request from an authorized agent that does not submit proof that they have been validly authorized to act on your behalf in accordance with the CCPA.</p>\r\n        <p class=\"list\">you may request to opt-out from future selling of your personal information to third parties. Upon receiving a request to opt-out, we will act upon the request as soon as feasibly possible, but no later than 15 days from the date of the request submission.</p>\r\n        <p>To exercise these rights, you can contact us by email at ccpa@metlinfo.com, or by referring to the contact details at the bottom of this document. If you have a complaint about how we handle your data, we would like to hear from you.</p>\r\n\r\n        <p class=\"bold green\">15. DO WE MAKE UPDATES TO THIS NOTICE?</p>\r\n        <p class=\"italic\">In Short: Yes, we will update this notice as necessary to stay compliant with relevant laws.</p>\r\n        <p>We may update this privacy notice from time to time. The updated version will be indicated by an updated \"Revised\" date and the updated version will be effective as soon as it is accessible. If we make material changes to this privacy notice, we may notify you either by prominently posting a notice of such changes or by directly sending you a notification. We encourage you to review this privacy notice frequently to be informed of how we are protecting your information.</p>\r\n        <p class=\"bold green\">16. HOW CAN YOU CONTACT US ABOUT THIS NOTICE?</p>\r\n        <p>If you have questions or comments about this notice, you may email us at info@metl.tv.</p>\r\n        <p class=\"bold green\">17. HOW CAN YOU REVIEW, UPDATE OR DELETE THE DATA WE COLLECT FROM YOU?</p>\r\n        <p>Based on the applicable laws of your country, you may have the right to request access to the personal information we collect from you, change that information, or delete it in some circumstances. To request to review, update, or delete your personal information, please visit: info@metl.tv. We will respond to your request within 30 days. </p>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-security',\r\n  templateUrl: './security.component.html',\r\n  styleUrls: ['./security.component.scss']\r\n})\r\nexport class SecurityComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"security text-list\">\r\n    <h1>METL.TV Security</h1>\r\n    <div class=\"text\">\r\n        <p class=\"bold green\">METL.TV Security</p>\r\n        <p>METL.TV Security is responsible for creating the systems that protect the many streamers and stream viewers that use our platform.</p>\r\n        <p>While METL.TV Security’s main goal is protecting those on our platform, we primarily act in a technical capacity, designing and securing METL.TV’s systems. If someone else has logged into your account without your permission or someone is breaking our rules, or if you think you have technical details of a security flaw please email us immediately at info@metl.tv.</p>\r\n        <p class=\"bold green\">Protecting Your Account</p>\r\n        <p class=\"bold red\">Keep your login safe!</p>\r\n        <p>Anyone with your username and password can get into your METL.TV account. Never tell anyone your password, not even someone at METL.TV. We will never ask for your password.</p>\r\n        <p>We recommend you use a password on METL.TV that you don’t use anywhere else. It might be hard to remember lots of passwords so it might be worth finding a good password manager to keep all your passwords in a safe place where you don’t have to remember all of them.</p>\r\n        <p class=\"bold green\">Two Factor Authentication (2FA)</p>\r\n        <p>Two factor authentication is one of the best things you can do to protect your METL.TV account from the bad guys out there. You can enable it from your security settings page. Now, even if someone steals your password, they will have to also steal a code from your phone to log in. This will make it much harder for bad people to get into your account.</p>\r\n        <p class=\"bold green\">Verify your Email</p>\r\n        <p>If you forget your password you will need a verified email to get back into your account. Make sure to verify your account via the steps we sent you.</p>\r\n        <p class=\"bold green\">Staying Safe</p>\r\n        <p>It doesn’t hurt to be a little cautious when protecting yourself online. Avoid clicking links or downloading files from suspicious strangers and keep your devices up to date with the latest updates.</p>\r\n        <p class=\"bold green\">Responsible Disclosure</p>\r\n        <p>If you believe you’ve discovered a vulnerability in METL.TV that puts our users at risk and can give technical details, please contact us immediately.</p>\r\n        <p>If you believe that such security issue exists but cannot give technical details, please contact info@metl.tv, who will handle the issue appropriately.</p>\r\n    </div>\r\n</div>","import {Chart} from 'chart.js';\r\n\r\nexport const STOCK_TILE_CHART_SETTINGS = {\r\n    view: [180, 130],\r\n    colorScheme: {\r\n        domain: ['#ffffff']\r\n    },\r\n    tooltipDisabled: true,\r\n    autoScale: true,\r\n    timeline: true,\r\n    animations: false\r\n};\r\n","import {OwlOptions} from 'ngx-owl-carousel-o';\r\nimport {environment} from '@env';\r\nimport * as moment from 'moment';\r\n\r\n\r\nexport const API_URL = environment.apiUrl;\r\nexport const VIDEO_DEFAULT_THUMBNAILS_PATH = 'assets/img/video-thumbnail-default.png';\r\nexport const VIDEO_DEFAULT_COVERS_PATH = 'assets/img/default-thumbnail.png';\r\nexport const VIDEO_DEFAULT_AVATARS_PATH = 'assets/img/default-user.png';\r\nexport const USER_DEFAULT_AVATARS_PATH = 'assets/img/default-user.png';\r\nexport const DEFAULT_VIDEO_SUGGESTIONS_COUNT = 5;\r\n\r\n\r\nexport const OWL_OPTIONS: OwlOptions = {\r\n    loop: false,\r\n    margin: 25,\r\n    nav: true,\r\n    pullDrag: false,\r\n    dots: false,\r\n    navSpeed: 700,\r\n    navText: ['<i class=\\'fa fa-chevron-left\\'></i>', '<i class=\\'fa fa-chevron-right\\'></i>'],\r\n    responsive: {\r\n        0: {\r\n            items: 1\r\n        },\r\n        516: {\r\n            items: 2\r\n        },\r\n        867: {\r\n            items: 3.05\r\n        }\r\n    }\r\n};\r\n\r\nexport const PROFILE_PAGE_TABS = [\r\n    {name: 'Watchlist', link: 'pWatch'},\r\n    {name: 'Videos', link: 'pVideos'},\r\n    {name: 'Playlists', link: 'pPlaylists'},\r\n    {name: 'About', link: 'pAbout'},\r\n];\r\n\r\nexport const NAVBAR_ADDITIONAL_LINKS = [\r\n    {name: 'Accessibility assessment', link: 'accessibility-assessment'},\r\n    {name: 'About Metl', link: 'about'},\r\n    {name: 'Contact us', link: 'contact-us'},\r\n    {name: 'Help', link: 'help'},\r\n    {name: 'METL.TV security', link: 'security'},\r\n    {name: 'Privacy policy', link: 'privacy-policy'},\r\n    {name: 'Cookie policy', link: 'cookie-policy'},\r\n];\r\n\r\nexport const VIDEO_CATEGORIES = ['Stock', 'Etf', 'Cryptocurrency'];\r\n\r\nexport const ALLOWED_IMG_MIME_TYPES = ['image/jpeg', 'image/png'];\r\n\r\nexport const PASSWORD_MAX_LENGTH = 15;\r\nexport const PASSWORD_MIN_LENGTH = 6;\r\n\r\nexport const DEVICES_ICONS = [\r\n    {\r\n        name: 'webcam', messages: [\r\n            {type: 'error', msg: 'Can\\'t find camera. Make sure it\\'s connected and try again', icon: 'videocam_off'},\r\n            {type: 'success', msg: 'Camera is connected', icon: 'checked'}\r\n        ]\r\n    },\r\n    {\r\n        name: 'microphone', messages: [\r\n            {type: 'error', msg: 'Can\\'t find microphone. Make sure it\\'s connected and try again', icon: 'mic_off'},\r\n            {type: 'success', msg: 'Microphone is connected', icon: 'checked'}\r\n        ]\r\n    }\r\n]\r\n\r\n\r\nexport const VIDEO_FILTERS = [\r\n    {\r\n        group: {name: 'Upload Date', value: 'date'}, items: [\r\n            {name: 'Last hour', value: moment().utc().subtract(1, 'hours').format('YYYY-MM-DD HH:mm:ss')},\r\n            {name: 'Today', value: moment().startOf('day').format('YYYY-MM-DD')},\r\n            {name: 'This week', value: moment().startOf('isoWeek').format('YYYY-MM-DD HH:mm:ss')},\r\n            {name: 'This month', value: moment().startOf('month').format('YYYY-MM-DD HH:mm:ss')},\r\n            {name: 'This year', value: moment().startOf('year').format('YYYY-MM-DD HH:mm:ss')},\r\n        ]\r\n    },\r\n\r\n    {\r\n        group: {name: 'Duration', value: 'duration'}, items: [\r\n            {name: 'Short (<= 30 seconds)', value: 'short'},\r\n            {name: 'Long (>30 seconds and <1 hour)', value: 'long'},\r\n        ]\r\n    },\r\n    {\r\n        group: {name: 'Category', value: 'category'}, items: [\r\n            {name: 'All', value: 'all'},\r\n            {name: 'Stock', value: 'stocks'},\r\n            {name: 'ETF', value: 'etf'},\r\n            {name: 'Forex', value: 'forex'},\r\n            {name: 'Crypto', value: 'crypto'},\r\n        ]\r\n    }\r\n\r\n];\r\n\r\nexport const STOCK_CATEGORIES = [\r\n    {name: 'Stocks', value: 'stocks'},\r\n    {name: 'ETF', value: 'etf'},\r\n    {name: 'Forex', value: 'forex'},\r\n    {name: 'Cryptocurrency', value: 'crypto'},\r\n];\r\n\r\nexport const DESCRIPTION_CHARACTERS_LIMIT = 100;\r\n\r\nexport const MAIN_SECTIONS = [\r\n    {\r\n        name: 'Start live video',\r\n        img: '',\r\n        icon: 'video_call',\r\n        link: '/user/video/start-live-video',\r\n        auth: true,\r\n        production: true\r\n    },\r\n    {name: 'Home', img: '', icon: 'home', link: '/', auth: false, production: true},\r\n    {name: 'Trending', img: 'item-9', icon: '', link: '/trending', separator: true, auth: false, production: true},\r\n    {name: 'Messages', img: 'item-8', icon: '', link: '/chat/messages', production: false, auth: true},\r\n    {name: 'Chat rooms', img: 'item-8', icon: '', link: '/chat/rooms', separator: true, production: false, auth: true},\r\n    {name: 'Saved videos', img: 'item-11', icon: '', link: '/videos/saved', production: true, auth: true},\r\n    {name: 'Videos', img: 'item-11', icon: '', link: '/videos', auth: true, separator: true, production: true},\r\n    {name: 'Analytics', img: 'item-9', icon: '', link: '/stocks/analytics', auth: true, production: true},\r\n];\r\n","export const TEXT_ONLY_PATTERN_WITHOUT_SPECIALS = /^[^`~!@#$%^&*()_+={}\\[\\]|\\\\:;“’<,>.?๐฿0-9]*$/;\r\nexport const NUMBER_AFTER_TEXT_PATTERN = /^[a-zA-Z ]/;\r\nexport const NO_SPACE_PATTERN = /^\\S*$/;\r\nexport const NUMBERS_ONLY = /^[0-9]*$/;\r\nexport const FOUR_DIGIT_NUMBERS_ONLY = /^[0-9]{4}$/;\r\nexport const TEXT_ONLY_WITH_SPECIALS_PATTERN = /^[a-zA-Z -/]*$/;\r\nexport const EMAIL_PATTERN = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nexport const METL_URL_PATTERN = /(http|https):\\/\\/metl.tv(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\r\nexport const URL_PATTERN = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NavbarComponent} from '@core/components/layout/navbar/navbar.component';\r\nimport {LeftSidebarComponent} from '@core/components/layout/left-sidebar/left-sidebar.component';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {ToastrModule} from 'ngx-toastr';\r\nimport {ModalModule} from 'ngx-bootstrap/modal';\r\nimport {PurchaseBitsComponent} from '@core/components/modals/purchase-bits/purchase-bits.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {NotFoundComponent} from '@core/components/ungrouped/not-found/not-found.component';\r\nimport {MaterialModule} from '@core/modules/material.module';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {AboutComponent} from '@core/components/ungrouped/about/about.component';\r\nimport {AccessibilityStatementComponent} from '@core/components/ungrouped/accessibility-statement/accessibility-statement.component';\r\nimport {ContactUsComponent} from '@core/components/ungrouped/contact-us/contact-us.component';\r\nimport {PrivacyPolicyComponent} from '@core/components/ungrouped/privacy-policy/privacy-policy.component';\r\nimport {SecurityComponent} from '@core/components/ungrouped/security/security.component';\r\nimport {SharedModule} from '@shared/shared.module';\r\nimport {AddPlaylistDialogComponent} from '@core/components/modals/add-playlist-dialog/add-playlist-dialog.component';\r\nimport {AddVideoToPlaylistDialogComponent} from '@core/components/modals/add-video-to-playlist-dialog/add-video-to-playlist-dialog.component';\r\nimport {ConfirmationDialogComponent} from '@core/components/modals/confirmation-dialog/confirmation-dialog.component';\r\nimport {AddVideoToAnotherPlaylistComponent} from '@core/components/modals/add-video-to-another-playlist/add-video-to-another-playlist.component';\r\nimport {SearchVideosTabComponent} from '@core/components/modals/add-video-to-playlist-dialog/search-videos-tab/search-videos-tab.component';\r\nimport {VideoUrlTabComponent} from '@core/components/modals/add-video-to-playlist-dialog/video-url-tab/video-url-tab.component';\r\nimport {YourVideosTabComponent} from '@core/components/modals/add-video-to-playlist-dialog/your-videos-tab/your-videos-tab.component';\r\nimport {AddStockDialogComponent} from './components/modals/add-stock-dialog/add-stock-dialog.component';\r\nimport {SectionLinksComponent} from '@core/components/layout/left-sidebar/section-links/section-links.component';\r\nimport { ChannelSubscriptionsComponent } from './components/layout/left-sidebar/channel-subscriptions/channel-subscriptions.component';\r\nimport { StocksListsPortableComponent } from './components/layout/left-sidebar/stocks-lists-portable/stocks-lists-portable.component';\r\nimport { PageLoadingComponent } from './components/ungrouped/page-loading/page-loading.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        NavbarComponent,\r\n        LeftSidebarComponent,\r\n        PurchaseBitsComponent,\r\n        NotFoundComponent,\r\n        AccessibilityStatementComponent,\r\n        AboutComponent,\r\n        ContactUsComponent,\r\n        PrivacyPolicyComponent,\r\n        SecurityComponent,\r\n        AddPlaylistDialogComponent,\r\n        AddVideoToPlaylistDialogComponent,\r\n        ConfirmationDialogComponent,\r\n        AddVideoToAnotherPlaylistComponent,\r\n        SearchVideosTabComponent,\r\n        VideoUrlTabComponent,\r\n        YourVideosTabComponent,\r\n        AddStockDialogComponent,\r\n        SectionLinksComponent,\r\n        ChannelSubscriptionsComponent,\r\n        StocksListsPortableComponent,\r\n        PageLoadingComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        DragDropModule,\r\n        HttpClientModule,\r\n        ToastrModule.forRoot(),\r\n        ModalModule.forRoot(),\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MaterialModule,\r\n        SharedModule\r\n    ],\r\n    exports: [\r\n        NavbarComponent,\r\n        LeftSidebarComponent,\r\n        PurchaseBitsComponent,\r\n    ],\r\n    entryComponents: [],\r\n    providers: [\r\n        GetAuthUserPipe\r\n    ]\r\n})\r\nexport class CoreModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {AuthService} from '@core/services/auth.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    redirectUrl: string;\r\n\r\n    constructor(\r\n        public auth: AuthService,\r\n        public router: Router,\r\n        private toastr: ToastrService\r\n    ) {\r\n    }\r\n\r\n   async canActivate(\r\n        next: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot\r\n    ) {\r\n\r\n        if (this.auth.loggedIn()) {\r\n            return true;\r\n        } else {\r\n            // if user is not authorized in the inside sections, redirecting to login page\r\n            if (this.router.url !== '/admin/login' && this.router.url !== '/register') {\r\n                await this.router.navigate(['auth/login']);\r\n                this.toastr.error('', 'You have to be logged in to view that page');\r\n            }\r\n\r\n\r\n            // this is the url used for redirecting after login, if user wanted to access that first\r\n            this.redirectUrl = state.url;\r\n            return false;\r\n        }\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport {VideoComponent} from '@app/user/publisher-flow/video/video.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DoNotLeavePageGuard implements CanDeactivate<VideoComponent> {\r\n  canDeactivate(\r\n    component: VideoComponent,\r\n    currentRoute: ActivatedRouteSnapshot,\r\n    currentState: RouterStateSnapshot,\r\n    nextState?: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      if (component.recordingState === 'started') {\r\n          component.alertOfLeaving();\r\n          return false;\r\n      }\r\n\r\n      return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport {AuthService} from '@core/services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NonAuthGuard implements CanActivate {\r\n  constructor(\r\n    public auth: AuthService,\r\n    public router: Router) {\r\n\r\n  }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot\r\n  ) {\r\n    if (this.auth.loggedIn()) {\r\n\r\n      this.router.navigate([this.auth.checkRoles('admin') ? 'admin/dashboard/show' : '/']);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n}\r\n","function buildPlayVideoRoute(video, username) {\r\n    let route;\r\n    let params;\r\n    if (video.status === 'live') {\r\n        route = 'user/video/watch';\r\n        params = {session: video.session_name, publisher: username, id: video.id};\r\n    } else {\r\n        route = 'videos/play';\r\n        params = {id: video.id};\r\n    }\r\n\r\n    return {route, params};\r\n}\r\n\r\nexport {buildPlayVideoRoute as buildPlayVideoRoute};\r\n","import {tap} from 'rxjs/operators';\r\nimport {Injectable} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {\r\n    HttpRequest,\r\n    HttpHandler,\r\n    HttpEvent,\r\n    HttpInterceptor,\r\n    HttpResponse,\r\n    HttpErrorResponse,\r\n} from '@angular/common/http';\r\n\r\nimport {Observable} from 'rxjs';\r\n\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {LoaderService} from '@core/services/loader.service';\r\n\r\n@Injectable()\r\nexport class RequestInterceptor implements HttpInterceptor {\r\n\r\n    constructor(public router: Router,\r\n                public toastr: ToastrService,\r\n                private loader: LoaderService\r\n    ) {\r\n    }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(tap((res: HttpResponse<any>) => {\r\n\r\n        }, (err: any) => {\r\n            if (err instanceof HttpErrorResponse) {\r\n                this.loader.formProcessing = false;\r\n                this.loader.dataLoading = false;\r\n                this.loader.stocksLoading.status = 'finished';\r\n                const message = err.error.msg;\r\n\r\n                // Sequelize db connection error\r\n                if (err.error.hasOwnProperty('db_error')) {\r\n                    this.toastr.error(err.error.db_error, 'Unable to connect to database');\r\n\r\n                    // Server connection error\r\n                } else if (err.status === 200 || err.status === 0 || err.error.hasOwnProperty('conn_error') && err.status !== 304) {\r\n                    this.toastr.error('Please check server connection.', 'Unable to connect to server');\r\n                } else if (err.error.hasOwnProperty('main')) {\r\n                    this.toastr.error(err.error.msg, err.error.main);\r\n                } else {\r\n                    this.toastr.error(message.replace(/<(.|\\n)*?>/g, ''));\r\n                }\r\n            }\r\n        }));\r\n    }\r\n}\r\n","export default class IsResponsive {\r\n    static check() {\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    static isSmallScreen() {\r\n        return window.screen.availWidth <= 991;\r\n    }\r\n\r\n\r\n}\r\n","function moveItemInArray(arr, from, to){\r\n    const f = arr.splice(from, 1)[0];\r\n    arr.splice(to, 0, f);\r\n    return arr;\r\n}\r\n\r\nexport {moveItemInArray as moveItemInArray};\r\n","import {AbstractControl, ValidatorFn, FormGroup} from '@angular/forms';\r\n\r\nexport function patternValidator(pattern): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } => {\r\n    const value = control.value;\r\n    if (!value) {\r\n      return null;\r\n    }\r\n    return !pattern.test(value) ? {patternInvalid: {pattern}} : null;\r\n  };\r\n}\r\n","function updateStockDetails(userStocks, currentStocks) {\r\n    userStocks.map(st => {\r\n        const found = currentStocks.find(fs => fs.name === st.name);\r\n        if (found) {\r\n            st.change = found.change;\r\n            st.changesPercentage = found.changesPercentage;\r\n            st.price = found.price;\r\n            return st;\r\n        }\r\n    });\r\n    return userStocks;\r\n}\r\n\r\nexport {updateStockDetails as updateStockDetails};\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatDialogModule, MatDialog} from '@angular/material/dialog';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatDialogModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatTableModule,\r\n    MatDividerModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule,\r\n    MatTooltipModule,\r\n    MatSlideToggleModule,\r\n    MatChipsModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatProgressSpinnerModule,\r\n    MatBadgeModule,\r\n    MatSliderModule,\r\n    MatAutocompleteModule,\r\n    MatMenuModule,\r\n    MatButtonToggleModule,\r\n    MatTreeModule,\r\n    MatProgressBarModule,\r\n    MatSelectModule\r\n  ],\r\n  declarations: [],\r\n  providers: [\r\n    MatDialog,\r\n  ],\r\n  exports: [\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatDialogModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatTableModule,\r\n    MatDividerModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule,\r\n    MatTooltipModule,\r\n    MatSlideToggleModule,\r\n    MatChipsModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatProgressSpinnerModule,\r\n    MatBadgeModule,\r\n    MatSliderModule,\r\n    MatAutocompleteModule,\r\n    MatMenuModule,\r\n    MatButtonToggleModule,\r\n    MatTreeModule,\r\n    MatProgressBarModule,\r\n    MatSelectModule\r\n  ]\r\n})\r\nexport class MaterialModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {API_URL} from '../constants/global';\r\nimport {JwtHelperService} from '@auth0/angular-jwt';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n    userData;\r\n\r\n    constructor(\r\n        private httpClient: HttpClient,\r\n        private jwtHelper: JwtHelperService,\r\n    ) {\r\n    }\r\n\r\n    /**\r\n     * Sends data for user registration\r\n     * @param params user parameters\r\n     */\r\n    register(params) {\r\n        return this.httpClient.post(`${API_URL}auth/register`, params);\r\n    }\r\n\r\n    /**\r\n     * Checks to see if user logged in/ token expired\r\n     */\r\n    loggedIn() {\r\n        return !this.jwtHelper.isTokenExpired();\r\n    }\r\n\r\n    login(params) {\r\n        return this.httpClient.post<any>(`${API_URL}auth/login`, params);\r\n    }\r\n\r\n    sendEmailVerificationCode(params) {\r\n        return this.httpClient.post<any>(`${API_URL}auth/send-verification-code`, params);\r\n    }\r\n\r\n    resendEmailVerificationCode(params) {\r\n        return this.httpClient.post<any>(`${API_URL}auth/resend-verification-code`, params);\r\n    }\r\n\r\n    checkVerificationCode(params) {\r\n        return this.httpClient.post<any>(`${API_URL}auth/check-verification-code`, params);\r\n    }\r\n\r\n    checkRoles(role: string, userData = null) {\r\n\r\n        if (userData) {\r\n            this.userData = userData;\r\n        }\r\n        if (this.loggedIn() && this.userData) {\r\n            if ('role' in this.userData) {\r\n                return this.userData.role.name.toLowerCase() === role;\r\n            } else {\r\n\r\n                return this.userData.roles.map(r => {\r\n                    return (r.name.toLowerCase().replace(' ', '_') === role);\r\n                }).some(Boolean);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    sendForgotPassEmail(params) {\r\n        return this.httpClient.post<any>(`${API_URL}auth/send-forgot-pass-email`, params);\r\n    }\r\n\r\n    resetPass(params) {\r\n        return this.httpClient.post<any>(`${API_URL}auth/reset-password`, params);\r\n    }\r\n\r\n\r\n\r\n    logout() {\r\n        return this.httpClient.get(`${API_URL}auth/logout`);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ChannelsService {\r\n\r\n    constructor(\r\n        private httpClient: HttpClient\r\n    ) {\r\n    }\r\n\r\n    get(params) {\r\n        return this.httpClient.get<any>(`${API_URL}channels/get`, {params});\r\n    }\r\n\r\n    getSubscriptions(params) {\r\n        return this.httpClient.get<any>(`${API_URL}channels/subscriptions`, {params});\r\n    }\r\n\r\n    searchWithVideos(params) {\r\n        return this.httpClient.get<any>(`${API_URL}channels/search-with-videos`, {params});\r\n    }\r\n\r\n    subscribeToChannel(params) {\r\n        return this.httpClient.put<any>(`${API_URL}channels/subscribe`, params);\r\n    }\r\n\r\n    checkChannelSubscription(params) {\r\n        return this.httpClient.get<any>(`${API_URL}channels/check-subscription`, {params});\r\n    }\r\n\r\n    getUserChannelSubscriptions(params) {\r\n        return this.httpClient.get<any>(`${API_URL}channels/get-subscriptions`, {params});\r\n    }\r\n\r\n    changeSubscriptionPriority(params) {\r\n        return this.httpClient.put<any>(`${API_URL}channels/subscriptions/update-priority`, params);\r\n    }\r\n\r\n    saveDescription(params) {\r\n        return this.httpClient.put<any>(`${API_URL}channels/save-description`, params);\r\n    }\r\n\r\n    changeChannelDetails(params) {\r\n        return this.httpClient.put<any>(`${API_URL}channels/save-channel-details`, params);\r\n    }\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {API_URL} from '@core/constants/global';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ChatService {\r\n\r\n    constructor(\r\n        private httpClient: HttpClient\r\n    ) {\r\n    }\r\n\r\n    getChatMessages(params) {\r\n        return this.httpClient.get<any>(`${API_URL}chat/get-messages`, {params});\r\n    }\r\n\r\n    saveMessage(params) {\r\n        return this.httpClient.post<any>(`${API_URL}chat/save-message`, params);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Subject} from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoaderService {\r\n    formProcessing = false;\r\n    dataLoading = false;\r\n    isLoading = new Subject<boolean>();\r\n    stocksLoading = {status: 'idle', text: ''};\r\n\r\n    private loaderSource = new BehaviorSubject(false);\r\n    currentLoaderState = this.loaderSource.asObservable();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    show() {\r\n\r\n        this.loaderSource.next(true);\r\n    }\r\n\r\n    hide() {\r\n\r\n        this.loaderSource.next(false);\r\n    }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {API_URL} from '@core/constants/global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OpentokService {\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n  initSession(room) {\n    console.log(room)\n    // return this.httpClient.get(`${API_URL}users/session/${room}`); //opentok\n    return this.httpClient.get(`https://tokboxtesting123.herokuapp.com/room/session`); //opentok\n  }\n\n  connect() {\n\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {API_URL} from '@core/constants/global';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OpenviduService {\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n  }\r\n\r\n  getToken(params) {\r\n    return this.httpClient.get(`${API_URL}users/session/get-token`, {params});\r\n    // return this.httpClient.post(`${API_URL}api/sessions`, {params});\r\n  }\r\n\r\n  getSession() {\r\n    return this.httpClient.post(`${API_URL}api/sessions`, {});\r\n  }\r\n\r\n  leaveSession(params){\r\n    return this.httpClient.get(`${API_URL}users/session/leave`, {params});\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PlaylistsService {\r\n\r\n    constructor(\r\n        private httpClient: HttpClient\r\n    ) {\r\n    }\r\n\r\n    addPlaylist(params) {\r\n        return this.httpClient.post<any>(`${API_URL}playlists/add`, params);\r\n    }\r\n\r\n    addVideosToPlaylist(params) {\r\n        return this.httpClient.post<any>(`${API_URL}playlists/add-videos`, params);\r\n    }\r\n\r\n    addVideoToOtherPlaylists(params) {\r\n        return this.httpClient.post<any>(`${API_URL}playlists/add-video-to-other-playlists`, params);\r\n    }\r\n\r\n    get(params) {\r\n        return this.httpClient.get<any>(`${API_URL}playlists/get`, {params});\r\n    }\r\n\r\n    getById(params) {\r\n        return this.httpClient.get<any>(`${API_URL}playlists/get-by-id`, {params});\r\n    }\r\n\r\n    searchPlaylists(params) {\r\n        return this.httpClient.get<any>(`${API_URL}playlists/search`, {params});\r\n    }\r\n\r\n    updatePrivacy(params) {\r\n        return this.httpClient.put<any>(`${API_URL}playlists/update-privacy`, params);\r\n    }\r\n\r\n    updateVideoPosition(params) {\r\n        return this.httpClient.put<any>(`${API_URL}playlists/update-video-position`, params);\r\n    }\r\n\r\n    updatePlaylistInfo(params) {\r\n        return this.httpClient.put<any>(`${API_URL}playlists/update-playlist-info`, params);\r\n    }\r\n\r\n    changePlaylistThumbnail(params) {\r\n        return this.httpClient.put<any>(`${API_URL}playlists/change-thumbnail`, params);\r\n    }\r\n\r\n    removeVideoFromPlaylist(params) {\r\n        return this.httpClient.delete<any>(`${API_URL}playlists/remove-video`, {params});\r\n    }\r\n\r\n    removePlaylist(params) {\r\n        return this.httpClient.delete<any>(`${API_URL}playlists/remove`, {params});\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class StocksService {\r\n\r\n    constructor(\r\n        private httpClient: HttpClient\r\n    ) {\r\n    }\r\n\r\n    getDailyStocks(params) {\r\n        return this.httpClient.get<any>(`${API_URL}stocks/get-daily`, {params});\r\n    }\r\n\r\n    getStockTypes(params) {\r\n        return this.httpClient.get<any>(`${API_URL}stocks/get-types`, {params});\r\n    }\r\n\r\n    getIndices(params) {\r\n        return this.httpClient.get<any>(`${API_URL}stocks/get-indices`, {params});\r\n    }\r\n\r\n    getStocksByType(params) {\r\n        return this.httpClient.get<any>(`${API_URL}stocks/get-by-type`, {params});\r\n    }\r\n\r\n    getStockGraphsDataByType(params) {\r\n        return this.httpClient.get<any>(`${API_URL}stocks/get-graphs-data`, {params});\r\n    }\r\n\r\n    getBatchStocksList(params) {\r\n        return this.httpClient.get<any>(`${API_URL}stocks/get-batch-results`, {params});\r\n    }\r\n\r\n    getHistoricalPrices(params) {\r\n        return this.httpClient.get<any>(`${API_URL}stocks/get-historical`, {params});\r\n    }\r\n\r\n    getStockHistoricalPrices(params) {\r\n        return this.httpClient.get<any>(`${API_URL}stocks/get-stock-historical`, {params});\r\n    }\r\n\r\n    getStockChartData(params) {\r\n        return this.httpClient.get<any>(`${API_URL}stocks/get-stock-chart-data`, {params});\r\n    }\r\n\r\n    searchStocks(params) {\r\n        return this.httpClient.get<any>(`${API_URL}stocks/search`, {params});\r\n    }\r\n\r\n    searchStocksBySymbol(params) {\r\n        console.log('OK')\r\n        return this.httpClient.get<any>(`${API_URL}stocks/search-in-symbols-only`, {params});\r\n    }\r\n\r\n    getUserStocks(params) {\r\n        return this.httpClient.get<any>(`${API_URL}stocks/get-user-stocks`, {params});\r\n    }\r\n\r\n    updateUserStocksPriority(params) {\r\n        return this.httpClient.put<any>(`${API_URL}stocks/update-user-stocks-priority`, params);\r\n    }\r\n\r\n    getStocksSorted(params) {\r\n        return this.httpClient.get<any>(`${API_URL}stocks/get-by-sort-type`, {params});\r\n    }\r\n\r\n\r\n    updateFollowedStocks(params) {\r\n        return this.httpClient.put<any>(`${API_URL}stocks/update-user-stocks`, params);\r\n    }\r\n\r\n    searchInStockTypeData(params) {\r\n        return this.httpClient.get<any>(`${API_URL}stocks/search-in-typed-stocks-data`, {params});\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SubjectService {\r\n    token = localStorage.getItem('token')\r\n    authUserData = this.token ? jwtDecode(this.token) : '';\r\n    userStocks = {stocks: [], empty: true, initial: true};\r\n    indices = [];\r\n    stockTypes = [];\r\n\r\n    public messageData = new Subject<any>();\r\n    public videoRecordingState = new Subject<any>();\r\n    public videoSearchData = new Subject<any>();\r\n    public subscriptionsData = new Subject<any>();\r\n    public streamSessionData = new Subject<any>();\r\n    public toggleFiltersData = new Subject<any>();\r\n    private stocksData = new Subject<any>();\r\n    private indicesData = new Subject<any>();\r\n    private userStocksData = new Subject<any>();\r\n\r\n    private userStocksSource = new BehaviorSubject(this.userStocks);\r\n    private authUserSource = new BehaviorSubject(this.authUserData);\r\n    private indicesSource = new BehaviorSubject(this.indices);\r\n    private stockTypesSource = new BehaviorSubject(this.stockTypes);\r\n\r\n    authUser = this.authUserSource.asObservable();\r\n    currentUserStocks = this.userStocksSource.asObservable();\r\n    currentStockTypes = this.stockTypesSource.asObservable();\r\n    currentIndices = this.indicesSource.asObservable();\r\n\r\n\r\n    constructor() {\r\n    }\r\n\r\n    setMsgData(value) {\r\n        this.messageData.next(value);\r\n    }\r\n\r\n    getMsgData(): Observable<any> {\r\n        return this.messageData.asObservable();\r\n    }\r\n\r\n    setVideoRecordingState(value) {\r\n        this.videoRecordingState.next(value);\r\n    }\r\n\r\n    getVideoRecordingState(): Observable<any> {\r\n        return this.videoRecordingState.asObservable();\r\n    }\r\n\r\n    setVideosSearch(value) {\r\n        this.videoSearchData.next(value);\r\n    }\r\n\r\n    getVideosSearch(): Observable<any> {\r\n        return this.videoSearchData.asObservable();\r\n    }\r\n\r\n    setUserSubscriptions(value) {\r\n        this.subscriptionsData.next(value);\r\n    }\r\n\r\n    getUserSubscriptions(): Observable<any> {\r\n        return this.subscriptionsData.asObservable();\r\n    }\r\n\r\n    setSessionData(value) {\r\n        this.streamSessionData.next(value);\r\n    }\r\n\r\n    getSessionData(): Observable<any> {\r\n        return this.streamSessionData.asObservable();\r\n    }\r\n\r\n    setToggleFiltersData(value) {\r\n        this.toggleFiltersData.next(value);\r\n    }\r\n\r\n    getToggleFiltersData(): Observable<any> {\r\n        return this.toggleFiltersData.asObservable();\r\n    }\r\n\r\n    setStocksData(value) {\r\n        this.stocksData.next(value);\r\n    }\r\n\r\n    getStocksData(): Observable<any> {\r\n        return this.stocksData.asObservable();\r\n    }\r\n\r\n    setIndicesData(value) {\r\n        this.indicesData.next(value);\r\n    }\r\n\r\n    getIndicesData(): Observable<any> {\r\n        return this.indicesData.asObservable();\r\n    }\r\n\r\n    setUserStocksData(value) {\r\n        this.userStocksData.next(value);\r\n    }\r\n\r\n    getUserStocksData(): Observable<any> {\r\n        return this.userStocksData.asObservable();\r\n    }\r\n\r\n    changeUserStocks(stocks) {\r\n        this.userStocksSource.next(stocks);\r\n    }\r\n\r\n    changeAuthUser(data) {\r\n        this.authUserSource.next(data);\r\n    }\r\n\r\n    changeIndices(stocks) {\r\n        this.indicesSource.next(stocks);\r\n    }\r\n\r\n    changeStockTypes(stocks) {\r\n        this.stockTypesSource.next(stocks);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {API_URL} from '@core/constants/global';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n\r\n    constructor(\r\n        private httpClient: HttpClient\r\n    ) {\r\n    }\r\n\r\n    changeProfileImage(params) {\r\n        return this.httpClient.post<any>(`${API_URL}users/change-profile-image`, params);\r\n    }\r\n\r\n    changeCoverImage(params) {\r\n        return this.httpClient.post<any>(`${API_URL}users/change-cover-image`, params);\r\n    }\r\n\r\n    getUserInfo(params) {\r\n        return this.httpClient.get<any>(`${API_URL}users/get-user-info`, {params});\r\n    }\r\n\r\n    saveProfileChanges(params) {\r\n        return this.httpClient.put<any>(`${API_URL}users/save-profile-changes`, params);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {API_URL} from '@core/constants/global';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class VideoService {\r\n\r\n    constructor(\r\n        private httpClient: HttpClient\r\n    ) {\r\n    }\r\n\r\n    get(params) {\r\n        return this.httpClient.get<any>(`${API_URL}videos/get`, {params});\r\n    }\r\n\r\n    saveVideoToken(params) {\r\n        return this.httpClient.post<any>(`${API_URL}videos/save-video-token`, params);\r\n    }\r\n\r\n    saveVideoThumbnail(params) {\r\n        return this.httpClient.post<any>(`${API_URL}videos/save-video-thumbnail`, params);\r\n    }\r\n\r\n    removeVideoThumbnail(params) {\r\n        return this.httpClient.delete<any>(`${API_URL}videos/remove-video-thumbnail`, {params});\r\n    }\r\n\r\n    removeVideo(params) {\r\n        return this.httpClient.delete<any>(`${API_URL}videos/remove`, {params});\r\n    }\r\n\r\n    removeVideoByToken(params) {\r\n        return this.httpClient.delete<any>(`${API_URL}videos/remove-by-token`, {params});\r\n    }\r\n\r\n    saveRecordedData(params) {\r\n        return this.httpClient.post<any>(`${API_URL}videos/save-video-data`, params);\r\n    }\r\n\r\n    // saveVideoMessage(params) {\r\n    //     return this.httpClient.post<any>(`${API_URL}videos/save-video-message`, params);\r\n    // }\r\n\r\n    getVideoCategories() {\r\n        return this.httpClient.get<any>(`${API_URL}videos/get-categories`, {});\r\n    }\r\n\r\n    getUserVideos(params) {\r\n        return this.httpClient.get<any>(`${API_URL}videos/get-user-videos`, {params});\r\n    }\r\n\r\n    getUserSavedVideos(params) {\r\n        return this.httpClient.get<any>(`${API_URL}videos/get-saved`, {params});\r\n    }\r\n\r\n\r\n    getVideoById(params) {\r\n        return this.httpClient.get<any>(`${API_URL}videos/get-video-by-id`, {params});\r\n    }\r\n\r\n    getVideosByAuthor(params) {\r\n        return this.httpClient.get<any>(`${API_URL}videos/get-videos-by-author`, {params});\r\n    }\r\n\r\n    searchInUserVideos(params) {\r\n        return this.httpClient.get<any>(`${API_URL}videos/search-in-user-videos`, {params});\r\n    }\r\n\r\n    searchInAllVideos(params) {\r\n        return this.httpClient.get<any>(`${API_URL}videos/search-in-all-videos`, {params});\r\n    }\r\n\r\n    updateLikes(params) {\r\n        return this.httpClient.put<any>(`${API_URL}videos/update-likes`, params);\r\n    }\r\n\r\n    updateViews(params) {\r\n        return this.httpClient.put<any>(`${API_URL}videos/update-views`, params);\r\n    }\r\n\r\n    updatePrivacy(params) {\r\n        return this.httpClient.put<any>(`${API_URL}videos/update-privacy`, params);\r\n    }\r\n\r\n    indexUserTags(params) {\r\n        return this.httpClient.put<any>(`${API_URL}videos/index-user-tags`, params);\r\n    }\r\n\r\n    saveVideo(params) {\r\n        return this.httpClient.put<any>(`${API_URL}videos/save-video`, params);\r\n    }\r\n\r\n    saveVideoDetails(params) {\r\n        return this.httpClient.put<any>(`${API_URL}videos/save-video-details`, params);\r\n    }\r\n\r\n    getUserTags(params) {\r\n        return this.httpClient.get<any>(`${API_URL}videos/get-user-tags`, {params});\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-categories',\r\n  templateUrl: './categories.component.html',\r\n  styleUrls: ['./categories.component.scss']\r\n})\r\nexport class CategoriesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<ul class=\"categories\">\r\n    <li><a class=\"active\">Recommendations</a></li>\r\n    <li><a>Today's picks</a></li>\r\n    <li><a>AAPL</a></li>\r\n    <li><a>Phil Ramirez</a></li>\r\n    <li><a>True Money</a></li>\r\n    <li><a>PICK 4</a></li>\r\n    <li><a>Synergy fusion</a></li>\r\n    <li><a>Sunshine trading stream</a></li>\r\n    <li><a>Shot stocks</a></li>\r\n    <li><a>SMP</a></li>\r\n    <li><a>Strategy for U</a></li>\r\n    <li><a>Automotive</a></li>\r\n</ul>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {ChatService} from '@core/services/chat.service';\r\n\r\n@Component({\r\n    selector: 'app-chat-box',\r\n    templateUrl: './chat-box.component.html',\r\n    styleUrls: ['./chat-box.component.scss']\r\n})\r\nexport class ChatBoxComponent implements OnInit {\r\n    chatForm: FormGroup;\r\n    messageSent = false;\r\n    messages = [];\r\n    authUser;\r\n    selectedUsersToReply = [];\r\n    userSelected = false;\r\n    apiUrl = API_URL;\r\n    loadingMessages = false;\r\n\r\n    customEmojis = [\r\n        {\r\n            name: 'Octocat',\r\n            shortNames: ['octocat'],\r\n            text: '',\r\n            emoticons: [],\r\n            keywords: ['github'],\r\n            imageUrl: 'https://github.githubassets.com/images/icons/emoji/octocat.png',\r\n        }\r\n    ];\r\n\r\n\r\n    @Input('openViduToken') openViduToken;\r\n    @Input('session') session;\r\n    @Input('videoId') videoId;\r\n    @Output('sendMessage') sendMsg = new EventEmitter();\r\n    @Input('videoRecordingState') videoRecordingState;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private subject: SubjectService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private chatService: ChatService,\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n        if (!this.videoRecordingState) {\r\n            this.videoRecordingState = 'idle';\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.initForm();\r\n        this.getChatMessagesFromParentComponents();\r\n        this.getVideoRecordingState();\r\n        this.loadVideoPreviousMessages();\r\n\r\n    }\r\n\r\n    initForm() {\r\n        this.chatForm = this.fb.group({\r\n            token: [this.openViduToken],\r\n            from: [this.authUser.username],\r\n            from_id: [this.authUser.id],\r\n            to_id: [''],\r\n            avatar: [this.authUser.avatar],\r\n            message: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    loadVideoPreviousMessages() {\r\n        if (this.videoId) {\r\n            this.loadingMessages = true;\r\n            this.chatService.getChatMessages({video_id: this.videoId}).subscribe(dt => {\r\n                this.messages = dt;\r\n                this.loadingMessages = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    // Getting messages from publisher or subscriber component\r\n    getChatMessagesFromParentComponents() {\r\n        this.subject.getMsgData().subscribe((data) => {\r\n            const msgData = {from: '', avatar: '', message: ''};\r\n            if (data.from.includes('clientData')) {\r\n                const from = JSON.parse(data.from.replace(/}%\\/%{/g, ','));\r\n                msgData.from = from.clientData.myUserName;\r\n                msgData.avatar = from.avatar;\r\n                msgData.message = data.message;\r\n            }\r\n\r\n            if (msgData.from !== this.authUser.username) {\r\n\r\n                this.messages.push(msgData);\r\n            }\r\n        });\r\n    }\r\n\r\n    getVideoRecordingState() {\r\n        this.subject.getVideoRecordingState().subscribe(data => {\r\n            this.videoRecordingState = data.recording ? 'started' : 'finished';\r\n            // console.log('VIDEO RECORDING STATE:' + this.videoRecordingState + '!!!!');\r\n        });\r\n    }\r\n\r\n    selectUserToReply(m) {\r\n\r\n        if (m.from !== this.authUser.username) {\r\n            this.userSelected = true;\r\n            if (!this.selectedUsersToReply.includes(m.from)) {\r\n                this.selectedUsersToReply.push(m.from);\r\n                this.chatForm.patchValue({message: '@' + m.from + ''});\r\n            } else {\r\n                this.selectedUsersToReply = this.selectedUsersToReply.filter(f => f !== m.from);\r\n                this.chatForm.patchValue({message: ''});\r\n            }\r\n\r\n            console.log(this.selectedUsersToReply)\r\n        }\r\n    }\r\n\r\n    sendMessage(e) {\r\n        // Getting video id for publisher and subscriber differently\r\n        if (this.videoId && this.chatForm.valid) {\r\n            const data = {video_id: this.videoId, ...this.chatForm.value};\r\n            // console.log(data)\r\n            this.messages.push(data);\r\n            this.sendMsg.emit(data);\r\n            this.chatForm.patchValue({message: ''});\r\n        } else {\r\n            console.log('video id is not set');\r\n        }\r\n    }\r\n\r\n    addEmoji(e) {\r\n        console.log(e)\r\n        const message = this.chatForm.value.message;\r\n        this.chatForm.patchValue({message: message + (e.emoji.native ? e.emoji.native : e.emoji.imageUrl)});\r\n    }\r\n\r\n}\r\n","<div class=\"chat-content\">\r\n    <ng-container *ngIf=\"videoRecordingState === 'started'\">\r\n        <div class=\"chat-title\">\r\n            <div class=\"dropdown\">\r\n                <div class=\"dropdown-toggle\" id=\"dropdownChat\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                     aria-expanded=\"false\">\r\n                    Chat\r\n                </div>\r\n                <div class=\"dropdown-menu\" aria-labelledby=\"dropdownChat\">\r\n                    <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n                    <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n                    <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                </div>\r\n            </div>\r\n            <img src=\"assets/img/dotes.png\">\r\n        </div>\r\n        <div class=\"chat-information\">\r\n            <div class=\"loader\" *ngIf=\"loadingMessages\">\r\n                <mat-spinner [diameter]=\"30\"></mat-spinner>\r\n            </div>\r\n            <ng-container *ngIf=\"!loadingMessages\">\r\n                <div class=\"chat-block\" *ngFor=\"let message of messages\">\r\n\r\n                    <ng-container *ngIf=\"message.from\">\r\n\r\n                        <img class=\"avatar\" [class.selectable]=\"message.from!==this.authUser.username\"\r\n                             [class.selected]=\"selectedUsersToReply.includes(message.from) && userSelected\"\r\n                             [src]=\"message.avatar|getImgPath:'user_avatars'\" (click)=\"selectUserToReply(message)\">\r\n                        <p class=\"chat-block-1\">{{message.from + (message.from === authUser.username ? '(Me)' : '')}}</p>\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngIf=\"!message.from\">\r\n                        <img class=\"avatar\" [class.selectable]=\"message.user.from!==this.authUser.username\"\r\n                             [class.selected]=\"selectedUsersToReply.includes(message.from) && userSelected\"\r\n                             [src]=\"message.user.avatar|getImgPath:'user_avatars'\" (click)=\"selectUserToReply(message)\">\r\n                        <p class=\"chat-block-1\">{{message.user.from + (message.user.from === authUser.username ? '(Me)' : '')}}</p>\r\n                    </ng-container>\r\n                    <p class=\"chat-block-2\">{{message.message}}</p>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n\r\n        <div class=\"chat-footer\">\r\n            <form [formGroup]=\"chatForm\">\r\n                <input class=\"chat-input\" formControlName=\"message\" placeholder=\"Comment\"\r\n                       (keyup.enter)=\"sendMessage($event)\">\r\n                <emoji-mart [custom]=\"customEmojis\" (emojiClick)=\"addEmoji($event)\"></emoji-mart>\r\n            </form>\r\n            <div class=\"chat-footer-smile\">\r\n                <div class=\"nav-item dropdown\">\r\n                    <a class=\"chat-by-bits nav-lin\" data-toggle=\"dropdown\">Buy Bits</a>\r\n                    <div class=\"dropdown-menu\">\r\n                        <!--              <app-purchase-bits></app-purchase-bits>-->\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"smile-block\">\r\n                    <p class=\"smile\">0/200</p>\r\n                    <i class=\"send fas fa-paper-plane\"></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"videoRecordingState === 'idle'\">\r\n        <div id=\"chat-placeholder\">\r\n            <span>When recording is started, the chat box will appear here</span>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n","<form [formGroup]=\"searchStocksForm\" [class.modal-form]=\"modal\" [class.portable]=\"portable\">\r\n    <div class=\"search-wrapper\" id=\"stocks-search\">\r\n        <input [id]=\"modal ? 'stocks-search-input': 'stocks-search-modal-input'\"\r\n               [class.white]=\"modal\"\r\n               [placeholder]=\"(modal? 'Press \\'Enter\\' key to search stocks':'Search for stocks...')\"\r\n               formControlName=\"search\" #searchInput\r\n               (keyup)=\"searchStocks()\" #trigger=\"matAutocompleteTrigger\" [formControl]=\"myControl\"\r\n               (keyup.enter)=\"openStockPage(searchInput.value, trigger)\"\r\n               [matAutocomplete]=\"auto\">\r\n\r\n        <mat-autocomplete #auto=\"matAutocomplete\">\r\n\r\n            <ng-container *ngIf=\"(loadingSearch==='finished' && portable) then regularList else groupedList\">\r\n            </ng-container>\r\n\r\n            <ng-template #groupedList>\r\n                <mat-optgroup *ngFor=\"let group of searchResults\" [label]=\"group.name\">\r\n                    <mat-option *ngFor=\"let stock of group.stocks\" [value]=\"stock.name\"\r\n                                (click)=\"openStockPage(stock, trigger)\">\r\n                        <p>{{stock.symbol}}</p>\r\n                        <p>{{stock.name}}</p>\r\n                    </mat-option>\r\n                </mat-optgroup>\r\n            </ng-template>\r\n\r\n            <ng-template #regularList>\r\n                <mat-option *ngFor=\"let stock of searchResults\" [value]=\"stock.symbol\"\r\n                            (click)=\"sendBack(stock, trigger)\">\r\n                    <span class=\"stock-symbol\">{{stock.symbol}}</span>\r\n                    <span class=\"stock-name\">{{stock.name}}</span>\r\n                </mat-option>\r\n            </ng-template>\r\n\r\n\r\n        </mat-autocomplete>\r\n        <i class=\"fas fa-search\"></i>\r\n    </div>\r\n    <mat-spinner [diameter]=\"25\" *ngIf=\"loadingSearch ==='loading'\"></mat-spinner>\r\n</form>\r\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivationEnd, Router} from '@angular/router';\r\nimport {StocksService} from '@core/services/stocks.service';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-search-stocks-form-old',\r\n    templateUrl: './search-stocks-form.component.html',\r\n    styleUrls: ['./search-stocks-form.component.scss']\r\n})\r\nexport class SearchStocksFormOldComponent implements OnInit, OnDestroy {\r\n    searchStocksForm: FormGroup;\r\n    searchResults = [];\r\n    myControl = new FormControl();\r\n    loadingSearch = 'idle';\r\n    subscriptions: Subscription[] = [];\r\n\r\n\r\n    passedSearch;\r\n    @Input('modal') modal = false;\r\n    @Input('portable') portable = false;\r\n    @Input('openStockOnEnter') openStockOnEnter = false;\r\n    @Input('searchOnEnter') searchOnEnter = false;\r\n    @Input('autocomplete') autocomplete = false;\r\n    @Output('search') search = new EventEmitter();\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        public router: Router,\r\n        private stocksService: StocksService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.searchStocksForm = this.fb.group({search: ['', Validators.required]});\r\n        this.subscriptions.push(this.router.events.subscribe((val) => {\r\n            if (val instanceof ActivationEnd) {\r\n                this.passedSearch = val.snapshot.queryParams?.search;\r\n                this.searchStocksForm.patchValue({search: this.passedSearch});\r\n            }\r\n        }));\r\n    }\r\n\r\n    searchStocks() {\r\n\r\n        if (!this.modal && this.autocomplete) {\r\n            this.loadingSearch = 'loading';\r\n            this.searchResults = [];\r\n            this.subscriptions.push(\r\n                this.stocksService.searchStocks({\r\n                    ...this.searchStocksForm.value,\r\n                    grouped: this.portable ? 0 : 1\r\n                }).subscribe(dt => {\r\n                    this.loadingSearch = 'finished';\r\n                    if (this.portable) {\r\n                        this.searchResults = dt?.[0]?.stocks.slice(0, 10);\r\n                    } else {\r\n                        this.searchResults = dt.slice(0, 10);\r\n                    }\r\n                }));\r\n        } else if (this.portable) {\r\n            this.stocksService.searchStocksBySymbol({...this.searchStocksForm.value}).subscribe(dt => {\r\n                this.loadingSearch = 'finished';\r\n                this.searchResults = dt;\r\n            });\r\n        } else if (this.searchOnEnter) {\r\n            this.search.emit(this.searchStocksForm.value);\r\n        }\r\n    }\r\n\r\n    async openStockPage(stock, trigger) {\r\n        if (!this.modal && this.openStockOnEnter) {\r\n            trigger.closePanel();\r\n            this.router.navigateByUrl('/test', {skipLocationChange: true}).then(async () =>\r\n                await this.router.navigate([`stocks/${stock.symbol || stock}/analytics`])\r\n            );\r\n        } else {\r\n            console.log('aaaa')\r\n            this.searchStocks();\r\n            this.search.emit(this.searchStocksForm.value);\r\n        }\r\n    }\r\n\r\n    sendBack(stock, trigger) {\r\n        trigger.closePanel();\r\n        this.search.emit(stock);\r\n        this.searchStocksForm.reset();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n}\r\n","<form [formGroup]=\"searchStocksForm\" [class.white-form]=\"whiteForm\" [class.transparent-form]=\"transparentForm\">\r\n    <div class=\"search-wrapper\">\r\n        <input formControlName=\"search\" (keyup.enter)=\"handleEnter()\" [placeholder]=\"getPlaceholder()\"\r\n               [matAutocomplete]=\"auto\" #trigger=\"matAutocompleteTrigger\" (keyup)=\"handleRegularKeyup()\">\r\n        <i class=\"fas fa-search\"></i>\r\n        <mat-autocomplete #auto=\"matAutocomplete\">\r\n            <ng-container *ngIf=\"autocomplete\">\r\n                <ng-container *ngIf=\"groupResults then groupedList else regularList\"></ng-container>\r\n            </ng-container>\r\n\r\n            <ng-template #groupedList>\r\n                <mat-optgroup *ngFor=\"let group of searchResults\" [label]=\"group.name\">\r\n                    <mat-option *ngFor=\"let stock of group.stocks\" [value]=\"stock.name\"\r\n                                (click)=\"handleStockClick(stock, trigger)\">\r\n                        <p>{{stock.symbol}}</p>\r\n                        <small>{{stock.name}}</small>\r\n                    </mat-option>\r\n                </mat-optgroup>\r\n            </ng-template>\r\n\r\n            <ng-template #regularList>\r\n                <mat-option *ngFor=\"let stock of searchResults\" [value]=\"stock.symbol\"\r\n                            (click)=\"handleStockClick(stock, trigger)\">\r\n                    <span>{{stock.symbol}}</span>\r\n                    <small>{{stock.name}}</small>\r\n                </mat-option>\r\n            </ng-template>\r\n\r\n        </mat-autocomplete>\r\n    </div>\r\n</form>\r\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {Subscription} from 'rxjs';\r\nimport {StocksService} from '@core/services/stocks.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-search-stocks-form',\r\n    templateUrl: './search-stocks-form.component.html',\r\n    styleUrls: ['./search-stocks-form.component.scss']\r\n})\r\nexport class SearchStocksFormComponent implements OnInit, OnDestroy {\r\n    searchStocksForm: FormGroup;\r\n    subscriptions: Subscription[] = [];\r\n    searchResults = [];\r\n    loadingSearch = 'idle';\r\n\r\n    @Input('autocomplete') autocomplete = false;\r\n    @Input('groupResults') groupResults = false;\r\n    @Input('returnSearchText') returnSearchText = false;\r\n    @Input('returnFoundStock') returnFoundStock = false;\r\n    @Input('searchOnEnter') searchOnEnter = false;\r\n    @Input('openStockOnEnter') openStockOnEnter = false;\r\n    @Input('updateStocksOnEnter') updateStocksOnEnter = false;\r\n    @Input('whiteForm') whiteForm = false;\r\n    @Input('transparentForm') transparentForm = false;\r\n\r\n    @Output('search') search = new EventEmitter();\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private stocksService: StocksService,\r\n        public router: Router\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.searchStocksForm = this.fb.group({search: ['', Validators.required]});\r\n    }\r\n\r\n    handleRegularKeyup() {\r\n        if (!this.searchOnEnter && this.autocomplete) {\r\n            this.searchStocks();\r\n        }\r\n    }\r\n\r\n    handleEnter() {\r\n        if (this.searchOnEnter) {\r\n            this.searchStocks();\r\n        } else if (this.returnSearchText) {\r\n            this.search.emit(this.searchStocksForm.value);\r\n        }\r\n    }\r\n\r\n    searchStocks() {\r\n        this.loadingSearch = 'loading';\r\n        this.searchResults = [];\r\n        this.subscriptions.push(\r\n            this.stocksService.searchStocks({\r\n                ...this.searchStocksForm.value,\r\n                grouped: this.groupResults ? 1 : 0\r\n            }).subscribe(dt => {\r\n                this.loadingSearch = 'finished';\r\n                this.searchResults = dt.slice(0, 10);\r\n            }));\r\n    }\r\n\r\n    handleStockClick(stock, trigger) {\r\n        trigger.closePanel();\r\n\r\n        if (this.openStockOnEnter) {\r\n            this.router.navigateByUrl('/test', {skipLocationChange: true}).then(async () =>\r\n                await this.router.navigate([`stocks/${stock.symbol || stock}/analytics`])\r\n            );\r\n        } else {\r\n            this.search.emit(this.returnSearchText ? this.searchStocksForm.value : stock);\r\n        }\r\n        this.searchStocksForm.reset();\r\n    }\r\n\r\n    getPlaceholder() {\r\n        return this.autocomplete ? 'Search for stocks...' : 'Press \\'Enter\\' key to search stocks';\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n}\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivationEnd, NavigationEnd, Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-search-videos-form',\r\n    templateUrl: './search-videos-form.component.html',\r\n    styleUrls: ['./search-videos-form.component.scss']\r\n})\r\nexport class SearchVideosFormComponent implements OnInit {\r\n    searchVideosForm: FormGroup;\r\n    passedSearch;\r\n    @Output('search') search = new EventEmitter();\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        public router: Router\r\n    ) {\r\n        this.searchVideosForm = this.fb.group({search: ['', Validators.required]});\r\n        router.events.subscribe((val) => {\r\n            if (val instanceof ActivationEnd) {\r\n                this.passedSearch = val.snapshot.queryParams?.search;\r\n                this.searchVideosForm.patchValue({search: this.passedSearch});\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    searchVideos() {\r\n        // this.subject.setVideosSearch(this.searchVideosForm.value);\r\n        this.search.emit(this.searchVideosForm.value);\r\n    }\r\n\r\n}\r\n","<form [formGroup]=\"searchVideosForm\">\r\n    <div class=\"search-wrapper\" id=\"videos-search\">\r\n        <input placeholder=\"Search for videos...\" formControlName=\"search\"\r\n               (keyup.enter)=\"searchVideos()\">\r\n        <i class=\"fas fa-search\" (click)=\"searchVideos()\"></i>\r\n    </div>\r\n</form>\r\n","<ng-container *ngIf=\"portable then portableStocksList; else tilesList\">\r\n</ng-container>\r\n\r\n<ng-template #tilesList>\r\n    <div id=\"stock-tiles-holder\" cdkDropList (cdkDropListDropped)=\"drop($event)\">\r\n        <div class=\"stock-item\" cdkDrag (cdkDragDropped)=\"dragDropped($event, stock)\" *ngFor=\"let stock of getPassedStocks(); let last=last\"\r\n             [class.stock-item-green]=\"stock.changesPercentage > 0\">\r\n            <div class=\"stock-follow\" [hidden]=\"!followAllowed\">\r\n                <button (click)=\"updateFollowedStocksList(stock)\" *ngIf=\"!isStockFollowed(stock)\">Follow</button>\r\n\r\n                <button class=\"unfollow-btn\" (click)=\"updateFollowedStocksList(stock)\" *ngIf=\"isStockFollowed(stock)\">\r\n                    <mat-icon>delete</mat-icon>\r\n                </button>\r\n            </div>\r\n            <div (click)=\"openStockProfile(stock.symbol)\">\r\n                <p class=\"stock-name\">{{stock.name}}</p>\r\n                <p class=\"stock-price\"><span class=\"dollar-sign\">$</span>{{stock.price}}</p>\r\n                <div class=\"stock-price-details\">\r\n                    <p class=\"stock-price-change\">{{stock.change?.toFixed(2)}}</p>\r\n                    <p class=\"stock-price-change-percent\">{{stock.changesPercentage}}%</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"small-chart-container\" *ngIf=\"stock.hasOwnProperty('series')\"\r\n                 (click)=\"openStockProfile(stock.symbol)\">\r\n                <ngx-charts-line-chart [scheme]=\"colorScheme\" [legend]=\"false\"\r\n                                       [tooltipDisabled]=\"true\"\r\n                                       [xAxis]=\"true\" [yAxis]=\"true\"\r\n                                       [results]=\"[stock]\" [rotateXAxisTicks]=\"false\"\r\n                                       [autoScale]=\"true\" [xAxisTicks]=\"[]\" [animations]=\"false\"\r\n                                       [timeline]=\"true\" [yAxisTicks]=\"[]\" [view]=\"view\"\r\n                                       [showGridLines]=\"true\" [showRefLabels]=\"false\">\r\n                </ngx-charts-line-chart>\r\n            </div>\r\n            <div *ngIf=\"last && !portable && !modal\" (click)=\"increaseShow()\">See more</div>\r\n            <!--                <img class=\"crypto-map\" src=\"assets/img/map.png\">-->\r\n        </div>\r\n        <mat-error *ngIf=\"passedStocks?.length ===0\">No results found</mat-error>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #portableStocksList>\r\n    <div id=\"portable-stocks-list\">\r\n        <div class=\"stocks-top-actions\">\r\n            <div class=\"search-stocks\">\r\n                <div class=\"watchlist-search\" *ngIf=\"editUserStocks\">\r\n                    <app-search-stocks-form [autocomplete]=\"true\" [whiteForm]=\"true\" [returnFoundStock]=\"true\"\r\n                                            (search)=\"getSearchResults($event)\"></app-search-stocks-form>\r\n                </div>\r\n\r\n                <div class=\"sort-types-dropdown dropdown\">\r\n                    <div class=\"dropdown-toggle\" id=\"dropdown-menu-btn\" data-toggle=\"dropdown\"\r\n                         aria-haspopup=\"true\"\r\n                         aria-expanded=\"false\">\r\n                        Sort by <strong class=\"order-type\">{{selectedSortType?.name}}</strong>\r\n                    </div>\r\n                    <div class=\"dropdown-menu\">\r\n                        <a class=\"dropdown-item\" *ngFor=\"let sortType of sortTypes;let ind = index\"\r\n                           [class.red]=\"selectedSortType?.name === sortType.name\"\r\n                           (click)=\"sortStocks(sortType)\">{{sortType.name}}</a>\r\n                    </div>\r\n                    <div class=\"spinner-container\">\r\n                        <mat-spinner *ngIf=\"sortedListLoading || loader.stocksLoading.status === 'loading'\"\r\n                                     [diameter]=\"15\"></mat-spinner>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"context-actions\" *ngIf=\"editPortable\">\r\n                <mat-icon [matMenuTriggerFor]=\"menu\" *ngIf=\"!editUserStocks\">more_horiz</mat-icon>\r\n                <mat-icon *ngIf=\"editUserStocks\" (click)=\"editUserStocks = !editUserStocks\">done</mat-icon>\r\n                <mat-menu #menu=\"matMenu\">\r\n                    <button mat-menu-item (click)=\"editUserStocks = !editUserStocks\">\r\n                        Edit Watchlist\r\n                    </button>\r\n                </mat-menu>\r\n            </div>\r\n\r\n\r\n        </div>\r\n        <div id=\"portable-stocks\" cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"passedStocks?.length > 0\">\r\n            <ng-container *ngFor=\"let stock of onlyFirst10Stocks(passedStocks); let ind = index\">\r\n                <div class=\"portable-stock-item\" cdkDrag\r\n                     (cdkDragDropped)=\"dragDropped($event, stock)\">\r\n                    <div class=\"remove-stock\" *ngIf=\"editUserStocks\" (click)=\"updateFollowedStocksList(stock)\">\r\n                        <i class=\"fas fa-trash\"></i>\r\n                    </div>\r\n                    <div class=\"stock-details\" (click)=\"openStockProfile(stock.symbol)\">\r\n                        <div class=\"stock-name-symbol\">\r\n                            <p class=\"stock-symbol\">{{stock.symbol.replace('^', '')}}</p>\r\n                            <p class=\"stock-name\">{{stock.name}}</p>\r\n                        </div>\r\n\r\n                        <ng-container\r\n                            [ngTemplateOutlet]=\"itemTemplate\"\r\n                            [ngTemplateOutletContext]=\"{details: getPercentageDetails(stock)}\">\r\n                        </ng-container>\r\n\r\n                        <ng-template let-d=\"details\" #itemTemplate>\r\n                            <div class=\"indices-small-chart-container\" *ngIf=\"stock.hasOwnProperty('series')\">\r\n                                <ngx-charts-line-chart [scheme]=\"getPortableColorScheme(stock)\" [animations]=\"false\"\r\n                                                       [results]=\"[stock]\" [tooltipDisabled]=\"true\"\r\n                                                       [autoScale]=\"true\" [view]=\"portableView\"\r\n                                                       [timeline]=\"true\" [xAxisTicks]=\"[]\" [yAxisTicks]=\"[]\"\r\n                                                       [showGridLines]=\"false\" [showRefLabels]=\"false\">\r\n                                </ngx-charts-line-chart>\r\n                            </div>\r\n                            <div class=\"stock-price-change\">\r\n                                <p class=\"stock-price\">{{stock.price?.toFixed(2)}}</p>\r\n                                <p [ngClass]=\"d?.class\" class=\"stock-change-details\">\r\n                                    {{stock.change?.toFixed(2)}}({{d?.value?.toFixed(2)}}%)</p>\r\n                            </div>\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n","import {\r\n    ChangeDetectorRef,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    SimpleChanges\r\n} from '@angular/core';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {NavigationEnd, Router} from '@angular/router';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {moveItemInArray} from '@core/helpers/move-item-in-array';\r\nimport {StocksService} from '@core/services/stocks.service';\r\nimport {UpdateUserStocksPipe} from '@shared/pipes/update-user-stocks.pipe';\r\nimport {Subscription} from 'rxjs';\r\nimport {LoaderService} from '@core/services/loader.service';\r\n\r\n@Component({\r\n    selector: 'app-stocks-list-sample',\r\n    templateUrl: './stocks-list-sample.component.html',\r\n    styleUrls: ['./stocks-list-sample.component.scss']\r\n})\r\nexport class StocksListSampleComponent implements OnInit, OnChanges {\r\n    @Input('stocks') passedStocks = [];\r\n    @Input('userStocks') userStocks = [];\r\n    @Input('followAllowed') followAllowed = true;\r\n    @Input('unfollow') unfollow = false;\r\n    @Input('portable') portable = false;\r\n    @Input('type') selectedStockType;\r\n    @Input('sort') sort = {name: '', id: ''};\r\n    @Input('editPortable') editPortable = false;\r\n    @Input('modal') modal = false;\r\n    @Input('pagination') pagination = false;\r\n\r\n    authUser;\r\n    userStocksOnly = this.passedStocks === this.userStocks;\r\n    routerUrl;\r\n\r\n    show = 6;\r\n\r\n    editUserStocks = false;\r\n    sortTypes = [\r\n        {name: 'My sort', value: 'custom'},\r\n        {name: 'A-Z', value: 'alphabetical'},\r\n        {name: 'Gain', value: 'gain'},\r\n        {name: 'Loss', value: 'loss'}\r\n    ];\r\n    selectedSortType;\r\n    sortedListLoading = false;\r\n\r\n\r\n    // Stock chart settings\r\n    view: any[] = [180, 130];\r\n    portableView: any[] = [100, 130];\r\n    colorScheme = {\r\n        domain: ['#ffffff']\r\n    };\r\n\r\n    subscriptions: Subscription[] = [];\r\n\r\n\r\n    @Output('updatedStocksList') updatedStocksList = new EventEmitter();\r\n\r\n    constructor(\r\n        private getAuthUser: GetAuthUserPipe,\r\n        public router: Router,\r\n        private subject: SubjectService,\r\n        private cdr: ChangeDetectorRef,\r\n        private stocksService: StocksService,\r\n        private updateStocks: UpdateUserStocksPipe,\r\n        public loader: LoaderService\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.selectedSortType = this.sort || this.authUser.stocks_order_type;\r\n        this.router.events.subscribe(ev => {\r\n            if (ev instanceof NavigationEnd) {\r\n                this.routerUrl = ev.url;\r\n            }\r\n        });\r\n\r\n        // this.subscriptions.push(this.loader.currentLoaderState.subscribe(dt => {\r\n        //     this.sortedListLoading = dt;\r\n        // }));\r\n\r\n    }\r\n\r\n    getPassedStocks() {\r\n        if (!this.portable && !this.modal) {\r\n            return this.passedStocks.slice(0, this.show);\r\n        }\r\n        return this.passedStocks;\r\n    }\r\n\r\n\r\n    updateFollowedStocksList(stock) {\r\n        const {userStocks, following} = this.updateStocks.transform(this.userStocks, stock, this.selectedStockType?.id);\r\n\r\n        if (this.pagination) {\r\n\r\n        } else if (!this.modal) {\r\n            this.passedStocks = userStocks;\r\n        } else {\r\n            if (following) {\r\n                this.userStocks = userStocks;\r\n            } else {\r\n                this.passedStocks = userStocks;\r\n            }\r\n        }\r\n        // this.loader.show();\r\n        // this.loader.stocksLoading = 'loading';\r\n        this.updatedStocksList.emit(userStocks);\r\n\r\n    }\r\n\r\n    isStockFollowed(stock) {\r\n        return !!this.userStocks.find(s => s.name === stock.name);\r\n    }\r\n\r\n    openStockProfile(stock) {\r\n        if (!this.modal && this.portable) {\r\n            this.router.navigateByUrl('/test', {skipLocationChange: true}).then(async () => {\r\n                    await this.router.navigate([`stocks/${stock}/analytics`]);\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getPercentageDetails(stock) {\r\n        const value = +stock.changesPercentage; // .replace(/[(%)]/g, '')\r\n        return {\r\n            ...{value},\r\n            color: (+value > 0 ? 'green' : 'red'),\r\n            class: 'stock-' + (+value > 0 ? 'green' : 'red')\r\n        };\r\n    }\r\n\r\n\r\n    getSearchResults(e) {\r\n        this.updateFollowedStocksList(e);\r\n    }\r\n\r\n    drop(e) {\r\n\r\n    }\r\n\r\n    dragDropped(e, stock) {\r\n        this.passedStocks = moveItemInArray(this.passedStocks, e.previousIndex, e.currentIndex);\r\n        const sendData = {\r\n            order_type: 'custom',\r\n            rows: JSON.stringify(this.passedStocks),\r\n            user_id: this.authUser.id\r\n        };\r\n        this.stocksService.updateUserStocksPriority(sendData).subscribe(dt => {\r\n            this.selectedSortType = this.sortTypes[0];\r\n            localStorage.setItem('token', (dt.hasOwnProperty('token') ? dt.token : ''));\r\n            this.subject.changeAuthUser((dt.hasOwnProperty('token') ? dt.token : ''));\r\n        });\r\n    }\r\n\r\n    onlyFirst10Stocks(stocks) {\r\n        return stocks.filter((st, index) => index < 10);\r\n    }\r\n\r\n    sortStocks(type) {\r\n        this.selectedSortType = type;\r\n        if (type.name !== 'My sort') {\r\n\r\n            this.passedStocks.sort((a, b) => {\r\n                if (type.name === 'A-Z') {\r\n                    return a.name.localeCompare(b.symbol);\r\n                } else {\r\n                    return a.change > b.change ? -1 : 1;\r\n                }\r\n            });\r\n\r\n            if (type.name === 'Loss') {\r\n                this.passedStocks.reverse();\r\n            }\r\n        }\r\n\r\n        const sendData = {\r\n            rows: JSON.stringify(this.passedStocks),\r\n            user_id: this.authUser.id,\r\n            order_type: type.value,\r\n            changeSortTypeOnly: true\r\n        };\r\n        // console.log(sendData)\r\n        this.stocksService.updateUserStocksPriority(sendData).subscribe(dt => {\r\n            localStorage.setItem('token', (dt.hasOwnProperty('token') ? dt.token : ''));\r\n            this.subject.changeAuthUser((dt.hasOwnProperty('token') ? dt.token : ''));\r\n        });\r\n\r\n        if (type.name === 'My sort') {\r\n            this.sortedListLoading = true;\r\n            this.stocksService.getUserStocks({sort_type: type.value, user_id: this.authUser.id}).subscribe(dt => {\r\n                this.passedStocks = dt?.user_stocks || [];\r\n                this.sortedListLoading = false;\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPortableColorScheme(stock) {\r\n        return {\r\n            domain: (stock.changesPercentage > 0 ? ['#18B587'] : ['#F53C6F'])\r\n        };\r\n    }\r\n\r\n    increaseShow() {\r\n        this.show += 6;\r\n    }\r\n\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n        for (const property in changes) {\r\n            if (property === 'selectedStockType') {\r\n                this.selectedStockType = changes.selectedStockType.currentValue;\r\n            }\r\n            // else if (property === 'userStocks') {\r\n            //     this.userStocks = changes.userStocks.currentValue;\r\n            //     if (this.selectedSortType?.name) {\r\n            //         this.sortStocks(this.selectedSortType);\r\n            //     }\r\n            // }\r\n            // else if (property === 'passedStocks') {\r\n            //     this.passedStocks = changes.passedStocks.currentValue;\r\n            //     if (this.selectedSortType?.name) {\r\n            //         this.sortStocks(this.selectedSortType);\r\n            //     }\r\n            // }\r\n        }\r\n    }\r\n\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {BsModalService} from 'ngx-bootstrap/modal';\r\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport {StocksService} from '@core/services/stocks.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {updateStockDetails} from '@core/helpers/update-stock-details';\r\nimport {Subscription} from 'rxjs';\r\nimport {LoaderService} from '@core/services/loader.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\n@Component({\r\n    selector: 'app-stocks-lists',\r\n    templateUrl: './stocks-lists-modal.component.html',\r\n    styleUrls: ['./stocks-lists-modal.component.scss']\r\n})\r\nexport class StocksListsModalComponent implements OnInit {\r\n    stockTypes;\r\n    stocks = [];\r\n    selectedStockType;\r\n    filteredStocks = [];\r\n    filteredUserStocks = [];\r\n    userStocks = [];\r\n    authUser;\r\n    search;\r\n    searched = false;\r\n\r\n    public pageSize = 14;\r\n    public pageIndex = 0;\r\n\r\n    subscriptions: Subscription[] = [];\r\n\r\n\r\n    constructor(\r\n        private modalService: BsModalService,\r\n        private dialog: MatDialog,\r\n        private matDialogRef: MatDialogRef<StocksListsModalComponent>,\r\n        private stocksService: StocksService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private subject: SubjectService,\r\n        public loader: LoaderService,\r\n        private toastr: ToastrService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getStocksByType('stocks');\r\n        this.authUser = this.getAuthUser.transform();\r\n        this.subscriptions.push(this.subject.currentStockTypes.subscribe(dt => {\r\n            this.stockTypes = dt;\r\n            this.selectedStockType = dt[0];\r\n            this.getUserStocks({type_id: this.selectedStockType?.id});\r\n        }));\r\n    }\r\n\r\n    getUserStocks(params = {}) {\r\n        this.loader.stocksLoading.text =  'Loading user stocks list and charts';\r\n        this.stocksService.getUserStocks({\r\n            user_id: this.authUser.id,\r\n            ...params\r\n        }).subscribe(dt => {\r\n            this.userStocks = dt?.user_stocks || [];\r\n            this.loader.stocksLoading.text = 'Loading stocks of selected category and charts';\r\n            if (params.hasOwnProperty('close')) {\r\n                this.subject.changeUserStocks({stocks: this.userStocks, empty: this.userStocks.length === 0});\r\n            }\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.modalService.hide();\r\n        this.matDialogRef.close();\r\n        this.selectedStockType = null;\r\n        this.getUserStocks({close: true});\r\n    }\r\n\r\n    stockTypeChanged(e) {\r\n        this.selectedStockType = this.stockTypes.find(t => t.value === e.target.value);\r\n        this.filteredStocks = [];\r\n        if (this.search) {\r\n            this.searchInStockType();\r\n        } else {\r\n            this.getUserStocks({type_id: this.selectedStockType.id});\r\n            this.getStocksByType(this.selectedStockType.value);\r\n        }\r\n    }\r\n\r\n    getStocksByType(type) {\r\n        this.loader.stocksLoading.status = 'loading';\r\n        this.stocksService.getStocksByType({type}).subscribe(dt => {\r\n            this.stocks = dt;\r\n\r\n            this.pageSize = 14;\r\n            this.pageIndex = 0;\r\n            this.filterStocks();\r\n            this.loader.stocksLoading.status = 'finished';\r\n            // const stockNamesList = this.filteredStocks.map(f => f.symbol).join(',');\r\n            // this.getStockGraphsDataByType(stockNamesList, dt);\r\n        });\r\n    }\r\n\r\n    getStockGraphsDataByType(stocks, allStocks, filter = false) {\r\n        this.loader.stocksLoading = {status: 'loading', text: 'Loading charts data'};\r\n        if (stocks) {\r\n            this.stocksService.getStockGraphsDataByType({stocks}).subscribe(dt => {\r\n                const st = allStocks.map((item, i) => Object.assign({}, item, dt[i]));\r\n                if (filter) {\r\n                    this.filteredStocks = st;\r\n                } else {\r\n                    this.stocks = st;\r\n                    this.filterStocks();\r\n                }\r\n                this.loader.stocksLoading.status = 'finished';\r\n            });\r\n        } else {\r\n            this.loader.stocksLoading.status = 'finished';\r\n        }\r\n\r\n    }\r\n\r\n    // Filters routes for floating panel\r\n    filterStocks() {\r\n        this.filteredStocks = this.stocks.slice(this.pageIndex * this.pageSize,\r\n            this.pageIndex * this.pageSize + this.pageSize);\r\n        // this.filteredUserStocks = this.userStocks.slice(this.pageIndex * this.pageSize,\r\n        //     this.pageIndex * this.pageSize + this.pageSize);\r\n\r\n    }\r\n\r\n    // Handles floating panel routes pagination\r\n    handle(e) {\r\n\r\n        this.pageIndex = e.pageIndex;\r\n        this.pageSize = e.pageSize;\r\n        this.filterStocks();\r\n        const stockNamesList = this.filteredStocks.map(f => f.symbol).join(',');\r\n        this.getStockGraphsDataByType(stockNamesList, this.filteredStocks, true);\r\n    }\r\n\r\n    updateFollowedStocks(stocks) {\r\n\r\n        this.loader.stocksLoading.status = 'loading';\r\n        if (stocks.length === 25) {\r\n            this.toastr.error('We support not more than 25 stocks per user');\r\n            this.loader.stocksLoading.status = 'finished';\r\n        } else {\r\n            this.loader.stocksLoading.text = 'Updating stocks lists, details and charts';\r\n            this.stocksService.updateFollowedStocks({\r\n                user_id: this.authUser.id,\r\n                ...{stocks},\r\n                type_id: this.selectedStockType.id\r\n            }).subscribe(dt => {\r\n                this.userStocks = dt?.user_stocks || [];\r\n                this.loader.stocksLoading.status = 'finished';\r\n            });\r\n        }\r\n    }\r\n\r\n    isStockFollowed(stock) {\r\n        return !!this.userStocks.find(s => s.name === stock.name);\r\n    }\r\n\r\n    getUpdatedStockDetails(userStocks) {\r\n\r\n        // if (!this.search) {\r\n\r\n\r\n        // }\r\n        return updateStockDetails(userStocks, this.stocks);\r\n    }\r\n\r\n    getSearchResults(e) {\r\n        this.search = e?.search;\r\n        this.searched = true;\r\n        if (this.search) {\r\n            this.loader.stocksLoading.status = 'loading';\r\n            this.loader.stocksLoading.text = 'Searching in the selected category of stocks';\r\n            this.searchInStockType();\r\n        } else {\r\n            this.getStocksByType(this.selectedStockType.value);\r\n        }\r\n\r\n    }\r\n\r\n    searchInStockType() {\r\n        if (this.search) {\r\n            this.stocksService.searchInStockTypeData({\r\n                search: this.search,\r\n                stockType: this.selectedStockType.value\r\n            }).subscribe((dt: any) => {\r\n                this.stocks = dt;\r\n                // this.stocksLoading.status = 'finished';\r\n                this.filterStocks();\r\n                const stockNamesList = this.filteredStocks.map(f => f.symbol).join(',');\r\n                this.getStockGraphsDataByType(stockNamesList, this.filteredStocks, true);\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n","<section id=\"stocks-lists-modal\">\r\n    <div class=\"user-stocks\">\r\n        <div class=\"top-wrap\">\r\n            <div class=\"left-group\">\r\n                <h2>My Watchlist</h2>\r\n            </div>\r\n\r\n            <div class=\"center-group\">\r\n                <!--                <div class=\"spinner-container\" *ngIf=\"stocksLoading.status==='loading'\">-->\r\n                <!--                    <mat-spinner [diameter]=\"25\"></mat-spinner>-->\r\n                <!--                    <span>{{stocksLoading.text}}...</span>-->\r\n                <!--                </div>-->\r\n            </div>\r\n\r\n            <div class=\"right-group\">\r\n\r\n                <div class=\"stock-type-selector\">\r\n                    <select (change)=\"stockTypeChanged($event)\">\r\n                        <option *ngFor=\"let type of stockTypes\" [selected]=\"type.value === selectedStockType?.value\"\r\n                                [value]=\"type.value\">{{type.name}}</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"close-modal-btn\">\r\n                    <i class=\"fas fa-times\" (click)=\"closeModal()\"></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"user-stocks-list\">\r\n<!--            <div class=\"paginator\">-->\r\n            <!--                <ng-container *ngIf=\"userStocks.length > 12\">-->\r\n            <!--                    <mat-paginator (page)=\"handle($event)\"-->\r\n            <!--                                   #paginator-->\r\n            <!--                                   [length]=\"userStocks.length\" [pageIndex]=\"pageIndex\"-->\r\n            <!--                                   [pageSize]=\"pageSize\" [hidePageSize]=\"true\"-->\r\n            <!--                                   [pageSizeOptions]=\"[2,5,10,25,100]\">-->\r\n            <!--                    </mat-paginator>-->\r\n            <!--                </ng-container>-->\r\n            <!--            </div>-->\r\n            <!--            <app-stocks-list-sample [stocks]=\"updateStockDetails(userStocks)\" [type]=\"selectedStockType\"-->\r\n            <!--                                    (updatedStocksList)=\"updateFollowedStocks($event)\" [modal]=\"true\"-->\r\n            <!--                                    [userStocks]=\"updateStockDetails(userStocks)\"-->\r\n            <!--                                    *ngIf=\"userStocks.length > 0\"></app-stocks-list-sample>-->\r\n            <app-stocks-tiles [stocks]=\"userStocks\" *ngIf=\"userStocks.length > 0\" [dragDropDisabled]=\"true\"\r\n                              [userStocks]=\"getUpdatedStockDetails(userStocks)\"\r\n                              (updatedStocksList)=\"updateFollowedStocks($event)\"></app-stocks-tiles>\r\n            <p *ngIf=\"userStocks?.length===0 && loader.stocksLoading.status!=='loading'\">\r\n                No user stocks of selected type is found\r\n            </p>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"all-stocks\">\r\n        <div class=\"top-wrap\">\r\n            <div class=\"left-group\">\r\n                <h2>Tilez</h2>\r\n            </div>\r\n\r\n\r\n            <div class=\"center-group\">\r\n\r\n                <app-search-stocks-form [hidden]=\"loader.stocksLoading.status==='loading' && !searched\"\r\n                                        [returnSearchText]=\"true\"\r\n                                        [transparentForm]=\"true\"\r\n                                        (search)=\"getSearchResults($event)\"></app-search-stocks-form>\r\n                <div class=\"spinner-container\" *ngIf=\"loader.stocksLoading.status==='loading'\">\r\n                    <mat-spinner [diameter]=\"25\"></mat-spinner>\r\n                    <span>{{loader.stocksLoading.text}}...</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"right-group\">\r\n\r\n                <div class=\"paginator\">\r\n                    <ng-container *ngIf=\"loader.stocksLoading.status==='finished'\">\r\n                        <mat-paginator *ngIf=\"stocks.length > 0\" (page)=\"handle($event)\"\r\n                                       #paginator\r\n                                       [length]=\"stocks.length\" [pageIndex]=\"pageIndex\"\r\n                                       [pageSize]=\"pageSize\" [hidePageSize]=\"true\"\r\n                                       [pageSizeOptions]=\"[2,5,10,25,100]\">\r\n                        </mat-paginator>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n        <div class=\"all-stocks-list\">\r\n\r\n            <!--            <app-stocks-list-sample [stocks]=\"filteredStocks\" *ngIf=\"filteredStocks.length > 0\"-->\r\n            <!--                                    [type]=\"selectedStockType\" [modal]=\"true\"-->\r\n            <!--                                    [userStocks]=\"getUpdatedStockDetails(userStocks)\"-->\r\n            <!--                                    (updatedStocksList)=\"updateFollowedStocks($event)\"></app-stocks-list-sample>-->\r\n            <app-stocks-tiles [stocks]=\"filteredStocks\" *ngIf=\"filteredStocks.length > 0\" [dragDropDisabled]=\"true\"\r\n                              [userStocks]=\"getUpdatedStockDetails(userStocks)\" [stocksGeneralList]=\"true\"\r\n                              (updatedStocksList)=\"updateFollowedStocks($event)\"\r\n                              [type]=\"selectedStockType\"></app-stocks-tiles>\r\n            <p *ngIf=\"filteredStocks?.length===0 && loader.stocksLoading.status!=='loading'\">No stocks of selected type is\r\n                found</p>\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n</section>\r\n\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {Stock} from '@shared/models/stock';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {STOCK_TILE_CHART_SETTINGS} from '@core/constants/charts';\r\nimport {UpdateUserStocksPipe} from '@shared/pipes/update-user-stocks.pipe';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {StocksService} from '@core/services/stocks.service';\r\nimport {CdkDragDrop} from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n    selector: 'app-stocks-tiles',\r\n    templateUrl: './stocks-tiles.component.html',\r\n    styleUrls: ['./stocks-tiles.component.scss']\r\n})\r\nexport class StocksTilesComponent implements OnInit {\r\n\r\n    stockChartSettings = STOCK_TILE_CHART_SETTINGS;\r\n    authUser;\r\n\r\n    @Input('stocks') passedStocks: Stock[] = [];\r\n    @Input('userStocks') userStocks: Stock[] = [];\r\n    @Input('type') selectedStockType: Stock | null = null;\r\n    @Input('stocksGeneralList') stocksGeneralList = false;\r\n    @Input('dragDropDisabled') dragDropDisabled = false;\r\n    @Output('updatedStocksList') updatedStocksList = new EventEmitter();\r\n\r\n    constructor(\r\n        private subject: SubjectService,\r\n        private updateStocks: UpdateUserStocksPipe,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private stocksService: StocksService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    isStockFollowed(stock) {\r\n        return !!this.userStocks.find(s => s.name === stock.name);\r\n    }\r\n\r\n    updateFollowedStocksList(stock) {\r\n        const {userStocks, following} = this.updateStocks.transform(this.userStocks, stock, this.selectedStockType?.id);\r\n        if (!this.stocksGeneralList) {\r\n            this.passedStocks = userStocks;\r\n        }\r\n        this.updatedStocksList.emit(userStocks);\r\n    }\r\n\r\n    drop(event: CdkDragDrop<any>) {\r\n        this.passedStocks[event.previousContainer.data.index] = event.container.data.item;\r\n        this.passedStocks[event.container.data.index] = event.previousContainer.data.item;\r\n\r\n        const sendData = {\r\n            order_type: 'custom',\r\n            rows: JSON.stringify(this.passedStocks),\r\n            user_id: this.authUser.id\r\n        };\r\n\r\n        this.subject.changeUserStocks({stocks: this.passedStocks});\r\n        this.stocksService.updateUserStocksPriority(sendData).subscribe(dt => {\r\n            localStorage.setItem('token', (dt.hasOwnProperty('token') ? dt.token : ''));\r\n        });\r\n    }\r\n}\r\n","<div id=\"stock-tiles-holder\" cdkDropListGroup [class.no-moving]=\"dragDropDisabled\">\r\n    <ng-container *ngFor=\"let stock of passedStocks;let ind = index\">\r\n        <div cdkDropList class=\"stock-item-placeholder\"\r\n             cdkDropListOrientation=\"horizontal\"\r\n             [cdkDropListData]=\"{item:stock,index:ind}\" (cdkDropListDropped)=\"drop($event)\">\r\n\r\n            <div class=\"stock-item\" cdkDrag [cdkDragDisabled]=\"dragDropDisabled\"\r\n                 [ngClass]=\"'stock-item-'+(stock.changesPercentage > 0? 'green':'red')\">\r\n                <div *cdkDragPlaceholder>\r\n                </div>\r\n                <div class=\"stock-follow\">\r\n                    <button [class.unfollow-btn]=\"isStockFollowed(stock)\" (click)=\"updateFollowedStocksList(stock)\">\r\n                        <mat-icon *ngIf=\"isStockFollowed(stock) else followTmpl\">delete</mat-icon>\r\n                        <ng-template #followTmpl>Follow</ng-template>\r\n                    </button>\r\n                </div>\r\n\r\n                <div class=\"stock-details\">\r\n                    <p class=\"stock-name\">{{stock.name}}</p>\r\n                    <p class=\"stock-price\"><span class=\"dollar-sign\">$</span>{{stock.price}}</p>\r\n                    <div class=\"stock-price-details\">\r\n                        <p class=\"stock-price-change\">{{stock.change?.toFixed(2)}}</p>\r\n                        <p class=\"stock-price-change-percent\">{{stock.changesPercentage}}%</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"small-chart-container\"\r\n                     *ngIf=\"stock.hasOwnProperty('series') && stockChartSettings; let sChS;\">\r\n                    <ngx-charts-line-chart [scheme]=\"sChS.colorScheme\" [results]=\"[stock]\" [view]=\"sChS.view\"\r\n                                           [autoScale]=\"sChS.autoScale\" [timeline]=\"sChS.timeline\"\r\n                                           [animations]=\"sChS.animations\" [tooltipDisabled]=\"sChS.tooltipDisabled\">\r\n                    </ngx-charts-line-chart>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {AuthService} from '@core/services/auth.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\n\r\n@Component({\r\n    selector: 'app-user-tags',\r\n    templateUrl: './user-tags.component.html',\r\n    styleUrls: ['./user-tags.component.scss']\r\n})\r\nexport class UserTagsComponent implements OnInit {\r\n    tags = [];\r\n    authUser;\r\n\r\n    @Output('tagSelected') tagSelected = new EventEmitter();\r\n\r\n    constructor(\r\n        private videoService: VideoService,\r\n        public auth: AuthService,\r\n        private getAuthUser: GetAuthUserPipe\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.authUser = this.getAuthUser.transform();\r\n        if (this.auth.loggedIn()) {\r\n            this.getUserTags();\r\n        }\r\n    }\r\n\r\n    getUserTags() {\r\n        this.videoService.getUserTags({user_id: this.authUser.id}).subscribe((dt: any) => {\r\n            this.tags = dt;\r\n        });\r\n    }\r\n\r\n    selectTag(name) {\r\n        this.tagSelected.emit(name);\r\n    }\r\n\r\n}\r\n","<ul class=\"categories\">\r\n    <ng-container *ngFor=\"let tag of tags\">\r\n\r\n        <li *ngIf=\"tag.tag_details\">\r\n            <a (click)=\"selectTag(tag.tag_details.name)\">{{tag.tag_details.name}}</a>\r\n        </li>\r\n    </ng-container>\r\n</ul>\r\n","<ng-container *ngIf=\"videos?.length > 0\">\r\n    <p class=\"trending-text\">{{title}}</p>\r\n    <owl-carousel-o [options]=\"owlOptions\">\r\n        <ng-container *ngFor=\"let video of videos\">\r\n            <ng-template carouselSlide>\r\n                <div class=\"item main-carousel-item\" [class.one-item]=\"isSmallScreen(videos.length)\">\r\n\r\n                    <ng-container\r\n                        [ngTemplateOutlet]=\"itemTemplate\"\r\n                        [ngTemplateOutletContext]=\"{details: detailsSource || video.user}\">\r\n                    </ng-container>\r\n\r\n                    <ng-template let-d=\"details\" #itemTemplate>\r\n                        <div class=\"thumbnail\" (click)=\"openVideoPage(video, d.username)\">\r\n                            <img class=\"thumbnail\" [src]=\"video.thumbnail|getImgPath\">\r\n                            <span class=\"live-now\" *ngIf=\"video.status==='live'\">Live now</span>\r\n                            <span class=\"duration\">{{video.duration}}</span>\r\n                        </div>\r\n                        <div class=\"main-item-block video-info\">\r\n\r\n                            <div class=\"left-side\">\r\n\r\n                                <img class=\"avatar\" [src]=\"d?.channel?.avatar|getImgPath: 'avatars'\">\r\n                                <div>\r\n                                    <p class=\"video-name\">{{video.name}}</p>\r\n                                    <p class=\"channel-sub-name\" (click)=\"openChannelPage(d.username)\">{{d?.channel.name}}</p>\r\n                                    <div class=\"shortened-details\">\r\n                                    <span class=\"watchers-count\">\r\n                                        {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\r\n                                    </span>\r\n                                        <span class=\"dot\">&middot;</span>\r\n                                        <span class=\"upload-time\">{{video.created_at| dateFromNow}}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"right-side\">\r\n                                <ul>\r\n                                    <li *ngFor=\"let tag of video?.tags\" (click)=\"getVideosByTag(tag.name)\">\r\n                                        <span>{{tag.name}}</span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"remove-video\" *ngIf=\"removable\">\r\n                            <mat-icon (click)=\"removeVideo(video)\">delete</mat-icon>\r\n                        </div>\r\n                    </ng-template>\r\n\r\n\r\n                </div>\r\n            </ng-template>\r\n        </ng-container>\r\n    </owl-carousel-o>\r\n</ng-container>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {OwlOptions} from 'ngx-owl-carousel-o';\r\nimport {OWL_OPTIONS} from '@core/constants/global';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {Router} from '@angular/router';\r\nimport {ConfirmationDialogComponent} from '@core/components/modals/confirmation-dialog/confirmation-dialog.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {buildPlayVideoRoute} from '@core/helpers/build-play-video-route';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\n@Component({\r\n    selector: 'app-video-carousel-holder',\r\n    templateUrl: './video-carousel-holder.component.html',\r\n    styleUrls: ['./video-carousel-holder.component.scss']\r\n})\r\nexport class VideoCarouselHolderComponent implements OnInit {\r\n    owlOptions: OwlOptions = OWL_OPTIONS;\r\n    authUser;\r\n\r\n    @Input('videos') videos = [];\r\n    @Input('title') title = '';\r\n    @Input('removable') removable = false;\r\n    @Input('detailsSource') detailsSource;\r\n\r\n    constructor(\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private videoService: VideoService,\r\n        public router: Router,\r\n        private dialog: MatDialog,\r\n        private toastr: ToastrService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    async openVideoPage(video, username) {\r\n        const r = buildPlayVideoRoute(video, username);\r\n        await this.router.navigate([r.route], {queryParams: r.params});\r\n    }\r\n\r\n    async openChannelPage(username) {\r\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(async () =>\r\n            await this.router.navigate(['channels/show'], {queryParams: {username}})\r\n        );\r\n    }\r\n\r\n    removeVideo(video) {\r\n        this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed) {\r\n                this.videoService.removeVideo({\r\n                    id: video.id,\r\n                    filename: video.filename,\r\n                    username: this.authUser.username\r\n                }).subscribe(dt => {\r\n                    this.toastr.success('The video was removed successfully');\r\n                    this.videos = dt.videos;\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    isSmallScreen(videoLen) {\r\n        return window.screen.availWidth > 568 && videoLen === 1;\r\n    }\r\n\r\n    async getVideosByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n}\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {VIDEO_FILTERS} from '@core/constants/global';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {CheckForEmptyObjectPipe} from '@shared/pipes/check-for-empty-object.pipe';\r\nimport {Subscription} from 'rxjs';\r\nimport {SubjectService} from '@core/services/subject.service';\r\n\r\n@Component({\r\n    selector: 'app-video-filters',\r\n    templateUrl: './video-filters.component.html',\r\n    styleUrls: ['./video-filters.component.scss']\r\n})\r\nexport class VideoFiltersComponent implements OnInit {\r\n    filters = VIDEO_FILTERS;\r\n    selectedFilters = {};\r\n    subscriptions: Subscription[] = [];\r\n\r\n    @Output('filter') filterAction = new EventEmitter();\r\n\r\n    constructor(\r\n        private videoService: VideoService,\r\n        private ifObjectEmpty: CheckForEmptyObjectPipe,\r\n        private subjectService: SubjectService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.subscriptions.push(this.subjectService.getToggleFiltersData().subscribe(dt => {\r\n            this.selectedFilters = {};\r\n            this.filterAction.emit(this.selectedFilters);\r\n        }));\r\n    }\r\n\r\n    applyFilter({name, value}, group) {\r\n        this.selectedFilters[group] = {name, value};\r\n        this.filterAction.emit(this.selectedFilters);\r\n    }\r\n\r\n    removeFilter({name, value}, group) {\r\n        delete this.selectedFilters[group];\r\n        // if (this.ifObjectEmpty.transform(this.selectedFilters)) {\r\n        // this.selectedFilters = {};\r\n        // }\r\n\r\n        this.filterAction.emit(this.selectedFilters);\r\n    }\r\n\r\n}\r\n","<div class=\"filter-groups\">\r\n    <ng-container *ngFor=\"let filter of filters\">\r\n\r\n        <div class=\"filter-group\">\r\n            <p class=\"filter-name\">{{filter.group.name}}</p>\r\n            <mat-divider></mat-divider>\r\n            <ul>\r\n                <li class=\"filter-item\" *ngFor=\"let item of filter.items\"\r\n                    [class.selected]=\"selectedFilters && item.name === selectedFilters[filter.group.value]?.name\">\r\n                    <span (click)=\"applyFilter(item, filter.group.value)\">{{item.name}}</span>\r\n                    <button mat-icon-button class=\"remove-filter\" (click)=\"removeFilter(item, filter.group.value)\"\r\n                            *ngIf=\"selectedFilters && item.name === selectedFilters[filter.group.value]?.name\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </li>\r\n\r\n            </ul>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    OnDestroy,\r\n    ElementRef, AfterViewInit, EventEmitter, Output, Input\r\n} from '@angular/core';\r\n\r\nimport videojs from 'video.js';\r\nimport * as adapter from 'webrtc-adapter/out/adapter_no_global.js';\r\nimport * as RecordRTC from 'recordrtc';\r\nimport * as moment from 'moment';\r\n\r\n\r\nimport * as Record from 'videojs-record/dist/videojs.record.js';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {BlobToFilePipe} from '@shared/pipes/blob-to-file.pipe';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-video-js-record',\r\n    templateUrl: './video-js-record.component.html',\r\n    styleUrls: ['./video-js-record.component.scss']\r\n})\r\nexport class VideoJsRecordComponent implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n    // index to create unique ID for component\r\n    idx = 'clip1';\r\n    authUser;\r\n    recordingState = 'idle';\r\n    videoId;\r\n    recordingStartTimeStamp;\r\n    recordingEndTimeStamp;\r\n    readonly config: any;\r\n    private player: any;\r\n    private plugin: any;\r\n\r\n    @Input('openViduToken') openViduToken;\r\n    @Input('videoSettings') videoSettings;\r\n    @Input('thumbnailFile') thumbnailFile;\r\n\r\n    @Output() shareScreen = new EventEmitter();\r\n    @Output() recordingStarted = new EventEmitter();\r\n\r\n    screenSharing = false;\r\n\r\n    // constructor initializes our declared vars\r\n    constructor(\r\n        elementRef: ElementRef,\r\n        private videoService: VideoService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private blobToFile: BlobToFilePipe,\r\n        private subject: SubjectService,\r\n        public router: Router\r\n    ) {\r\n\r\n\r\n        this.player = false;\r\n\r\n        // save reference to plugin (so it initializes)\r\n        this.plugin = Record;\r\n\r\n        // video.js configuration\r\n        this.config = {\r\n            controls: true,\r\n            autoplay: false,\r\n            fluid: false,\r\n            loop: false,\r\n            width: 640,\r\n            height: 480,\r\n            bigPlayButton: false,\r\n            controlBar: {\r\n                volumePanel: true\r\n            },\r\n            plugins: {\r\n                /*\r\n                // wavesurfer section is only needed when recording audio-only\r\n                wavesurfer: {\r\n                    backend: 'WebAudio',\r\n                    waveColor: '#36393b',\r\n                    progressColor: 'black',\r\n                    debug: true,\r\n                    cursorWidth: 1,\r\n                    displayMilliseconds: true,\r\n                    hideScrollbar: true,\r\n                    plugins: [\r\n                        // enable microphone plugin\r\n                        WaveSurfer.microphone.create({\r\n                            bufferSize: 4096,\r\n                            numberOfInputChannels: 1,\r\n                            numberOfOutputChannels: 1,\r\n                            constraints: {\r\n                                video: false,\r\n                                audio: true\r\n                            }\r\n                        })\r\n                    ]\r\n                },\r\n                */\r\n                // configure videojs-record plugin\r\n                record: {\r\n                    audio: true,\r\n                    // video: true,\r\n                    video: {\r\n                        frameRate: {ideal: 30, max: 30},\r\n                        width: {min: 640, ideal: 640, max: 1280},\r\n                        height: {min: 480, ideal: 480, max: 720}\r\n                    },\r\n                    screen: true,\r\n                    displayMilliseconds: false,\r\n                    maxLength: 3600, //30\r\n                    debug: true,\r\n                    videoEngine: 'recordrtc',\r\n                    videoMimeType: 'video/webm;codecs=H264',\r\n                    frameWidth: 640,\r\n                    frameHeight: 480\r\n                    // convertEngine: 'ts-ebml'\r\n                },\r\n\r\n                // videoJsResolutionSwitcher: {\r\n                //     default: 'low', // Default resolution [{Number}, 'low', 'high'],\r\n                //     dynamicLabel: true\r\n                // }\r\n\r\n            }\r\n        };\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    // use ngAfterViewInit to make sure we initialize the videojs element\r\n    // after the component template itself has been rendered\r\n    ngAfterViewInit() {\r\n        // ID with which to access the template's video element\r\n        const el = 'video_' + this.idx;\r\n\r\n\r\n        // setup the player via the unique element ID\r\n        this.player = videojs(document.getElementById(el), this.config, () => {\r\n            // console.log('player ready! id:', el);\r\n\r\n            // print version information at startup\r\n            const msg = 'Using video.js ' + videojs.VERSION +\r\n                ' with videojs-record ' + videojs.getPluginVersion('record') +\r\n                ' and recordrtc ' + RecordRTC.version;\r\n            videojs.log(msg);\r\n        }, () => {\r\n            this.player.updateSrc([\r\n                {\r\n                    src: 'https://vjs.zencdn.net/v/oceans.mp4?SD',\r\n                    type: 'video/mp4',\r\n                    label: 'SD',\r\n                    res: 360\r\n                },\r\n                {\r\n                    src: 'https://vjs.zencdn.net/v/oceans.mp4?HD',\r\n                    type: 'video/mp4',\r\n                    label: 'HD',\r\n                    res: 720\r\n                }\r\n            ]);\r\n            this.player.on('resolutionchange', () => {\r\n                console.log('Source changed to %s', this.player.src());\r\n            });\r\n        });\r\n\r\n        // device is ready\r\n        this.player.on('deviceReady', (a) => {\r\n            // console.log(a)\r\n            this.shareScreen.emit();\r\n            // console.log('device is ready!');\r\n        });\r\n\r\n        // user clicked the record button and started recording\r\n        this.player.on('startRecord', (aa) => {\r\n            // console.log(this.openViduToken)\r\n            this.recordingState = 'active';\r\n            this.subject.setVideoRecordingState({recording: true, viaSocket: false});\r\n\r\n            // console.log('start timestamp:' + this.player.currentTimestamp)\r\n            this.recordingStartTimeStamp = moment(this.player.currentTimestamp);\r\n\r\n            // this.thumbnailFile = this.videoSettings.thumbnail;\r\n            // console.log(this.videoSettings.thumbnail)\r\n\r\n\r\n            this.videoService.saveVideoToken({\r\n                token: this.openViduToken,\r\n                author_id: this.authUser.id,\r\n                channel_id: this.authUser.channel.id,\r\n                category_id: this.videoSettings.category_id,\r\n                privacy: this.videoSettings.privacy,\r\n                filename: '',\r\n                session_name: this.videoSettings.sessionName,\r\n                publisher: this.videoSettings.myUserName,\r\n                status: 'live',\r\n                thumbnail: this.videoSettings.thumbnail,\r\n                name: this.videoSettings.name,\r\n                description: this.videoSettings.description,\r\n                tags: this.videoSettings.tags\r\n            }).subscribe((dt) => {\r\n                this.videoId = dt?.id;\r\n                this.recordingStarted.emit(this.videoId);\r\n            });\r\n\r\n\r\n            // console.log('started recording!');\r\n        });\r\n\r\n\r\n        // user completed recording and stream is available\r\n        this.player.on('finishRecord', () => {\r\n            // recordedData is a blob object containing the recorded data that\r\n            // can be downloaded by the user, stored on server etc.\r\n            // console.log('finished recording: ', this.player);\r\n            // console.log(document.getElementsByTagName('video')[0].duration)\r\n            // console.log('end timestamp:' + this.player.currentTimestamp)\r\n            this.recordingEndTimeStamp = moment(this.player.currentTimestamp);\r\n            // console.log('Duration timestamp:' + moment.utc((moment.duration(this.recordingEndTimeStamp - this.recordingStartTimeStamp, 'seconds').asMilliseconds()).format('HH:mm')))\r\n\r\n            const recordingDuration = moment.utc(this.recordingEndTimeStamp.diff(this.recordingStartTimeStamp)).format('mm:ss');\r\n\r\n            // console.log(this.videoSettings)\r\n            const fd: FormData = new FormData();\r\n            fd.append('username', this.authUser.username);\r\n            // fd.append('avatar', this.authUser.avatar);\r\n            fd.append('id', this.videoId);\r\n            fd.append('author_id', this.authUser.id);\r\n            // fd.append('full_name', this.authUser.full_name);\r\n            // fd.append('category_id', this.authUser._id);\r\n            fd.append('video_name', this.player.recordedData.name);\r\n            fd.append('video_duration', recordingDuration);\r\n            fd.append('video_stream_file', this.blobToFile.transform(this.player.recordedData));\r\n            // if (this.thumbnailFile) {\r\n            //     fd.append('thumbnail', this.thumbnailFile.name);\r\n            // }\r\n            fd.append('video_settings', JSON.stringify(this.videoSettings));\r\n            this.subject.setVideoRecordingState({recording: false});\r\n            this.recordingState = 'finished';\r\n            this.videoService.saveRecordedData(fd).subscribe(() => {\r\n                localStorage.setItem('session', '');\r\n                localStorage.setItem('video_settings', '');\r\n            });\r\n        });\r\n\r\n        // converter ready and stream is available\r\n        this.player.on('finishConvert', () => {\r\n            // the convertedData object contains the converted data that\r\n            // can be downloaded by the user, stored on server etc.\r\n            console.log('finished converting: ', this.player.convertedData);\r\n        });\r\n\r\n        // error handling\r\n        this.player.on('error', (element, error) => {\r\n            console.warn(error);\r\n        });\r\n\r\n        this.player.on('deviceError', () => {\r\n            console.error('device error:', this.player.deviceErrorCode);\r\n        });\r\n    }\r\n\r\n    backToChannelVideos() {\r\n        const route = 'channels/show';\r\n        const params = {tab: 'videos', username: this.authUser.username};\r\n        this.router.navigate([route], {queryParams: params});\r\n    }\r\n\r\n\r\n    // use ngOnDestroy to detach event handlers and remove the player\r\n    ngOnDestroy() {\r\n        if (this.player) {\r\n            this.player.dispose();\r\n            this.player = false;\r\n        }\r\n    }\r\n\r\n}\r\n","<div class=\"video-container\">\r\n    <video id=\"video_{{idx}}\" class=\"video-js\" playsinline></video>\r\n    <div id=\"live-session-finished\" *ngIf=\"recordingState === 'finished'\">\r\n        <div class=\"messages-container\">\r\n            <h2>Live video ended</h2>\r\n            <p class=\"back-to-channel-videos\" (click)=\"backToChannelVideos()\">Go to my channel</p>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {AfterViewInit, Component, ElementRef, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport videojs from 'video.js';\r\nimport {API_URL} from '@core/constants/global';\r\nimport * as Plyr from 'plyr';\r\n// import 'videojs-hls-quality-selector';\r\n\r\ndeclare var require: any;\r\nrequire('videojs-contrib-quality-levels');\r\nrequire('videojs-hls-quality-selector');\r\n\r\n@Component({\r\n    selector: 'app-vjs-player',\r\n    templateUrl: './video-js.component.html',\r\n    styleUrls: ['./video-js.component.scss']\r\n})\r\nexport class VideoJsComponent implements OnInit, OnDestroy {\r\n\r\n    @ViewChild('target', {static: true}) target: ElementRef;\r\n    @Input() options: {\r\n        fluid: boolean,\r\n        liveui: boolean,\r\n        aspectRatio: string,\r\n        autoplay: boolean,\r\n        sources: {\r\n            src: string,\r\n            type: string,\r\n        }[],\r\n        plugins?: {\r\n            record: {\r\n                audio: boolean,\r\n                video: boolean,\r\n                maxLength: number,\r\n                debug: boolean\r\n            }\r\n        },\r\n\r\n        html5: {\r\n            vhs: {\r\n                withCredentials: boolean\r\n            }\r\n        }\r\n\r\n    };\r\n    player: videojs.Player;\r\n    @Input('videoData') videoData;\r\n    videoUrl;\r\n\r\n    constructor(\r\n        private elementRef: ElementRef,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const video = document.getElementsByTagName('video')[0];\r\n        this.videoUrl = API_URL + 'uploads/videos/' + this.videoData.filename;\r\n        video.setAttribute('src', this.videoUrl);\r\n        video.setAttribute('poster', API_URL + 'uploads/thumbnails/' + this.videoData.thumbnail);\r\n        video.poster = API_URL + 'uploads/thumbnails/' + this.videoData.thumbnail;\r\n        video.muted = true;\r\n        video.load();\r\n        video.play();\r\n\r\n        //\r\n        const player = new Plyr('video', {\r\n            captions: {active: true},\r\n            quality: {default: 576, options: [4320, 2880, 2160, 1440, 1080, 720, 576, 480, 360, 240]},\r\n            // controls: ['captions']\r\n        });\r\n        // console.log(player)\r\n\r\n        // instantiate Video.js\r\n        // this.target.nativeElement.setAttribute('src', this.videoUrl);\r\n        // this.player = videojs(this.target.nativeElement, this.options, function onPlayerReady() {\r\n        //     const player = this;\r\n        //     console.log(player)\r\n        //     player.on('pause', () => {\r\n        //         console.log('paused')\r\n        //         player.one('play', () => {\r\n        //             console.log('play')\r\n        //             player.load();\r\n        //             player.play();\r\n        //         });\r\n        //     });\r\n        //\r\n        //     player.on('error', () => {\r\n        //\r\n        //         player.pause();\r\n        //         player.trigger('ended');\r\n        //\r\n        //         player.reset();\r\n        //\r\n        //         player.src(player.currentSrc());\r\n        //\r\n        //     });\r\n        //\r\n        //     player.hlsQualitySelector({\r\n        //         displayCurrentQuality: true,\r\n        //         vjsIconClass : 'vjs-icon-hd'\r\n        //     });\r\n        //\r\n        //\r\n        //     // console.log('onPlayerReady', this);\r\n        // });\r\n        // this.player.src({type: 'video/x-matroska', src: this.videoUrl});\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        // destroy player\r\n        if (this.player) {\r\n            this.player.dispose();\r\n        }\r\n    }\r\n\r\n}\r\n","<!--<video #target class=\"video-js\" controls muted playsinline preload=\"none\"-->\r\n<!--       width=\"640\"-->\r\n<!--       height=\"480\"-->\r\n<!--       data-setup=\"{}\"></video>-->\r\n<div class=\"container\">\r\n\r\n    <video width=\"640\" height=\"480\" controls muted playsinline id=\"player\" preload=\"none\">\r\n        <!--    <source src=\"https://vjs.zencdn.net/v/oceans.mp4?sd\" type='video/mp4' label='SD' res='480' />-->\r\n        <!--    <source src=\"https://vjs.zencdn.net/v/oceans.mp4?hd\" type='video/mp4' label='HD' res='1080'/>-->\r\n        <!--    <source src=\"https://vjs.zencdn.net/v/oceans.mp4?phone\" type='video/mp4' label='phone' res='144'/>-->\r\n        <!--    <source src=\"https://vjs.zencdn.net/v/oceans.mp4?4k\" type='video/mp4' label='4k' res='2160'/>-->\r\n    </video>\r\n</div>\r\n\r\n\r\n\r\n<!--<div class=\"container\">-->\r\n<!--    <video controls crossorigin playsinline>-->\r\n<!--&lt;!&ndash;        <source src=\"http://localhost:3001/uploads/videos/1613738222158.mkv\"  type=\"video/webm\" size=\"576\">&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <source  src=\"http://localhost:3001/uploads/videos/1613738222158.mkv\"type=\"video/webm\" size=\"720\">&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <source  src=\"http://localhost:3001/uploads/videos/1613738222158.mkv\" type=\"video/webm\" size=\"1080\">&ndash;&gt;-->\r\n\r\n<!--        &lt;!&ndash; Caption files &ndash;&gt;-->\r\n<!--&lt;!&ndash;        <track kind=\"captions\" label=\"English\" srclang=\"en\" src=\"https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt\"&ndash;&gt;-->\r\n<!--&lt;!&ndash;               default>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <track kind=\"captions\" label=\"Français\" srclang=\"fr\" src=\"https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt\">&ndash;&gt;-->\r\n<!--        &lt;!&ndash; Fallback for browsers that don't support the <video> element &ndash;&gt;-->\r\n<!--        <a href=\"https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-576p.mp4\" download>Download</a>-->\r\n<!--    </video>-->\r\n<!--</div>-->\r\n","<!--<ng-container *ngIf=\"videos?.length > 0\">-->\r\n<p class=\"trending-text\">{{title}}</p>\r\n<!--    <div class=\"ph-item item\">-->\r\n<!--        <div class=\"ph-col-12\">-->\r\n<!--            <div class=\"ph-picture\"></div>-->\r\n\r\n<!--            <div class=\"d-flex\">-->\r\n<!--                <div class=\"ph-avatar mr-3\"></div>-->\r\n\r\n<!--                <div class=\"ph-col-10\">-->\r\n<!--                    <div class=\"ph-row align-items-start\">-->\r\n<!--                        <div class=\"ph-col-2\"></div>-->\r\n<!--                        <div class=\"ph-col-8 empty\"></div>-->\r\n<!--                        <div class=\"ph-col-2\"></div>-->\r\n<!--                    </div>-->\r\n<!--                    <div class=\"ph-row align-items-start\">-->\r\n<!--                        <div class=\"ph-col-4\"></div>-->\r\n<!--                    </div>-->\r\n<!--                    <div class=\"ph-row align-items-start\">-->\r\n<!--                        <div class=\"ph-col-6\"></div>-->\r\n<!--                    </div>-->\r\n<!--                </div>-->\r\n<!--            </div>-->\r\n\r\n\r\n<!--        </div>-->\r\n<!--    </div>-->\r\n<div class=\"list-container d-flex flex-wrap justify-content-center justify-content-lg-start\">\r\n    <ng-container *ngFor=\"let video of videos\">\r\n        <div class=\"item mx-2 ml-lg-0  mr-lg-4\">\r\n\r\n            <ng-container\r\n                [ngTemplateOutlet]=\"itemTemplate\"\r\n                [ngTemplateOutletContext]=\"{details: detailsSource || video.user}\">\r\n            </ng-container>\r\n\r\n            <ng-template let-d=\"details\" #itemTemplate>\r\n                <div class=\"thumbnail\" (click)=\"openVideoPage(video, d?.username)\">\r\n                    <img class=\"thumbnail-image\" [src]=\"video.thumbnail|getImgPath\">\r\n                    <span class=\"live-now\" *ngIf=\"video.status==='live'\">Live now</span>\r\n                    <span class=\"duration\">{{video.duration}}</span>\r\n                </div>\r\n                <div class=\"video-info\">\r\n                    <div class=\"left-side\">\r\n                        <img class=\"avatar\" [src]=\"d?.channel?.avatar|getImgPath: 'avatars'\">\r\n                        <div>\r\n                            <p class=\"video-name\">{{video.name}}</p>\r\n                            <p class=\"channel-sub-name\" (click)=\"openChannelPage(d.username)\">{{d?.channel.name}}</p>\r\n                            <div class=\"shortened-details\">\r\n                                    <span class=\"watchers-count\">\r\n                                        {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\r\n                                    </span>\r\n                                <span class=\"dot\">&middot;</span>\r\n                                <span class=\"upload-time\">{{video.created_at| dateFromNow}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"right-side\">\r\n                        <ul>\r\n                            <li *ngFor=\"let tag of video?.tags\" (click)=\"getVideosByTag(tag.name)\">\r\n                                <span>{{tag.name}}</span>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div class=\"remove-video\" *ngIf=\"removable\">\r\n                    <mat-icon (click)=\"removeVideo(video)\">delete</mat-icon>\r\n                </div>\r\n                <div class=\"update-privacy\" *ngIf=\"isChannelPage()\" (click)=\"updatePrivacy(video, video.privacy?.name)\"\r\n                     [ngClass]=\"video.privacy?.name !== 'Public'  ? 'red':'green'\">\r\n                    <mat-icon>visibility_{{video.privacy?.name !== 'Public' ? 'off' : 'on'}}</mat-icon>\r\n                </div>\r\n            </ng-template>\r\n\r\n\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n<!--</ng-container>-->\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {buildPlayVideoRoute} from '@core/helpers/build-play-video-route';\r\nimport {ConfirmationDialogComponent} from '@core/components/modals/confirmation-dialog/confirmation-dialog.component';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {Router} from '@angular/router';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\n@Component({\r\n    selector: 'app-videos-list-holder',\r\n    templateUrl: './videos-list-holder.component.html',\r\n    styleUrls: ['./videos-list-holder.component.scss']\r\n})\r\nexport class VideosListHolderComponent implements OnInit {\r\n\r\n    authUser;\r\n    videoLoading = 'idle';\r\n\r\n    @Input('videos') videos = [];\r\n    @Input('title') title = '';\r\n    @Input('removable') removable = false;\r\n    @Input('detailsSource') detailsSource;\r\n\r\n    constructor(\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private videoService: VideoService,\r\n        public router: Router,\r\n        private dialog: MatDialog,\r\n        private toastr: ToastrService\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.videoLoading = 'loading';\r\n        if (this.videos.length > 0) {\r\n            this.videoLoading = 'finished';\r\n        }\r\n    }\r\n\r\n    async openVideoPage(video, username) {\r\n        const r = buildPlayVideoRoute(video, username);\r\n        await this.router.navigate([r.route], {queryParams: r.params});\r\n    }\r\n\r\n    async openChannelPage(username) {\r\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(async () =>\r\n            await this.router.navigate(['channels/show'], {queryParams: {username}})\r\n        );\r\n    }\r\n\r\n    removeVideo(video) {\r\n        this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed) {\r\n                this.videoService.removeVideo({\r\n                    id: video.id,\r\n                    filename: video.filename,\r\n                    username: this.authUser.username\r\n                }).subscribe(dt => {\r\n                    this.toastr.success('The video was removed successfully');\r\n                    this.videos = dt.videos;\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    isSmallScreen(videoLen) {\r\n        return window.screen.availWidth > 568 && videoLen === 1;\r\n    }\r\n\r\n    async getVideosByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n    isChannelPage(){\r\n        return this.router.url.includes('channel') && this.removable;\r\n    }\r\n\r\n\r\n    updatePrivacy(video, privacy) {\r\n        this.videoService.updatePrivacy({\r\n            video_id: video.id,\r\n            privacy: privacy === 'Public' ? 'Private' : 'Public'\r\n        }).subscribe(dt => {\r\n            video.privacy = dt;\r\n        });\r\n    }\r\n\r\n\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {ALLOWED_IMG_MIME_TYPES} from '@core/constants/global';\r\n\r\n@Pipe({\r\n    name: 'base64ToFile'\r\n})\r\nexport class Base64ToFilePipe implements PipeTransform {\r\n\r\n    allowedImgMimeTypes = ALLOWED_IMG_MIME_TYPES;\r\n\r\n\r\n    transform(base64, ...args: unknown[]) {\r\n\r\n        const mime = ALLOWED_IMG_MIME_TYPES.find(t => base64.indexOf(t) !== -1);\r\n        console.log(mime);\r\n\r\n        const cleanedBase64 = base64.replace(`data:${mime};base64,`, '');\r\n\r\n\r\n        const bs = atob(cleanedBase64);\r\n        const buffer = new ArrayBuffer(bs.length);\r\n        const ba = new Uint8Array(buffer);\r\n        for (let i = 0; i < bs.length; i++) {\r\n            ba[i] = bs.charCodeAt(i);\r\n        }\r\n        return new Blob([ba], {type: 'image/jpg'});\r\n\r\n    }\r\n\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'blobToFile'\r\n})\r\nexport class BlobToFilePipe implements PipeTransform {\r\n\r\n  transform(theBlob): File {\r\n    return new File([theBlob], theBlob.name);\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'checkForEmptyObject'\r\n})\r\nexport class CheckForEmptyObjectPipe implements PipeTransform {\r\n\r\n  transform(obj: unknown): unknown {\r\n    return Object.keys(obj).length === 0 && obj.constructor === Object;\r\n  }\r\n\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({\r\n    name: 'dateFromNow'\r\n})\r\nexport class DateFromNowPipe implements PipeTransform {\r\n\r\n    transform(datetime): unknown {\r\n        let fromNow = moment(datetime).fromNow();\r\n        if (fromNow === 'a day ago') {\r\n            fromNow = '1 day ago';\r\n        } else if (fromNow === 'a month ago') {\r\n            fromNow = '1 month ago';\r\n        } else if (fromNow === 'a year ago') {\r\n            fromNow = '1 year ago';\r\n        }\r\n\r\n        return fromNow;\r\n    }\r\n\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'filterDevices'\r\n})\r\nexport class FilterDevicesPipe implements PipeTransform {\r\n\r\n    transform(items: any[], filter: any): any {\r\n        if (!items || !filter) {\r\n            return items;\r\n        }\r\n\r\n        const filterKey = Object.keys(filter) || [];\r\n\r\n        // filter items array, items which match and return true will be\r\n        // kept, false will be filtered out\r\n        return items.filter(item => item[filterKey[0]].indexOf(filter[filterKey[0]]) !== -1);\r\n    }\r\n\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'filterOutFalsyValuesFromObject'\r\n})\r\nexport class FilterOutFalsyValuesFromObjectPipe implements PipeTransform {\r\n\r\n    transform(params, projectSpecific = true): unknown {\r\n        // console.log(params.filters)\r\n        if (projectSpecific) {\r\n            params = {\r\n                search: params.search,\r\n                filters: (params.filters ? JSON.stringify(params.filters) : null),\r\n                tag: params.tag\r\n            };\r\n        }\r\n// console.log(params)\r\n\r\n        return Object.entries(params).reduce((a, [k, v]) => (v ? (a[k] = v, a) : a), {});\r\n    }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\n@Pipe({\r\n  name: 'getAuthUser'\r\n})\r\nexport class GetAuthUserPipe implements PipeTransform {\r\n\r\n  transform(): unknown {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      return jwtDecode(token);\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'getSelectedVideosToBeAddedToPlaylist'\r\n})\r\nexport class GetSelectedVideosToBeAddedToPlaylistPipe implements PipeTransform {\r\n\r\n  transform(video: any, selectedVideos: any[], playlist): any {\r\n      const id = video.id;\r\n      if (selectedVideos.includes(id)) {\r\n          selectedVideos = selectedVideos.filter(v => v !== id);\r\n      } else if (!this.checkIfVideoAddedToPlaylist(video, playlist)) {\r\n          selectedVideos.push(id);\r\n      }\r\n      return selectedVideos;\r\n  }\r\n\r\n    checkIfVideoAddedToPlaylist(video, playlist) {\r\n        return video?.playlists?.find(p => playlist.id === p.id);\r\n    }\r\n\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {\r\n    API_URL, USER_DEFAULT_AVATARS_PATH,\r\n    VIDEO_DEFAULT_AVATARS_PATH,\r\n    VIDEO_DEFAULT_COVERS_PATH,\r\n    VIDEO_DEFAULT_THUMBNAILS_PATH\r\n} from '@core/constants/global';\r\nimport {DomSanitizer, SafeStyle} from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n    name: 'getImgPath'\r\n})\r\nexport class GetThumbPathPipe implements PipeTransform {\r\n\r\n    constructor(\r\n        private sanitizer: DomSanitizer,\r\n    ) {\r\n\r\n    }\r\n\r\n    transform(img, folder = 'thumbnails', extra = null): string | SafeStyle {\r\n\r\n        const url = img ? `${API_URL}uploads/${folder}/${img}` : this.getDefaultPaths(folder);\r\n\r\n        if (extra === 'background') {\r\n            // let url = 'url(\"' + UPLOADS_FOLDER + folder + '/' + name + '\")';\r\n            return this.sanitizer.bypassSecurityTrustStyle(`url(\"${url}\"`);\r\n        } else if (extra === 'url') {\r\n            return this.sanitizer.bypassSecurityTrustUrl(url);\r\n        }\r\n\r\n        return img ? `${API_URL}uploads/${folder}/${img}` : this.getDefaultPaths(folder);\r\n    }\r\n\r\n    getDefaultPaths(folder) {\r\n        let p = '';\r\n        switch (folder) {\r\n            case 'thumbnails':\r\n                p = VIDEO_DEFAULT_THUMBNAILS_PATH;\r\n                break;\r\n            case 'avatars':\r\n                p = VIDEO_DEFAULT_AVATARS_PATH;\r\n                break;\r\n            case 'user_avatars':\r\n                p = USER_DEFAULT_AVATARS_PATH;\r\n                break;\r\n            case 'covers':\r\n                p = VIDEO_DEFAULT_COVERS_PATH;\r\n        }\r\n\r\n        return p;\r\n\r\n    }\r\n\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\n@Pipe({\r\n    name: 'updateUserStocks'\r\n})\r\nexport class UpdateUserStocksPipe implements PipeTransform {\r\n\r\n    constructor(private toastr: ToastrService) {\r\n    }\r\n\r\n    transform(userStocks: any[], stock: any, selectedTypeId: any): any {\r\n        let following = !!userStocks.find(f => f.name === stock.name);\r\n\r\n\r\n        if (!following) {\r\n            userStocks.push({\r\n                name: stock.name,\r\n                symbol: stock.symbol,\r\n                change: stock.change,\r\n                changesPercentage: stock.changesPercentage,\r\n                price: stock.price,\r\n                type_id: selectedTypeId || stock.type_id\r\n            });\r\n            following = true;\r\n        } else {\r\n            userStocks = userStocks.filter(f => f.name !== stock.name);\r\n            following = false;\r\n        }\r\n\r\n\r\n        return {userStocks, following};\r\n        // return userStocks;\r\n    }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {CarouselModule} from 'ngx-owl-carousel-o';\r\nimport {VideoJsComponent} from './components/video-js/video-js.component';\r\nimport {VideoJsRecordComponent} from './components/video-js-record/video-js-record.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {ChatBoxComponent} from './components/chat-box/chat-box.component';\r\nimport {GetAuthUserPipe} from './pipes/get-auth-user.pipe';\r\nimport {BlobToFilePipe} from './pipes/blob-to-file.pipe';\r\nimport {PickerModule} from '@ctrl/ngx-emoji-mart';\r\nimport {MaterialModule} from '@core/modules/material.module';\r\nimport {Base64ToFilePipe} from './pipes/base64-to-file.pipe';\r\nimport {CategoriesComponent} from '@shared/components/categories/categories.component';\r\nimport {FilterDevicesPipe} from './pipes/filter-devices.pipe';\r\nimport {GetThumbPathPipe} from './pipes/get-thumb-path.pipe';\r\nimport {VideoCarouselHolderComponent} from './components/video-carousel-holder/video-carousel-holder.component';\r\nimport {GetSelectedVideosToBeAddedToPlaylistPipe} from './pipes/get-selected-videos-to-be-added-to-playlist.pipe';\r\nimport {VideoFiltersComponent} from '@shared/components/video-filters/video-filters.component';\r\nimport {DateFromNowPipe} from './pipes/date-from-now.pipe';\r\nimport {FilterOutFalsyValuesFromObjectPipe} from './pipes/filter-out-falsy-values-from-object.pipe';\r\nimport {CheckForEmptyObjectPipe} from './pipes/check-for-empty-object.pipe';\r\nimport {UserTagsComponent} from './components/user-tags/user-tags.component';\r\nimport {VideosListHolderComponent} from './components/videos-list-holder/videos-list-holder.component';\r\nimport {SearchStocksFormOldComponent} from '@shared/components/search-stocks-form-old/search-stocks-form-old.component';\r\nimport {StocksListsModalComponent} from './components/stocks-lists-modal/stocks-lists-modal.component';\r\nimport {StocksListSampleComponent} from './components/stocks-list-sample/stocks-list-sample.component';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {NgxChartsModule} from '@swimlane/ngx-charts';\r\nimport {UpdateUserStocksPipe} from './pipes/update-user-stocks.pipe';\r\nimport {SearchStocksFormComponent} from '@shared/components/search-stocks-form/search-stocks-form.component';\r\nimport {SearchVideosFormComponent} from '@shared/components/search-videos-form/search-videos-form.component';\r\nimport { StocksTilesComponent } from './components/stocks-tiles/stocks-tiles.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        VideoJsComponent,\r\n        VideoJsRecordComponent,\r\n        CategoriesComponent,\r\n        ChatBoxComponent,\r\n        VideoFiltersComponent,\r\n        GetAuthUserPipe,\r\n        BlobToFilePipe,\r\n        Base64ToFilePipe,\r\n        FilterDevicesPipe,\r\n        GetThumbPathPipe,\r\n        VideoCarouselHolderComponent,\r\n        GetSelectedVideosToBeAddedToPlaylistPipe,\r\n        DateFromNowPipe,\r\n        FilterOutFalsyValuesFromObjectPipe,\r\n        CheckForEmptyObjectPipe,\r\n        UserTagsComponent,\r\n        VideosListHolderComponent,\r\n        SearchStocksFormOldComponent,\r\n        StocksListsModalComponent,\r\n        StocksListSampleComponent,\r\n        UpdateUserStocksPipe,\r\n        SearchStocksFormComponent,\r\n        SearchVideosFormComponent,\r\n        StocksTilesComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        CarouselModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        PickerModule,\r\n        MaterialModule,\r\n        DragDropModule,\r\n        NgxChartsModule\r\n    ],\r\n    providers: [\r\n        GetAuthUserPipe,\r\n        BlobToFilePipe,\r\n        Base64ToFilePipe,\r\n        FilterDevicesPipe,\r\n        GetSelectedVideosToBeAddedToPlaylistPipe,\r\n        FilterOutFalsyValuesFromObjectPipe,\r\n        CheckForEmptyObjectPipe,\r\n        UpdateUserStocksPipe\r\n\r\n    ],\r\n    exports: [\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        CarouselModule,\r\n        PickerModule,\r\n        MaterialModule,\r\n        VideoJsComponent,\r\n        VideoJsRecordComponent,\r\n        ChatBoxComponent,\r\n        CategoriesComponent,\r\n        FilterDevicesPipe,\r\n        GetThumbPathPipe,\r\n        VideoCarouselHolderComponent,\r\n        VideoFiltersComponent,\r\n        DateFromNowPipe,\r\n        UserTagsComponent,\r\n        CheckForEmptyObjectPipe,\r\n        VideosListHolderComponent,\r\n        SearchStocksFormOldComponent,\r\n        StocksListsModalComponent,\r\n        StocksListSampleComponent,\r\n        SearchStocksFormComponent,\r\n        SearchVideosFormComponent,\r\n        StocksTilesComponent\r\n    ]\r\n\r\n})\r\nexport class SharedModule {\r\n}\r\n","<!--<app-categories></app-categories>-->\r\n<!--<app-stock-profile></app-stock-profile>-->\r\n<app-user-tags *ngIf=\"auth.loggedIn()\" (tagSelected)=\"getVideosByTag($event)\"></app-user-tags>\r\n<!--<app-video-carousel-holder [videos]=\"videos\"></app-video-carousel-holder>-->\r\n<!--<app-video-carousel-holder [videos]=\"videos\" [title]=\"'Trending Streams'\"></app-video-carousel-holder>-->\r\n<!--<app-video-carousel-holder [videos]=\"videos\" [title]=\"'Trending CLIPZ'\"></app-video-carousel-holder>-->\r\n\r\n<app-videos-list-holder [videos]=\"videos\"></app-videos-list-holder>\r\n<app-videos-list-holder [videos]=\"videos\" [title]=\"'Trending Streams'\"></app-videos-list-holder>\r\n<app-videos-list-holder [videos]=\"videos\" [title]=\"'Trending CLIPZ'\"></app-videos-list-holder>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {API_URL, OWL_OPTIONS} from '@core/constants/global';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {Router} from '@angular/router';\r\nimport {AuthService} from '@core/services/auth.service';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n    owlOptions = OWL_OPTIONS;\r\n    videos = [];\r\n    apiUrl = API_URL;\r\n\r\n    constructor(\r\n        private videoService: VideoService,\r\n        public router: Router,\r\n        public auth: AuthService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.videoService.get({}).subscribe(dt => {\r\n            this.videos = dt.videos;\r\n        });\r\n    }\r\n\r\n    async getVideosByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n}\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\n\r\n@Component({\r\n    selector: 'app-join-streaming-form',\r\n    templateUrl: './join-streaming-form.component.html',\r\n    styleUrls: ['./join-streaming-form.component.scss']\r\n})\r\nexport class JoinStreamingFormComponent implements OnInit {\r\n\r\n\r\n    // Join form\r\n    joinSessionForm: FormGroup;\r\n    mySessionId: string;\r\n    myUserName: string;\r\n\r\n    sessionName = 'SessionA';\r\n\r\n    authUser;\r\n\r\n    @Output() formReady = new EventEmitter();\r\n\r\n    constructor(\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private fb: FormBuilder,\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initForm();\r\n    }\r\n\r\n    initForm() {\r\n        this.joinSessionForm = this.fb.group({\r\n            sessionName: [this.sessionName],\r\n            // myUserName: ['Participant' + Math.floor(Math.random() * 100)]\r\n            myUserName: [this.authUser.username]\r\n        });\r\n    }\r\n\r\n    submit() {\r\n        this.formReady.emit(this.joinSessionForm.value);\r\n    }\r\n\r\n}\r\n","<div id=\"img-div\"><img src=\"../../../../assets/img/openvidu_grey_bg_transp_cropped.png\"/></div>\r\n<div id=\"join-dialog\" class=\"jumbotron vertical-center\">\r\n    <h1>Join a video session</h1>\r\n    <form class=\"form-group\" [formGroup]=\"joinSessionForm\">\r\n        <p>\r\n            <label>Session</label>\r\n            <input class=\"form-control\" id=\"userName\" formControlName=\"sessionName\" required>\r\n        </p>\r\n        <p>\r\n            <label>Participant</label>\r\n            <input class=\"form-control\" id=\"sessionId\" formControlName=\"myUserName\" required>\r\n        </p>\r\n        <p class=\"text-center\">\r\n            <button class=\"btn btn-lg btn-success join-session-btn\" type=\"button\" (click)=\"submit()\">\r\n                Join!\r\n            </button>\r\n        </p>\r\n    </form>\r\n</div>\r\n","import {AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {OpentokService} from '@core/services/opentok.service';\r\nimport * as OT from '@opentok/client';\r\n\r\n@Component({\r\n  selector: 'app-publisher',\r\n  templateUrl: './publisher.component.html',\r\n  styleUrls: ['./publisher.component.scss']\r\n})\r\nexport class PublisherComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild('publisherDiv') publisherDiv: ElementRef;\r\n  @Input() session: OT.Session;\r\n  @Output() shareScreen = new EventEmitter();\r\n  publisher: OT.Publisher;\r\n  publishing: boolean;\r\n  playerOptions = {\r\n    autoplay: true,\r\n    html5: {\r\n      vhs: {\r\n        overrideNative: true,\r\n        withCredentials: true\r\n      }\r\n    },\r\n    liveui: true,\r\n    controls: true,\r\n    fluid: false,\r\n    sources: [{src: 'https://vjs.zencdn.net/v/oceans.mp4', type: 'video/mp4'}]\r\n  }\r\n\r\n  constructor(private opentokService: OpentokService) {\r\n    this.publishing = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.publisher = OT.initPublisher(this.publisherDiv.nativeElement, {insertMode: 'append'});\r\n    if (this.session) {\r\n      // if (this.session['isConnected']()) {\r\n      //   this.publish();\r\n      // }\r\n      this.session.on('sessionConnected', () => this.publish());\r\n    }\r\n  }\r\n\r\n  publish() {\r\n    this.session.publish(this.publisher, (err) => {\r\n      if (err) {\r\n        alert(err.message);\r\n      } else {\r\n        this.publishing = true;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  screenShare() {\r\n    this.shareScreen.emit();\r\n  }\r\n\r\n\r\n}\r\n","<!--<app-vjs-player [options]=\"playerOptions\"></app-vjs-player>-->\r\n<div class=\"publisher\">\r\n  <div [ngClass]=\"{'publishing': publishing}\" #publisherDiv ></div>\r\n</div>\r\n","import {AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\r\nimport * as OT from '@opentok/client';\r\n\r\n@Component({\r\n  selector: 'app-subscriber',\r\n  templateUrl: './subscriber.component.html',\r\n  styleUrls: ['./subscriber.component.scss']\r\n})\r\nexport class SubscriberComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild('subscriberDiv') subscriberDiv: ElementRef;\r\n  @Input() session: OT.Session;\r\n  @Input() stream: OT.Stream;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const subscriber = this.session.subscribe(this.stream, this.subscriberDiv.nativeElement, {}, (err) => {\r\n      if (err) {\r\n        alert(err.message);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"subscriber\">\r\n  <div #subscriberDiv></div>\r\n</div>\r\n","<div *ngIf=\"!session\" id=\"join\">\r\n  <div id=\"join-dialog\">\r\n    <h1>Join a video session</h1>\r\n    <form class=\"form-group\" [formGroup]=\"joinSessionForm\">\r\n      <p>\r\n        <label>Participant</label>\r\n        <input class=\"form-control\" id=\"userName\" formControlName=\"mySessionId\" required>\r\n      </p>\r\n      <p>\r\n        <label>Session</label>\r\n        <input class=\"form-control\" id=\"sessionId\" formControlName=\"myUserName\" required>\r\n      </p>\r\n      <p class=\"text-center\">\r\n        <button class=\"btn btn-lg btn-success join-session-btn\" type=\"button\" (click)=\"joinSession()\">Join!</button>\r\n      </p>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"session\" id=\"session\">\r\n  <opv-session\r\n      #ovSessionComponent\r\n      [sessionName]=\"mySessionId\"\r\n      [user]=\"myUserName\"\r\n      [tokens]=\"tokens\"\r\n      (sessionCreated)=\"handlerSessionCreatedEvent($event)\"\r\n      (publisherCreated)=\"handlerPublisherCreatedEvent($event)\"\r\n      (error)=\"handlerErrorEvent($event)\">\r\n  </opv-session>\r\n</div>\r\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {\r\n  OpenVidu,\r\n  Publisher,\r\n  Session,\r\n  SessionDisconnectedEvent,\r\n  StreamEvent,\r\n  StreamManager,\r\n  Subscriber\r\n} from 'openvidu-browser';\r\nimport {OpenviduService} from '@core/services/openvidu.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {OpenViduLayout, OpenViduLayoutOptions, OpenviduSessionComponent, OvSettings, UserModel} from 'openvidu-angular';\r\n\r\n@Component({\r\n  selector: 'app-video-library',\r\n  templateUrl: './video-library.component.html',\r\n  styleUrls: ['./video-library.component.scss']\r\n})\r\nexport class VideoLibraryComponent implements OnInit {\r\n\r\n  joinSessionForm: FormGroup;\r\n\r\n  OPENVIDU_SERVER_URL = 'https://localhost/:4443';\r\n  OPENVIDU_SERVER_SECRET = 'MY_SECRET';\r\n\r\n  // Join form\r\n  mySessionId = 'SessionA';\r\n  myUserName = 'Participant' + Math.floor(Math.random() * 100);\r\n  tokens: string[] = [];\r\n  session = false;\r\n\r\n  ovSession: Session;\r\n  ovLocalUsers: UserModel[];\r\n  ovLayout: OpenViduLayout;\r\n  ovLayoutOptions: OpenViduLayoutOptions;\r\n\r\n  @ViewChild('ovSessionComponent')\r\n  public ovSessionComponent: OpenviduSessionComponent;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private openViduService: OpenviduService,\r\n    private toastr: ToastrService,\r\n    private elRef: ElementRef,\r\n  ) {\r\n    this.initForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  initForm() {\r\n    this.joinSessionForm = this.fb.group({\r\n      mySessionId: ['SessionB'],\r\n      myUserName: ['Participant' + Math.floor(Math.random() * 100)]\r\n    });\r\n  }\r\n\r\n  async joinSession() {\r\n    this.getToken();\r\n  }\r\n\r\n  getToken() {\r\n    this.openViduService.getToken({email: 'admin@gmail.com', sessionName: 'SessionA'}).subscribe((token: any) => {\r\n      this.tokens.push(token);\r\n      this.session = true;\r\n      console.log(this.tokens)\r\n    });\r\n  }\r\n\r\n\r\n  leaveSession() {\r\n\r\n  }\r\n\r\n  handlerSessionCreatedEvent(session: Session): void {\r\n\r\n    // You can see the session documentation here\r\n    // https://docs.openvidu.io/en/stable/api/openvidu-browser/classes/session.html\r\n\r\n    console.log('SESSION CREATED EVENT', session);\r\n\r\n    session.on('streamCreated', (event: StreamEvent) => {\r\n      console.log('stream created!!!')\r\n      // Do something\r\n    });\r\n\r\n    session.on('streamDestroyed', (event: StreamEvent) => {\r\n      // Do something\r\n    });\r\n\r\n    session.on('sessionDisconnected', (event: SessionDisconnectedEvent) => {\r\n      this.session = false;\r\n      this.tokens = [];\r\n    });\r\n\r\n    // this.myMethod();\r\n\r\n\r\n  }\r\n\r\n  handlerPublisherCreatedEvent(publisher: Publisher) {\r\n\r\n    // You can see the publisher documentation here\r\n    // https://docs.openvidu.io/en/stable/api/openvidu-browser/classes/publisher.html\r\n\r\n    publisher.on('streamCreated', (e) => {\r\n      console.log('Publisher streamCreated', e);\r\n    });\r\n\r\n  }\r\n\r\n  handlerErrorEvent(event): void {\r\n    // Do something\r\n    console.log('error', event)\r\n  }\r\n\r\n  myMethod() {\r\n    this.ovLocalUsers = this.ovSessionComponent.getLocalUsers();\r\n    this.ovLayout = this.ovSessionComponent.getOpenviduLayout();\r\n    this.ovLayoutOptions = this.ovSessionComponent.getOpenviduLayoutOptions();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // On component destroyed leave session\r\n    this.leaveSession();\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"profileForm\" class=\"flex-wrap-reverse\">\r\n    <div class=\"left-side pr-lg-2\">\r\n\r\n\r\n        <input class=\"login-input\" placeholder=\"Full Name\" formControlName=\"full_name\">\r\n        <span class=\"error\" *ngIf=\"isSubmitted && fullName.hasError('required')\">Full name is required</span>\r\n        <span class=\"error\" *ngIf=\"isSubmitted && fullName.hasError('patternInvalid')\">\r\n                    Full name should contain only alphabetical characters\r\n                </span>\r\n        <input class=\"login-input\" placeholder=\"User name\" formControlName=\"username\">\r\n        <span class=\"error\" *ngIf=\"isSubmitted && username.hasError('required')\">User name is required</span>\r\n        <span class=\"error\" *ngIf=\"isSubmitted && username.hasError('patternInvalid')\">\r\n                    Please write alphabetical characters before numbers for username\r\n                </span>\r\n\r\n        <div class=\"register-block birthday-block\">\r\n            <input type=\"text\" (bsValueChange)=\"dateChanged($event)\" formControlName=\"birthday\"\r\n                   class=\"login-input\"\r\n                   placeholder=\"Birthday\" [bsConfig]=\"{maxDate:maxDate, showWeekNumbers: false}\"\r\n                   [maxDate]=\"maxDate\"\r\n                   bsDatepicker>\r\n        </div>\r\n\r\n        <input class=\"login-input\" placeholder=\"Email\" formControlName=\"email\">\r\n        <span class=\"error\" *ngIf=\"isSubmitted && email.hasError('required')\">E-mail is required</span>\r\n        <span class=\"error\" *ngIf=\"isSubmitted && email.hasError('patternInvalid')\">\r\n                    E-mail is <strong>invalid</strong>\r\n                </span>\r\n\r\n\r\n<!--                <input class=\"login-input\" placeholder=\"Password\" type=\"password\" formControlName=\"password\">-->\r\n<!--                <span class=\"error\" *ngIf=\"isSubmitted && pass.hasError('required')\">Password is required</span>-->\r\n<!--                <span class=\"error\" *ngIf=\"pass.hasError('patternInvalid')\">-->\r\n<!--                                   Password should not contain spaces-->\r\n<!--                                </span>-->\r\n<!--                <span class=\"error\" *ngIf=\"pass.hasError('maxlength')||pass.hasError('minlength')\">-->\r\n<!--                                   Password should be between 6-15 characters-->\r\n<!--                                </span>-->\r\n<!--                <input class=\"login-input\" placeholder=\"Reenter Password\" type=\"password\"-->\r\n<!--                       formControlName=\"confirm_password\">-->\r\n<!--                <span class=\"error\" *ngIf=\"confirmPass.hasError('notMatch')\">Passwords don't match</span>-->\r\n<!--                <span class=\"error\"-->\r\n<!--                      *ngIf=\"isSubmitted && confirmPass.hasError('required')\">Please confirm the password</span>-->\r\n\r\n        <span class=\"error\" *ngIf=\"isSubmitted && birthday.hasError('required')\">Birth day is required</span>\r\n        <div class=\"actions\">\r\n            <a class=\"save-profile-changes\" (click)=\"saveChanges()\">Save changes</a>\r\n            <mat-spinner [diameter]=\"15\" *ngIf=\"loader.formProcessing\"></mat-spinner>\r\n        </div>\r\n    </div>\r\n    <div class=\"right-side mx-auto ml-xl-4 pl-lg-2\">\r\n        <!-- User image or drop zone container-->\r\n        <div class=\"userImg\">\r\n\r\n\r\n            <!-- Showing drop zone for non-authenticated user and for a user without a profile image -->\r\n            <dropzone [config]=\"dropzoneConfig\" *ngIf=\"!profileImg\" (removedFile)=\"removeImage()\"\r\n                      id=\"dropzone\" class=\"profileImgDropzone single\" #dropzone (thumbnail)=\"onAddedFile($event)\"\r\n                      [message]=\"'Click or drag an image to upload'\">\r\n            </dropzone>\r\n\r\n            <div class=\"profile-img\" *ngIf=\"profileImg\"\r\n                 [style.background]=\"profileImg| getImgPath:'user_avatars':'background'\"\r\n                 [ngStyle]=\"{'background-size':'cover'}\">\r\n                <i class=\"fa fa-times remove-profile-img\" (click)=\"removeImage()\"></i>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {CroppedEvent} from 'ngx-photo-editor';\r\nimport {UsersService} from '@core/services/users.service';\r\nimport {Base64ToFilePipe} from '@shared/pipes/base64-to-file.pipe';\r\nimport {User} from '@shared/models/user';\r\nimport {AbstractControl, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {Subscription} from 'rxjs';\r\nimport {patternValidator} from '@core/helpers/pattern-validator';\r\nimport {\r\n    EMAIL_PATTERN,\r\n    NO_SPACE_PATTERN,\r\n    NUMBER_AFTER_TEXT_PATTERN,\r\n    TEXT_ONLY_PATTERN_WITHOUT_SPECIALS\r\n} from '@core/constants/patterns';\r\nimport {LoaderService} from '@core/services/loader.service';\r\nimport {DROPZONE_CONFIG} from 'ngx-dropzone-wrapper';\r\nimport {AuthService} from '@core/services/auth.service';\r\nimport * as  moment from 'moment';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {SubjectService} from '@core/services/subject.service';\r\n\r\n@Component({\r\n    selector: 'app-profile',\r\n    templateUrl: './profile.component.html',\r\n    styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit, OnDestroy {\r\n    profileForm: FormGroup;\r\n    isSubmitted = false;\r\n    subscriptions: Subscription[] = [];\r\n    currentDate = new Date();\r\n    maxDate: Date;\r\n\r\n    dropzoneConfig = DROPZONE_CONFIG;\r\n    dropzoneFiles = [];\r\n\r\n    authUser;\r\n\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        public loader: LoaderService,\r\n        public auth: AuthService,\r\n        private usersService: UsersService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private toastr: ToastrService,\r\n        private subject: SubjectService,\r\n        public router: Router\r\n    ) {\r\n        this.initForm();\r\n        this.authUser = this.getAuthUser.transform();\r\n        this.profileForm.patchValue({...this.authUser, birthday: moment(this.authUser.birthday).format('MM/DD/YYYY')});\r\n\r\n    }\r\n\r\n    initForm() {\r\n        this.profileForm = this.fb.group({\r\n            id: [''],\r\n            full_name: ['', [Validators.required, patternValidator(TEXT_ONLY_PATTERN_WITHOUT_SPECIALS)]],\r\n            username: ['', [Validators.required, patternValidator(NUMBER_AFTER_TEXT_PATTERN)]],\r\n            email: ['', [Validators.required, patternValidator(EMAIL_PATTERN)]],\r\n            // password: ['',\r\n            //     [\r\n            //         Validators.required, patternValidator(NO_SPACE_PATTERN),\r\n            //         Validators.minLength(PASSWORD_MIN_LENGTH), Validators.maxLength(PASSWORD_MAX_LENGTH)\r\n            //     ],\r\n            // ],\r\n            // confirm_password: new FormControl('', {validators: [Validators.required], updateOn: 'blur'}),\r\n            // confirm_password: ['', Validators.required],\r\n            birthday: ['', Validators.required],\r\n            avatar: ['']\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    dateChanged(e) {\r\n\r\n    }\r\n\r\n    removeImage() {\r\n        this.authUser.avatar = '';\r\n        this.profileForm.patchValue({avatar: ''});\r\n    }\r\n\r\n    onAddedFile(e) {\r\n        this.dropzoneFiles.push(e[0]);\r\n        this.profileForm.patchValue({avatar: e[0].name});\r\n        console.log(e)\r\n    }\r\n\r\n    buildFormData() {\r\n        const formData: FormData = new FormData();\r\n        const formValue = this.profileForm.value;\r\n        const dropFileExist = Object.entries(this.dropzoneFiles).length > 0;\r\n\r\n        for (const field in this.profileForm.value) {\r\n            if (field === 'birthday') {\r\n                if (formValue.birthday) {\r\n                    formData.append(field, moment(new Date(this.profileForm.value[field])).format('YYYY-MM-DD'));\r\n                }\r\n            } else if (field !== 'avatar' || !dropFileExist) {\r\n                formData.append(field, this.profileForm.value[field]);\r\n            }\r\n        }\r\n\r\n        // If drop zone file exists saving it to formData object as well\r\n        if (dropFileExist) {\r\n\r\n            const file = this.dropzoneFiles[0];\r\n\r\n            const fileName = `avatar_${Date.now()}.jpg`;\r\n            formData.append('avatar', fileName);\r\n            formData.append('user_avatar_file', file, fileName);\r\n        }\r\n\r\n        return formData;\r\n    }\r\n\r\n    saveChanges() {\r\n        const formData = this.buildFormData();\r\n        this.usersService.saveProfileChanges(formData).subscribe(async (dt) => {\r\n            localStorage.setItem('token', (dt.hasOwnProperty('token') ? dt.token : ''));\r\n            this.subject.changeAuthUser((dt.hasOwnProperty('token') ? dt.token : ''));\r\n            this.toastr.success('The changes are saved successfully');\r\n            await this.router.navigateByUrl('');\r\n        });\r\n    }\r\n\r\n    get fullName(): AbstractControl {\r\n        return this.profileForm.get('full_name');\r\n    }\r\n\r\n    get email(): AbstractControl {\r\n        return this.profileForm.get('email');\r\n    }\r\n\r\n    get pass(): AbstractControl {\r\n        return this.profileForm.get('password');\r\n    }\r\n\r\n    get username(): AbstractControl {\r\n        return this.profileForm.get('username');\r\n    }\r\n\r\n    get confirmPass(): AbstractControl {\r\n        return this.profileForm.get('confirm_password');\r\n    }\r\n\r\n    get birthday(): AbstractControl {\r\n        return this.profileForm.get('birthday');\r\n    }\r\n\r\n    get profileImg(): any {\r\n        return this.authUser ? this.authUser.avatar : false;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n}\r\n","<div class=\"start-live-video-page\">\r\n\r\n    <div class=\"text\">\r\n        <h1>Start live video</h1>\r\n        <p>Start sharing your story and connecting with viewers. Get your webcam ready, check your lighting, and\r\n            click below to go live!\r\n            We ask that you keep in mind of the <a href=\"https://www.dmca.com/\" target=\"_blank\">DMCA rules</a> and\r\n            please do not\r\n            play any music that is not owned by you\r\n            while you stream. We will remove any videos that are in violation of the DMCA. <br>\r\n            Smile, you look great!\r\n        </p>\r\n        <div class=\"loader\" *ngIf=\"deviceStatus!=='loaded' && deviceStatus!=='failed'\">\r\n            <mat-spinner [diameter]=\"20\"></mat-spinner>\r\n            <strong>Loading devices info</strong>\r\n        </div>\r\n        <form [formGroup]=\"deviceRecognitionForm\" *ngIf=\"deviceStatus==='loaded' || deviceStatus==='failed'\">\r\n            <div id=\"devices\">\r\n                <div class=\"item-wrap\">\r\n\r\n                    <div class=\"item\">\r\n                        <div class=\"info border\" *ngIf=\"!videoDevice.hasError('required')\">\r\n                            <span class=\"material-icons\">videocam</span>\r\n                            <mat-form-field style=\"width:88%;\">\r\n                                <mat-select formControlName=\"video_device\">\r\n                                    <mat-option\r\n                                        *ngFor=\"let videoDevice of userMediaDevices|filterDevices:{kind:'videoinput'}\"\r\n                                        [value]=\"videoDevice.label\">\r\n                                        {{videoDevice.label}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                            <mat-icon class=\"refresh\" (click)=\"getConnectedDevices()\">refresh</mat-icon>\r\n                        </div>\r\n                        <div class=\"error-msg\" *ngIf=\"videoDevice.hasError('required')\">\r\n                            <mat-icon>videocam_off</mat-icon>\r\n                            <ng-container>\r\n                                <span>Can't find camera. Make sure it's connected and try again</span>\r\n                                <mat-icon class=\"refresh\" (click)=\"getConnectedDevices()\">refresh</mat-icon>\r\n                            </ng-container>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"item\">\r\n                        <div class=\"info border\" *ngIf=\"!audioDevice.hasError('required')\">\r\n                            <span class=\"material-icons\">mic</span>\r\n                            <mat-form-field style=\"width:88%;\">\r\n                                <mat-select formControlName=\"audio_device\">\r\n                                    <mat-option\r\n                                        *ngFor=\"let audioDevice of userMediaDevices|filterDevices:{kind:'audioinput'}\"\r\n                                        [value]=\"audioDevice.label\">\r\n                                        {{audioDevice.label}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                            <mat-icon class=\"refresh\" (click)=\"getConnectedDevices()\">refresh</mat-icon>\r\n                        </div>\r\n                        <div class=\"error-msg\" *ngIf=\"audioDevice.hasError('required')\">\r\n                            <mat-icon>mic</mat-icon>\r\n                            <span>Can't find microphone. Make sure it's connected and try again</span>\r\n                            <mat-icon class=\"refresh\" (click)=\"getConnectedDevices()\">refresh</mat-icon>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <button class=\"btn\" type=\"button\" (click)=\"startLiveVideo()\" [disabled]=\"!deviceRecognitionForm.valid\">\r\n                <span class=\"material-icons\"> video_call </span>\r\n                <span>Start live video</span>\r\n            </button>\r\n        </form>\r\n    </div>\r\n\r\n</div>\r\n","import {AfterViewInit, Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-check-requirements',\r\n    templateUrl: './check-streaming-requirements.component.html',\r\n    styleUrls: ['./check-streaming-requirements.component.scss']\r\n})\r\nexport class CheckStreamingRequirementsComponent implements OnInit, AfterViewInit {\r\n\r\n    deviceRecognitionForm: FormGroup;\r\n\r\n    userMediaDevices;\r\n    defaultVideoDevice;\r\n    defaultAudioDevice;\r\n\r\n    authUser;\r\n    deviceStatus = 'idle';\r\n\r\n    @Output('checked') checked = new EventEmitter();\r\n\r\n    constructor(\r\n        private toastr: ToastrService,\r\n        private fb: FormBuilder,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        public router: Router\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.authUser = this.getAuthUser.transform();\r\n        this.initForm();\r\n    }\r\n\r\n    initForm(): void {\r\n        this.deviceRecognitionForm = this.fb.group({\r\n            video_device: ['', Validators.required],\r\n            audio_device: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    async startLiveVideo() {\r\n        // if (this.deviceRecognitionForm.valid) {\r\n        this.checked.emit(true);\r\n        // }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.getConnectedDevices(true);\r\n    }\r\n\r\n    async getConnectedDevices(pageLoad = false) {\r\n        navigator.mediaDevices.getUserMedia({audio: true, video: true}).then(() => {\r\n            this.deviceStatus = 'loading';\r\n            navigator.mediaDevices.enumerateDevices()\r\n                .then((devices) => {\r\n                    this.deviceStatus = 'loaded';\r\n                    this.userMediaDevices = devices;\r\n                    this.defaultVideoDevice = devices.find(d => d.kind === 'videoinput');\r\n                    this.deviceRecognitionForm.patchValue({video_device: this.defaultVideoDevice?.label});\r\n                    this.defaultAudioDevice = devices.find(d => d.kind === 'audioinput');\r\n                    this.deviceRecognitionForm.patchValue({audio_device: this.defaultAudioDevice?.label});\r\n                })\r\n                .catch((err) => {\r\n                    this.deviceRecognitionForm.patchValue({\r\n                        audio_device: '',\r\n                        video_device: '',\r\n                    });\r\n                    this.toastr.error(err.message);\r\n                });\r\n        }).catch((err) => {\r\n            this.deviceStatus = 'failed';\r\n            this.deviceRecognitionForm.patchValue({\r\n                audio_device: '',\r\n                video_device: '',\r\n            });\r\n            console.log(this.deviceRecognitionForm.value)\r\n            this.toastr.error(err.message);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    get audioDevice() {\r\n        return this.deviceRecognitionForm.get('audio_device');\r\n    }\r\n\r\n    get videoDevice() {\r\n        return this.deviceRecognitionForm.get('video_device');\r\n    }\r\n\r\n}\r\n","import {Component, ElementRef, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {AbstractControl, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {API_URL, DESCRIPTION_CHARACTERS_LIMIT} from '@core/constants/global';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {MatChipInputEvent, MatChipList} from '@angular/material/chips';\r\n\r\n@Component({\r\n    selector: 'app-stream-details-form',\r\n    templateUrl: './collect-streaming-details-form.component.html',\r\n    styleUrls: ['./collect-streaming-details-form.component.scss']\r\n})\r\nexport class CollectStreamingDetailsFormComponent implements OnInit {\r\n\r\n    startStreamingForm: FormGroup;\r\n    isSubmitted = false;\r\n    thumbnailFile;\r\n    thumbnailUploading = false;\r\n    thumbnailUploaded = false;\r\n    apiUrl = API_URL;\r\n    tags = [];\r\n    videoCategories;\r\n    authUser;\r\n\r\n    sessionName = 'SessionA';\r\n    readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n\r\n    privacyTypes = [{name: 'Public', icon: 'public'}, {name: 'Private', icon: 'lock'}];\r\n    selectedPrivacy;\r\n\r\n    @ViewChild('chipsInput') chipsInput: ElementRef<HTMLInputElement>;\r\n    @ViewChild('tagList') tagList: MatChipList;\r\n    @Output('formReady') formReady = new EventEmitter();\r\n\r\n    constructor(\r\n        private videoService: VideoService,\r\n        private toastr: ToastrService,\r\n        private fb: FormBuilder,\r\n        private getAuthUser: GetAuthUserPipe,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.authUser = this.getAuthUser.transform();\r\n        this.selectedPrivacy = this.privacyTypes[0];\r\n        this.initForm();\r\n        this.getVideoCategories();\r\n\r\n        // this.startStreamingForm.get('tags').statusChanges.subscribe(\r\n        //     status => this.tagList.errorState = this.tags.length > 3\r\n        // );\r\n    }\r\n\r\n    initForm(): void {\r\n        this.startStreamingForm = this.fb.group({\r\n            name: ['', Validators.required],\r\n            description: ['', [Validators.required, Validators.maxLength(DESCRIPTION_CHARACTERS_LIMIT)]],\r\n            category_id: ['', Validators.required],\r\n            tags: [[], Validators.required],\r\n            sessionName: [this.sessionName],\r\n            myUserName: [this.authUser.username],\r\n            thumbnail: ['', Validators.required],\r\n            privacy: ['Public'],\r\n            status: ['live']\r\n        });\r\n    }\r\n\r\n    getVideoCategories() {\r\n        this.videoService.getVideoCategories().subscribe(dt => {\r\n            this.videoCategories = dt;\r\n        });\r\n    }\r\n\r\n    changedPrivacy(e) {\r\n        this.selectedPrivacy = this.privacyTypes.find(t => t.name === e.value);\r\n    }\r\n\r\n    add(event: MatChipInputEvent): void {\r\n        const input = event.input;\r\n        const value = event.value;\r\n\r\n        if ((value || '').trim()) {\r\n            this.tags.push({name: value.trim()});\r\n            this.startStreamingForm.patchValue({tags: this.tags});\r\n            // console.log(this.tags)\r\n            // console.log(this.startStreamingForm.value)\r\n        }\r\n\r\n        // Reset the input value\r\n        if (input) {\r\n            input.value = '';\r\n        }\r\n    }\r\n\r\n    remove(fruit): void {\r\n        const index = this.tags.indexOf(fruit);\r\n\r\n        if (index >= 0) {\r\n            this.tags.splice(index, 1);\r\n            this.startStreamingForm.patchValue({tags: this.tags});\r\n        }\r\n    }\r\n\r\n    getThumbnailFile(e) {\r\n        this.thumbnailFile = e.target.files[0];\r\n        const fd = new FormData();\r\n        fd.append('video_thumbnail_file', this.thumbnailFile);\r\n        this.startStreamingForm.patchValue({thumbnail: this.thumbnailFile.name});\r\n        this.thumbnailUploading = true;\r\n\r\n        this.videoService.saveVideoThumbnail(fd).subscribe(filename => {\r\n            this.toastr.success('The thumbnail has been uploaded successfully');\r\n            this.thumbnailUploading = false;\r\n            this.thumbnailUploaded = true;\r\n        });\r\n    }\r\n\r\n    removeUploadedThumbnail(filename) {\r\n        // this.videoService.removeVideoThumbnail(filename).subscribe(dt => {\r\n        this.thumbnailFile = [];\r\n        this.toastr.success('The thumbnail has been removed successfully');\r\n        this.thumbnailUploaded = false;\r\n        this.startStreamingForm.patchValue({thumbnail: ''});\r\n        // });\r\n    }\r\n\r\n    submit() {\r\n        this.isSubmitted = true;\r\n        if (this.startStreamingForm.valid && this.tags.length <= 3) {\r\n            this.formReady.emit({\r\n                categoryName: this.videoCategories.find(c => c.id === +this.startStreamingForm.value.category_id)?.name,\r\n                ...this.startStreamingForm.value\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    get streamName(): AbstractControl {\r\n        return this.startStreamingForm.get('name');\r\n    }\r\n\r\n\r\n    get streamDesc(): AbstractControl {\r\n        return this.startStreamingForm.get('description');\r\n    }\r\n\r\n    get streamCategory(): AbstractControl {\r\n        return this.startStreamingForm.get('category_id');\r\n    }\r\n\r\n    get streamTags(): AbstractControl {\r\n        return this.startStreamingForm.get('tags');\r\n    }\r\n\r\n}\r\n","<form [formGroup]=\"startStreamingForm\" id=\"start-streaming-form\">\r\n    <div class=\"start-live-video\">\r\n\r\n        <div id=\"video-name\">\r\n            <input formControlName=\"name\" placeholder=\"Video name\">\r\n            <mat-error *ngIf=\"streamName.hasError('required') && isSubmitted\">The stream name is required</mat-error>\r\n        </div>\r\n\r\n        <div id=\"video-tags\">\r\n            <mat-form-field class=\"example-chip-list\">\r\n                <mat-chip-list #tagList aria-label=\"Fruit selection\" formControlName=\"tags\">\r\n                    <mat-chip *ngFor=\"let tag of tags\" (removed)=\"remove(tag)\">\r\n                        {{tag.name}}\r\n                        <mat-icon matChipRemove>cancel</mat-icon>\r\n                    </mat-chip>\r\n                    <input placeholder=\"Tags...\" #chipsInput\r\n                           [matChipInputFor]=\"tagList\"\r\n                           [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                           (matChipInputTokenEnd)=\"add($event)\">\r\n                </mat-chip-list>\r\n                <mat-hint align=\"end\">Please press 'Enter' after the tag name</mat-hint>\r\n\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"tags.length ===0 && isSubmitted\">Please provide some tags describing your live video\r\n            </mat-error>\r\n            <mat-error *ngIf=\"tags.length > 3 && isSubmitted\">Only 3 tags please</mat-error>\r\n        </div>\r\n\r\n        <div id=\"video-categories\">\r\n            <select formControlName=\"category_id\">\r\n                <option selected [value]=\"''\">Category</option>\r\n                <option *ngFor=\"let category of videoCategories\" [value]=\"category.id\">{{category.name}}</option>\r\n            </select>\r\n            <mat-error *ngIf=\"streamCategory.hasError('required') && isSubmitted\">\r\n                The stream category is required\r\n            </mat-error>\r\n        </div>\r\n\r\n        <div id=\"video-description\">\r\n            <textarea formControlName=\"description\" placeholder=\"Video description\"></textarea>\r\n            <mat-error *ngIf=\"streamDesc.hasError('required') && isSubmitted\">\r\n                The stream description is required\r\n            </mat-error>\r\n            <mat-error *ngIf=\"streamDesc.hasError('maxlength')\">\r\n                Not more than 100 characters please\r\n            </mat-error>\r\n        </div>\r\n\r\n        <div id=\"privacy\">\r\n            <mat-radio-group formControlName=\"privacy\" (change)=\"changedPrivacy($event)\">\r\n                <mat-radio-button *ngFor=\"let privacy of privacyTypes\"\r\n                                  [value]=\"privacy.name\">\r\n                    {{privacy.name}}\r\n                    <mat-icon>{{privacy.icon}}</mat-icon>\r\n                </mat-radio-button>\r\n            </mat-radio-group>\r\n            <!--            <mat-icon>{{selectedPrivacy?.icon}}</mat-icon>-->\r\n            <!--            <select formControlName=\"privacy\" required (change)=\"changedPrivacy($event)\">-->\r\n            <!--                <option [value]=\"''\">Select privacy</option>-->\r\n            <!--                <option *ngFor=\"let privacy of privacyTypes\" [value]=\"privacy.name\">-->\r\n            <!--                    &lt;!&ndash;                                    <mat-icon>{{privacy.icon}}</mat-icon>&ndash;&gt;-->\r\n            <!--                    {{privacy.name}}-->\r\n            <!--                </option>-->\r\n            <!--            </select>-->\r\n        </div>\r\n\r\n        <!--        <div class=\"item\">-->\r\n        <!--            <div class=\"info\">-->\r\n        <!--                <mat-icon>{{selectedPrivacy?.icon}}</mat-icon>-->\r\n        <!--                <mat-form-field style=\"width:88%;\">-->\r\n        <!--                    <mat-select formControlName=\"privacy\" required-->\r\n        <!--                                (selectionChange)=\"changedPrivacy($event)\">-->\r\n        <!--                        &lt;!&ndash;                                <mat-select-trigger>&ndash;&gt;-->\r\n        <!--                        &lt;!&ndash;                                    <div class=\"selected-privacy\">&ndash;&gt;-->\r\n        <!--                        &lt;!&ndash;                                        <mat-icon>{{selectedPrivacy.icon}}</mat-icon>&ndash;&gt;-->\r\n        <!--                        &lt;!&ndash;                                        <span>{{selectedPrivacy.name}}</span>&ndash;&gt;-->\r\n        <!--                        &lt;!&ndash;                                    </div>&ndash;&gt;-->\r\n        <!--                        &lt;!&ndash;                                </mat-select-trigger>&ndash;&gt;-->\r\n        <!--                        <mat-option [value]=\"''\">Select privacy</mat-option>-->\r\n        <!--                        <mat-option *ngFor=\"let privacy of privacyTypes\" [value]=\"privacy.name\">-->\r\n        <!--                            &lt;!&ndash;                                    <mat-icon>{{privacy.icon}}</mat-icon>&ndash;&gt;-->\r\n        <!--                            {{privacy.name}}-->\r\n        <!--                        </mat-option>-->\r\n        <!--                    </mat-select>-->\r\n        <!--                </mat-form-field>-->\r\n        <!--            </div>-->\r\n        <!--        </div>-->\r\n\r\n        <div id=\"thumbnail\">\r\n            <ng-container *ngIf=\"!thumbnailUploaded\">\r\n                <label for=\"custom-thumbnail\">\r\n                    <span class=\"material-icons\">backup</span>\r\n                    Upload Thumbnail\r\n                </label>\r\n                <mat-spinner [diameter]=\"15\" *ngIf=\"thumbnailUploading\"></mat-spinner>\r\n                <input type=\"file\" id=\"custom-thumbnail\" (change)=\"getThumbnailFile($event)\">\r\n                <mat-error *ngIf=\"startStreamingForm.get('thumbnail').hasError('required') && isSubmitted\">\r\n                    The thumbnail is required\r\n                </mat-error>\r\n            </ng-container>\r\n            <div *ngIf=\"thumbnailUploaded\" id=\"uploaded-thumbnail-container\">\r\n                <mat-icon (click)=\"removeUploadedThumbnail(thumbnailFile.name)\" id=\"remove-thumbnail\">clear\r\n                </mat-icon>\r\n                <img id=\"uploaded-thumbnail\" src=\"{{apiUrl+'uploads/thumbnails/'+thumbnailFile.name}}\">\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"actions\">\r\n            <button class=\"btn btn-lg btn-success join-session-btn\" type=\"button\" (click)=\"submit()\">\r\n                Start live video\r\n            </button>\r\n        </div>\r\n    </div>\r\n</form>\r\n","<app-check-requirements (checked)=\"requirementsChecked = true\" *ngIf=\"!requirementsChecked\"></app-check-requirements>\r\n<app-stream-details-form *ngIf=\"requirementsChecked\" (formReady)=\"getPublisherData($event)\"></app-stream-details-form>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-publisher-flow',\r\n    templateUrl: './publisher-flow.component.html',\r\n    styleUrls: ['./publisher-flow.component.scss']\r\n})\r\nexport class PublisherFlowComponent implements OnInit {\r\n\r\n    videoSettings;\r\n    sessionData = {sessionName: '', myUserName: ''};\r\n    requirementsChecked = false;\r\n\r\n    constructor(\r\n        private subject: SubjectService,\r\n        public router: Router\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    async getPublisherData(e) {\r\n        this.sessionData = {sessionName: e.sessionName, myUserName: e.myUserName};\r\n        this.videoSettings = e;\r\n        this.subject.setSessionData(this.sessionData);\r\n        localStorage.setItem('session', JSON.stringify(this.sessionData));\r\n        localStorage.setItem('video_settings', JSON.stringify(this.videoSettings));\r\n        await this.router.navigate(['user/video/publish']);\r\n    }\r\n\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    HostListener,\r\n    OnDestroy,\r\n    OnInit,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {ConnectionEvent, OpenVidu, Publisher, Session, StreamEvent, StreamManager, Subscriber} from 'openvidu-browser';\r\nimport {FormBuilder} from '@angular/forms';\r\nimport {OpenviduService} from '@core/services/openvidu.service';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {ActivatedRoute, NavigationStart, Router} from '@angular/router';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {LoaderService} from '@core/services/loader.service';\r\nimport {ChatService} from '@core/services/chat.service';\r\n\r\n@Component({\r\n    selector: 'app-video',\r\n    templateUrl: './video.component.html',\r\n    styleUrls: ['./video.component.scss']\r\n})\r\nexport class VideoComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n\r\n    videoJSPlayerOptions = {\r\n        autoplay: true,\r\n        controls: true,\r\n        fluid: false,\r\n        sources: []\r\n    };\r\n\r\n    videoSettings;\r\n\r\n    videoId;\r\n\r\n\r\n    OPENVIDU_SERVER_URL = 'https://localhost:4443';\r\n    OPENVIDU_SERVER_SECRET = 'MY_SECRET';\r\n\r\n    // OpenVidu objects\r\n    OV: OpenVidu;\r\n    session: Session;\r\n    publisher: StreamManager; // Local\r\n    subscribers: StreamManager[] = []; // Remotes\r\n\r\n\r\n    @ViewChild('video') videoEl;\r\n\r\n    // Main video of the page, will be 'publisher' or one of the 'subscribers',\r\n    // updated by click event in UserVideoComponent children\r\n    mainStreamManager: StreamManager;\r\n\r\n    authUser;\r\n    openViduToken;\r\n\r\n    recordingState = 'idle';\r\n\r\n    webcams = [];\r\n    tags = [];\r\n\r\n    participants = [];\r\n\r\n\r\n    thumbnailFile;\r\n    thumbnailUploaded = false;\r\n    apiUrl = API_URL;\r\n\r\n    publisherData;\r\n    sessionData = {sessionName: '', myUserName: ''};\r\n\r\n    sessionName;\r\n\r\n    constructor(\r\n        private ref: ChangeDetectorRef,\r\n        private toastr: ToastrService,\r\n        private elRef: ElementRef,\r\n        private openViduService: OpenviduService,\r\n        private subject: SubjectService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private videoService: VideoService,\r\n        private chatService: ChatService,\r\n        public router: Router,\r\n        private route: ActivatedRoute,\r\n        private dialog: MatDialog,\r\n        public loader: LoaderService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.authUser = this.getAuthUser.transform();\r\n\r\n        this.getVideoSessionData();\r\n        if (this.sessionData && this.videoSettings) {\r\n            this.joinSession();\r\n        }\r\n\r\n\r\n        this.subject.getVideoRecordingState().subscribe(data => {\r\n\r\n            if (data.recordingState === 'finished') {\r\n                this.leaveSession();\r\n            }\r\n\r\n            if (!data.viaSocket) {\r\n                this.sendRecordingState(data.recording);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    @HostListener('window:beforeunload')\r\n    beforeunloadHandler() {\r\n        // On window closed leave session\r\n        this.leaveSession();\r\n        if (this.recordingState === 'started') {\r\n            this.removeLiveVideoByToken();\r\n        }\r\n        // return false;\r\n    }\r\n\r\n    alertOfLeaving() {\r\n        this.toastr.error('Please stop recording first');\r\n    }\r\n\r\n    getVideoSessionData() {\r\n        const savedSession = localStorage.getItem('session');\r\n        const videoSettings = localStorage.getItem('video_settings');\r\n        this.sessionData = savedSession ? JSON.parse(savedSession) : null;\r\n        this.videoSettings = videoSettings ? JSON.parse(videoSettings) : null;\r\n    }\r\n\r\n\r\n    joinSession() {\r\n        this.OV = new OpenVidu();\r\n\r\n        this.session = this.OV.initSession();\r\n        this.getStreamEvents();\r\n\r\n        this.loader.dataLoading = true;\r\n\r\n        this.openViduService.getToken({\r\n            email: this.authUser.email,\r\n            sessionName: this.sessionData.sessionName,\r\n            role: 'PUBLISHER'\r\n        }).subscribe((token: any) => {\r\n            // const {token} = data;\r\n            this.openViduToken = token;\r\n            this.receiveMessage();\r\n            this.receiveRecordingState();\r\n\r\n\r\n            // console.log(token)\r\n            // console.log({clientData: this.joinSessionForm.value.myUserName})\r\n            this.session.connect(token, {clientData: this.sessionData, avatar: this.authUser.avatar})\r\n                .then(() => {\r\n                    this.loader.dataLoading = false;\r\n                    if (token.includes('PUBLISHER')) {\r\n                        const video = this.elRef.nativeElement.querySelector('video');\r\n                        const publisher: Publisher = this.OV.initPublisher(video, {\r\n                            audioSource: undefined, // The source of audio. If undefined default microphone\r\n                            videoSource: undefined, // The source of video. If undefined default webcam\r\n                            publishAudio: true,     // Whether you want to start publishing with your audio unmuted or not\r\n                            publishVideo: true,     // Whether you want to start publishing with your video enabled or not\r\n                            resolution: '640x480',  // The resolution of your video\r\n                            frameRate: 30,          // The frame rate of your video\r\n                            insertMode: 'APPEND',   // How the video is inserted in the target element 'video-container'\r\n                            mirror: false           // Whether to mirror your local video or not\r\n                        });\r\n\r\n                        this.session.publish(publisher);\r\n\r\n                        // Set the main video in the page to display our webcam and store our Publisher\r\n                        this.mainStreamManager = publisher;\r\n                        this.publisher = publisher;\r\n                    } else {\r\n\r\n                    }\r\n                }).catch((err) => {\r\n                this.toastr.error('There was a problem white loading streaming session')\r\n                console.log(err)\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    getStreamEvents() {\r\n        this.session.on('streamCreated', (event: StreamEvent) => {\r\n\r\n            const video = this.elRef.nativeElement.querySelector('video');\r\n            this.thumbnailFile = this.videoSettings.thumbnail;\r\n            // const video = undefined;\r\n            // console.log('stream created', video)\r\n            // console.log(event.stream)\r\n\r\n            const subscriber: Subscriber = this.session.subscribe(event.stream, undefined\r\n                // {\r\n                //   insertMode: 'append'\r\n                // },\r\n                // (error) => {\r\n                //   console.log(error)\r\n                //   if (error) {\r\n                //     console.log('error: ' + error.message);\r\n                //   } else {\r\n                //     console.log('callback')\r\n                //     // this.handleScreenShare(event.stream.videoType);\r\n                //     // this.getVideo(event.stream);\r\n                //\r\n                //   }\r\n                // }\r\n            );\r\n\r\n        });\r\n\r\n        this.session.on('connectionCreated', (event: ConnectionEvent) => {\r\n            // console.log('connection created!!!')\r\n            const connection = JSON.parse(event.connection.data.replace(/}%\\/%{/g, ','));\r\n            // console.log(event.connection.data)\r\n            // this.toastr.success(from.clientData.myUserName + 'joined the session');\r\n            this.participants.push(connection.clientData.myUserName);\r\n        });\r\n\r\n        this.session.on('connectionDestroyed', (event: ConnectionEvent) => {\r\n            // console.log('connection destroyed!!!')\r\n            const connection = JSON.parse(event.connection.data.replace(/}%\\/%{/g, ','));\r\n            this.participants = this.participants.filter(p => p !== connection.clientData.myUserName);\r\n        });\r\n\r\n        // On every Stream destroyed...\r\n        this.session.on('streamDestroyed', (event: StreamEvent) => {\r\n\r\n            // console.log('stream destroyed!!!!!')\r\n            // console.log(event)\r\n\r\n            // Remove the stream from 'subscribers' array\r\n            this.deleteSubscriber(event.stream.streamManager);\r\n            this.leaveSession();\r\n        });\r\n    }\r\n\r\n    updateMainStreamManager(streamManager: StreamManager) {\r\n        this.mainStreamManager = streamManager;\r\n    }\r\n\r\n\r\n    deleteSubscriber(streamManager: StreamManager) {\r\n        console.log(this.subscribers)\r\n    }\r\n\r\n    getRecordedVideoId(id) {\r\n        this.videoId = id;\r\n    }\r\n\r\n    leaveSession() {\r\n        console.log('leaving session!!!')\r\n        if (this.session) {\r\n            this.session.disconnect();\r\n        }\r\n\r\n        // Empty all properties...\r\n        this.subscribers = [];\r\n        delete this.publisher;\r\n        delete this.session;\r\n        delete this.OV;\r\n\r\n\r\n        this.thumbnailFile = [];\r\n        this.thumbnailUploaded = false;\r\n\r\n        if (this.sessionData) {\r\n\r\n            this.openViduService.leaveSession({\r\n                token: this.openViduToken,\r\n                sessionName: this.sessionData.sessionName,\r\n                role: 'publisher'\r\n            }).subscribe(() => {\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    sendMessage(e) {\r\n        this.session.signal({\r\n            data: e.message,  // Any string (optional)\r\n            to: [],                     // Array of Connection objects (optional. Broadcast to everyone if empty)\r\n            type: 'my-chat'             // The type of message (optional)\r\n        })\r\n            .then(() => {\r\n                this.chatService.saveMessage({video_id: this.videoId, ...e}).subscribe(dt => {\r\n                    // console.log('Message successfully sent');\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    sendRecordingState(recording) {\r\n        // console.log('recording!!!!')\r\n        if (this.session) {\r\n            this.session.signal({\r\n                data: recording,  // Any string (optional)\r\n                to: [],                     // Array of Connection objects (optional. Broadcast to everyone if empty)\r\n                type: 'recording-state'             // The type of message (optional)\r\n            }).then(() => {\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    receiveRecordingState() {\r\n        this.session.on('signal:recording-state', (event: any) => {\r\n            this.recordingState = !!event.data ? 'started' : 'finished';\r\n            if (this.recordingState === 'finished') {\r\n                this.tags = [];\r\n            }\r\n\r\n            this.subject.setVideoRecordingState({recordingState: this.recordingState, ...{viaSocket: true}});\r\n        });\r\n    }\r\n\r\n    receiveMessage() {\r\n        this.session.on('signal:my-chat', (event: any) => {\r\n            // console.log(event.from)\r\n            this.subject.setMsgData({message: event.data, from: event.from.data});\r\n            // console.log(event.data); // Message\r\n            // console.log(event.from); // Connection object of the sender\r\n            // console.log(event.type); // The type of message (\"my-chat\")\r\n        });\r\n    }\r\n\r\n    removeLiveVideoByToken() {\r\n        this.videoService.removeVideoByToken({token: this.openViduToken}).subscribe(() => {\r\n        });\r\n    }\r\n\r\n    reloadPage() {\r\n        location.reload();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n        if (this.recordingState === 'started') {\r\n            this.removeLiveVideoByToken();\r\n        }\r\n\r\n        // On component destroyed leave session\r\n        this.leaveSession();\r\n    }\r\n\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n}\r\n","<mat-spinner [diameter]=\"100\" class=\"session-loader\" *ngIf=\"loader.dataLoading\"></mat-spinner>\r\n<div id=\"video-stream-container\" *ngIf=\"!loader.dataLoading\">\r\n\r\n\r\n    <!-- Shown when session connected -->\r\n    <ng-container *ngIf=\"openViduToken\">\r\n        <div id=\"video-chat-container\">\r\n\r\n            <!-- Publisher video recording interface -->\r\n            <div class=\"video-container\">\r\n                <app-video-js-record [openViduToken]=\"openViduToken\" [thumbnailFile]=\"thumbnailFile\"\r\n                                     [videoSettings]=\"videoSettings\"\r\n                                     (recordingStarted)=\"getRecordedVideoId($event)\"></app-video-js-record>\r\n            </div>\r\n\r\n            <div class=\"chat-container\">\r\n                <app-chat-box [openViduToken]=\"openViduToken\" [session]=\"session\" [videoId]=\"videoId\" *ngIf=\"videoId\"\r\n                              (sendMessage)=\"sendMessage($event)\" [videoRecordingState]=\"recordingState\"></app-chat-box>\r\n            </div>\r\n        </div>\r\n        <div id=\"participants-count\">\r\n            <i class=\"fa fa-users\"></i>{{participants.length}}\r\n            <ul>\r\n                <li *ngFor=\"let participant of participants\">{{participant}}</li>\r\n            </ul>\r\n        </div>\r\n    </ng-container>\r\n    <div class=\"no-stored-session-data\" *ngIf=\"!sessionData && !videoSettings\">\r\n        <div class=\"d-flex flex-column justify-content-center align-items-center mx-auto py-5 mt-5\">\r\n\r\n            <img src=\"../../assets/img/errorPage.svg\" alt=\"no-stored-session-data-img\" width=\"500\" height=\"370\">\r\n            <p class=\"text-center\"><b>There is no session data defined.</b> <br> Please return to the <a\r\n                routerLink=\"/user/video/start-live-video\">'Start\r\n                live video' page</a></p>\r\n        </div>\r\n    </div>\r\n    <div class=\"stream-errors\" *ngIf=\"!openViduToken && sessionData && videoSettings\">\r\n        <div class=\"d-flex flex-column justify-content-center align-items-center mx-auto py-5 mt-5\">\r\n            <img src=\"assets/img/errorLoading.svg\" alt=\"no-stored-session-data-img\" width=\"150\" height=\"200\">\r\n            <p class=\"text-center\"><b>There was a problem while loading streaming session.</b> <br>\r\n                <small>Please <a class=\"reload\" (click)=\"reloadPage()\">reload</a> the page or try again later.</small>\r\n            </p>\r\n        </div>\r\n        <div class=\"d-none\">\r\n            <div class=\"d-flex flex-column justify-content-center align-items-center mx-auto py-5 mt-5\">\r\n                <img src=\"assets/img/dataError.svg\" alt=\"stream-errors-img\" width=\"334\" height=\"471\">\r\n                <p class=\"text-center top\"><b>There was a problem while loading streaming session.</b> <br>\r\n                    <small>Please <a class=\"reload\" (click)=\"reloadPage()\">reload</a> the page or try again\r\n                        later.</small>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import {AfterViewInit, Component, ElementRef, HostListener, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {ConnectionEvent, OpenVidu, Publisher, Session, StreamEvent, StreamManager, Subscriber} from 'openvidu-browser';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {OpenviduService} from '@core/services/openvidu.service';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {LoaderService} from '@core/services/loader.service';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {ChatService} from '@core/services/chat.service';\r\nimport {ChatBoxComponent} from '@shared/components/chat-box/chat-box.component';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\n@Component({\r\n    selector: 'app-join-video-streaming',\r\n    templateUrl: './join-video-streaming.component.html',\r\n    styleUrls: ['./join-video-streaming.component.scss']\r\n})\r\nexport class JoinVideoStreamingComponent implements OnInit, OnDestroy {\r\n    recordingState = 'started';\r\n    videoId;\r\n    videoFound;\r\n\r\n    // OpenVidu objects\r\n    OV: OpenVidu;\r\n    openViduToken;\r\n    session: Session;\r\n    sessionData = {sessionName: '', myUserName: ''};\r\n    streamCreated;\r\n    streamDestroyed = false;\r\n\r\n    authUser;\r\n    participants = [];\r\n    subscribers = [];\r\n    tags = [];\r\n\r\n    mainStreamManager: StreamManager;\r\n\r\n    @ViewChild(ChatBoxComponent) chatBox: ChatBoxComponent;\r\n\r\n    constructor(\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private route: ActivatedRoute,\r\n        private openViduService: OpenviduService,\r\n        private videoService: VideoService,\r\n        private chatService: ChatService,\r\n        private subject: SubjectService,\r\n        public loader: LoaderService,\r\n        private toastr: ToastrService,\r\n        private elRef: ElementRef\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.authUser = this.getAuthUser.transform();\r\n        this.getSessionData();\r\n        this.getRecordingState();\r\n        this.joinSession();\r\n\r\n    }\r\n\r\n\r\n    @HostListener('window:beforeunload')\r\n    beforeunloadHandler() {\r\n        // On window closed leave session\r\n        this.leaveSession();\r\n    }\r\n\r\n    getRecordingState() {\r\n        this.subject.getVideoRecordingState().subscribe(data => {\r\n            // console.log(data)\r\n            if (data.recordingState === 'finished') {\r\n                this.leaveSession();\r\n            }\r\n\r\n            if (!data.viaSocket) {\r\n                // this.sendRecordingState(data.recording);\r\n            }\r\n        });\r\n    }\r\n\r\n    getSessionData() {\r\n        const params: any = this.route.snapshot.queryParams;\r\n        if (params && params.hasOwnProperty('session')) {\r\n            this.sessionData.sessionName = params.session;\r\n            this.sessionData.myUserName = this.authUser.username;\r\n            this.recordingState = 'started';\r\n            this.videoId = params.id;\r\n            this.videoService.getVideoById({id: this.videoId}).subscribe(dt => {\r\n                this.videoFound = dt?.status === 'live';\r\n                // console.log(this.videoFound)\r\n            });\r\n        }\r\n    }\r\n\r\n    joinSession() {\r\n        this.OV = new OpenVidu();\r\n\r\n        this.session = this.OV.initSession();\r\n        this.loader.dataLoading = true;\r\n        this.getStreamEvents();\r\n\r\n        // console.log(this.session)\r\n\r\n        this.openViduService.getToken({\r\n            email: this.authUser.email,\r\n            sessionName: this.sessionData.sessionName,\r\n            role: 'SUBSCRIBER'\r\n        }).subscribe((token: any) => {\r\n            // const {token} = data;\r\n            this.openViduToken = token;\r\n            this.receiveMessage();\r\n            this.recordingState = 'started';\r\n            this.receiveRecordingState();\r\n\r\n\r\n            // console.log(token)\r\n            // console.log({...this.sessionData, avatar: this.authUser.avatar})\r\n            this.session.connect(token, {clientData: this.sessionData, avatar: this.authUser.avatar})\r\n                .then(() => {\r\n                    this.loader.dataLoading = false;\r\n                }).catch((err) => {\r\n                this.toastr.error('There was a problem white loading streaming session')\r\n                // console.log(err)\r\n            });\r\n            ;\r\n\r\n        });\r\n\r\n    }\r\n\r\n    getStreamEvents() {\r\n        this.session.on('streamCreated', (event: StreamEvent) => {\r\n            this.streamCreated = true;\r\n            const video = this.elRef.nativeElement.querySelector('video');\r\n            // const video = undefined;\r\n            // this.streamCreated = true;\r\n            // console.log('stream created', video);\r\n            // console.log(event.stream);\r\n\r\n            const subscriber: Subscriber = this.session.subscribe(event.stream, undefined);\r\n            this.subscribers.push(subscriber);\r\n            // console.log(this.subscribers)\r\n        });\r\n\r\n        this.session.on('connectionCreated', (event: ConnectionEvent) => {\r\n            // console.log('connection created!!!');\r\n            const connection = JSON.parse(event.connection.data.replace(/}%\\/%{/g, ','));\r\n            // console.log(event.connection.data);\r\n            // console.log('RECORDING STATE' + this.recordingState)\r\n            // this.toastr.success(from.clientData.myUserName + 'joined the session');\r\n            this.participants.push(connection.clientData.myUserName);\r\n        });\r\n\r\n        this.session.on('connectionDestroyed', (event: ConnectionEvent) => {\r\n            // console.log('connection destroyed!!!');\r\n            const connection = JSON.parse(event.connection.data.replace(/}%\\/%{/g, ','));\r\n            this.participants = this.participants.filter(p => p !== connection.clientData.myUserName);\r\n        });\r\n\r\n        // On every Stream destroyed...\r\n        this.session.on('streamDestroyed', (event: StreamEvent) => {\r\n\r\n            // console.log('stream destroyed!!!!!');\r\n            // console.log(event);\r\n\r\n            this.streamDestroyed = true;\r\n            this.openViduToken = null;\r\n\r\n            // Remove the stream from 'subscribers' array\r\n            // this.deleteSubscriber(event.stream.streamManager);\r\n            this.leaveSession();\r\n        });\r\n    }\r\n\r\n\r\n    receiveRecordingState() {\r\n        // console.log('receive recording!!!!')\r\n        this.session.on('signal:recording-state', (event: any) => {\r\n            const obj = {event, ...{socket: true}};\r\n            this.recordingState = !!event.data ? 'started' : 'finished';\r\n            if (this.recordingState === 'finished') {\r\n                this.tags = [];\r\n            }\r\n\r\n            // console.log(obj);\r\n            // console.log(this.recordingState);\r\n            // console.log('received');\r\n            this.subject.setVideoRecordingState({recordingState: this.recordingState, ...{viaSocket: true}});\r\n        });\r\n    }\r\n\r\n    receiveMessage() {\r\n        this.session.on('signal:my-chat', (event: any) => {\r\n            this.subject.setMsgData({message: event.data, from: event.from.data});\r\n            // console.log(event.data); // Message\r\n            // console.log(event.from); // Connection object of the sender\r\n            // console.log(event.type); // The type of message (\"my-chat\")\r\n        });\r\n    }\r\n\r\n    sendMessage(e) {\r\n        this.session.signal({\r\n            data: e.message,  // Any string (optional)\r\n            to: [],                     // Array of Connection objects (optional. Broadcast to everyone if empty)\r\n            type: 'my-chat'             // The type of message (optional)\r\n        })\r\n            .then(() => {\r\n                this.chatService.saveMessage({video_id: this.videoId, ...e}).subscribe(dt => {\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n\r\n    updateMainStreamManager(streamManager: StreamManager) {\r\n        this.mainStreamManager = streamManager;\r\n    }\r\n\r\n    leaveSession() {\r\n        if (this.session) {\r\n            this.session.disconnect();\r\n        }\r\n\r\n        if (this.sessionData) {\r\n\r\n            this.openViduService.leaveSession({\r\n                token: this.openViduToken,\r\n                sessionName: this.sessionData.sessionName,\r\n                role: 'subscriber'\r\n            }).subscribe(() => {\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        // On component destroyed leave session\r\n        this.leaveSession();\r\n    }\r\n\r\n\r\n}\r\n","<div id=\"video-chat-container\" *ngIf=\"openViduToken && videoFound\">\r\n\r\n    <mat-spinner [diameter]=\"100\" class=\"session-loader\" *ngIf=\"loader.dataLoading\"></mat-spinner>\r\n\r\n    <!-- Streaming started -->\r\n    <ng-container *ngIf=\"streamCreated\">\r\n        <div *ngFor=\"let sub of subscribers\" class=\"stream-container col-md-6 col-xs-6\">\r\n            <div class=\"video-container\">\r\n                <app-user-video [streamManager]=\"sub\" (click)=\"updateMainStreamManager(sub)\"></app-user-video>\r\n            </div>\r\n        </div>\r\n        <app-chat-box *ngIf=\"videoId\" [openViduToken]=\"openViduToken\" [session]=\"session\"\r\n                      [videoRecordingState]=\"recordingState\"\r\n                      [videoId]=\"videoId\" (sendMessage)=\"sendMessage($event)\"></app-chat-box>\r\n    </ng-container>\r\n</div>\r\n\r\n<p *ngIf=\"!videoFound && !loader.dataLoading\">Video streaming session is not found.</p>\r\n<ng-container *ngIf=\"streamCreated && openViduToken && videoFound\">\r\n    <i class=\"fa fa-users\"></i>{{participants.length}}\r\n    <ul>\r\n        <li *ngFor=\"let participant of participants\">{{participant}}</li>\r\n    </ul>\r\n    <p *ngIf=\"streamDestroyed\">Stream destroyed.</p>\r\n</ng-container>\r\n<ng-container *ngIf=\"!openViduToken && !loader.dataLoading && videoFound\">\r\n    <p>The session does not exist.</p>\r\n</ng-container>\r\n<ng-container *ngIf=\"!streamCreated && !loader.dataLoading && videoFound\">\r\n    <p>There was a problem creating the video stream.</p>\r\n</ng-container>\r\n\r\n\r\n","import {AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {StreamManager} from 'openvidu-browser';\r\nimport videojs from 'video.js';\r\nimport {SubjectService} from '@core/services/subject.service';\r\n\r\n@Component({\r\n    selector: 'app-ov-video',\r\n    templateUrl: './ov-video.component.html',\r\n    styleUrls: ['./ov-video.component.scss']\r\n})\r\nexport class OvVideoComponent implements OnInit, AfterViewInit {\r\n    videoJSPlayerOptions = {\r\n        width: 640,\r\n        height: 480,\r\n        autoplay: true,\r\n        controls: true,\r\n        fluid: false,\r\n        sources: []\r\n    };\r\n\r\n    @ViewChild('videoElement') elementRef: ElementRef;\r\n\r\n    _streamManager: StreamManager;\r\n    player: videojs.Player;\r\n    recordingState;\r\n\r\n    constructor(\r\n        private subject: SubjectService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.subject.getVideoRecordingState().subscribe(data => {\r\n            console.log('STATE!!!!' + data.recordingState);\r\n            this.recordingState = data.recordingState;\r\n            if (this.recordingState === 'finished') {\r\n                let video = document.getElementById('live-video') as any;\r\n\r\n                // video = document.getElementsByClassName('video-js') as any;\r\n                console.log(video)\r\n                // video.pause();\r\n                // video.currentTime = 0;\r\n                // video.controls = false;\r\n                // console.log(this.player)\r\n                // this.player.pause();\r\n                // this.player.src('');\r\n                // this.player.reset();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this._streamManager.addVideoElement(this.elementRef.nativeElement);\r\n        // this.player = videojs(this.elementRef.nativeElement, this.videoJSPlayerOptions, function onPlayerReady() {\r\n        //   console.log('onPlayerReady', this);\r\n        // });\r\n        const video = document.getElementById('live-video') as any;\r\n        console.log(video)\r\n        video.setAttribute('controls', 'controls');\r\n        video.controls = true;\r\n    }\r\n\r\n    @Input()\r\n    set streamManager(streamManager: StreamManager) {\r\n        this._streamManager = streamManager;\r\n        if (!!this.elementRef) {\r\n            this._streamManager.addVideoElement(this.elementRef.nativeElement);\r\n        }\r\n    }\r\n\r\n}\r\n","<video #videoElement controls muted id=\"live-video\" width=\"640\" height=\"480\"></video>\r\n<!--<video #videoElement class=\"video-js\" controls muted playsinline preload=\"none\"></video>-->\r\n<div id=\"live-session-finished\" *ngIf=\"recordingState === 'finished'\">\r\n  <h2>Live video ended</h2>\r\n</div>\r\n\r\n<!--<app-vjs-player [options]=\"videoJSPlayerOptions\" #videoElement></app-vjs-player>-->\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-subscriber-flow',\r\n  templateUrl: './subscriber-flow.component.html',\r\n  styleUrls: ['./subscriber-flow.component.scss']\r\n})\r\nexport class SubscriberFlowComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-join-video-streaming></app-join-video-streaming>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {StreamManager} from 'openvidu-browser';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-user-video',\r\n  templateUrl: './user-video.component.html',\r\n  styleUrls: ['./user-video.component.scss']\r\n})\r\nexport class UserVideoComponent implements OnInit {\r\n\r\n\r\n  @Input() streamManager: StreamManager;\r\n\r\n  constructor(\r\n    private toastr: ToastrService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getNicknameTag() { // Gets the nickName of the user\r\n    const from = JSON.parse(this.streamManager.stream.connection.data.replace(/}%\\/%{/g, ','));\r\n    // this.toastr.success(from.clientData.myUserName + 'joined the session');\r\n    // console.log(from)\r\n    return from.clientData.myUserName;\r\n    // console.log(this.streamManager.stream.connection.data)\r\n    // const streamData = JSON.parse(this.streamManager.stream.connection.data);\r\n  }\r\n\r\n}\r\n","<div>\r\n  <app-ov-video [streamManager]=\"streamManager\"></app-ov-video>\r\n  <div><p>{{getNicknameTag()}}</p></div>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {VideoComponent} from '@app/user/publisher-flow/video/video.component';\r\nimport {VideoLibraryComponent} from '@app/user/openvidu-test/video-library/video-library.component';\r\nimport {AccessibilityStatementComponent} from '@core/components/ungrouped/accessibility-statement/accessibility-statement.component';\r\nimport {CookiePolicyComponent} from '@core/components/ungrouped/cookie-policy/cookie-policy.component';\r\nimport {HelpComponent} from '@core/components/ungrouped/help/help.component';\r\nimport {AboutComponent} from '@core/components/ungrouped/about/about.component';\r\nimport {PublisherFlowComponent} from '@app/user/publisher-flow/publisher-flow.component';\r\nimport {SubscriberFlowComponent} from '@app/user/subscriber-flow/subscriber-flow.component';\r\nimport {DoNotLeavePageGuard} from '@core/guards/do-not-leave-page.guard';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'about',\r\n        component: AboutComponent,\r\n        data: {\r\n            title: 'About',\r\n        }\r\n    },\r\n    {\r\n        path: 'help',\r\n        component: HelpComponent,\r\n        data: {\r\n            title: 'Help',\r\n        }\r\n    },\r\n    {\r\n        path: 'cookie-policy',\r\n        component: CookiePolicyComponent,\r\n        data: {\r\n            title: 'Cookie policy',\r\n        }\r\n    },\r\n    {\r\n        path: 'accessibility-statement',\r\n        component: AccessibilityStatementComponent,\r\n        data: {\r\n            title: 'Accessibility statement',\r\n        }\r\n    },\r\n    {\r\n        path: 'profile',\r\n        component: ProfileComponent,\r\n        data: {\r\n            title: 'User profile',\r\n        }\r\n    },\r\n    {\r\n        path: 'video/check-streaming-requirements',\r\n        component: PublisherFlowComponent,\r\n        data: {\r\n            title: 'Streaming requirements check',\r\n        }\r\n    },\r\n    {\r\n        path: 'video/start-live-video',\r\n        component: PublisherFlowComponent,\r\n        data: {\r\n            title: 'Devices and requirements check',\r\n        }\r\n    },\r\n    {\r\n        path: 'video/publish',\r\n        component: VideoComponent,\r\n        canDeactivate: [DoNotLeavePageGuard],\r\n        data: {\r\n            title: 'Start live streaming',\r\n        }\r\n    },\r\n    {\r\n        path: 'video/watch',\r\n        component: SubscriberFlowComponent,\r\n        data: {\r\n            title: 'Watch live stream',\r\n        }\r\n    },\r\n    {\r\n        path: 'video-library',\r\n        component: VideoLibraryComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {UserRoutingModule} from './user-routing.module';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {SharedModule} from '@shared/shared.module';\r\nimport {NgxPhotoEditorModule} from 'ngx-photo-editor';\r\nimport {VideoComponent} from '@app/user/publisher-flow/video/video.component';\r\nimport {PublisherComponent} from './openvidu-test/publisher/publisher.component';\r\nimport {SubscriberComponent} from './openvidu-test/subscriber/subscriber.component';\r\nimport {UserVideoComponent} from './subscriber-flow/user-video/user-video.component';\r\nimport {OvVideoComponent} from './subscriber-flow/ov-video/ov-video.component';\r\nimport {VideoLibraryComponent} from './openvidu-test/video-library/video-library.component';\r\nimport {OpenviduSessionModule} from 'openvidu-angular';\r\nimport {JoinStreamingFormComponent} from './openvidu-test/join-streaming-form/join-streaming-form.component';\r\nimport {HomeComponent} from '@app/user/home/home.component';\r\nimport {CheckStreamingRequirementsComponent} from './publisher-flow/check-streaming-requirements/check-streaming-requirements.component';\r\nimport {PublisherFlowComponent} from './publisher-flow/publisher-flow.component';\r\nimport {SubscriberFlowComponent} from './subscriber-flow/subscriber-flow.component';\r\nimport {CollectStreamingDetailsFormComponent} from './publisher-flow/collect-streaming-details-form/collect-streaming-details-form.component';\r\nimport {JoinVideoStreamingComponent} from './subscriber-flow/join-video-streaming/join-video-streaming.component';\r\nimport {BsDatepickerModule} from 'ngx-bootstrap/datepicker';\r\nimport {DROPZONE_CONFIG, DropzoneConfigInterface, DropzoneModule} from 'ngx-dropzone-wrapper';\r\nimport {NgxChartsModule} from '@swimlane/ngx-charts';\r\n\r\nconst DEFAULT_DROPZONE_CONFIG: DropzoneConfigInterface = {\r\n    url: '{no_url}',\r\n    maxFilesize: 50,\r\n    maxFiles: 1,\r\n    acceptedFiles: 'image/*',\r\n    autoProcessQueue: false,\r\n    addRemoveLinks: true\r\n};\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ProfileComponent,\r\n        VideoComponent,\r\n        PublisherComponent,\r\n        SubscriberComponent,\r\n        UserVideoComponent,\r\n        OvVideoComponent,\r\n        HomeComponent,\r\n        VideoLibraryComponent,\r\n        JoinStreamingFormComponent,\r\n        CheckStreamingRequirementsComponent,\r\n        PublisherFlowComponent,\r\n        SubscriberFlowComponent,\r\n        CollectStreamingDetailsFormComponent,\r\n        JoinVideoStreamingComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        UserRoutingModule,\r\n        OpenviduSessionModule,\r\n        NgxPhotoEditorModule,\r\n        BsDatepickerModule.forRoot(),\r\n        DropzoneModule,\r\n        SharedModule\r\n    ],\r\n    providers: [\r\n        {\r\n            provide: DROPZONE_CONFIG,\r\n            useValue: DEFAULT_DROPZONE_CONFIG\r\n        }\r\n    ],\r\n    exports: []\r\n})\r\nexport class UserModule {\r\n}\r\n","export const environment = {\r\n    apiUrl: 'https://staging.metl.tv/',\r\n    envName: 'staging',\r\n    production: false\r\n};\r\n\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}