{"version":3,"sources":["webpack:///src/app/core/components/modals/social-share-dialog/social-share-dialog.component.ts","webpack:///src/app/core/components/modals/social-share-dialog/social-share-dialog.component.html","webpack:///src/app/shared/components/posts/post-item/post-item.component.ts","webpack:///src/app/shared/components/posts/post-item/post-item.component.html","webpack:///src/app/core/components/modals/upload-file/upload-file.component.ts","webpack:///src/app/core/components/modals/upload-file/upload-file.component.html","webpack:///src/app/shared/components/posts/post-form-placeholder/post-form-placeholder.component.ts","webpack:///src/app/shared/components/posts/post-form-placeholder/post-form-placeholder.component.html"],"names":["SocialShareDialogComponent","data","dialog","toastr","this","shareUrl","encodeURIComponent","inputElement","closeAll","select","document","execCommand","setSelectionRange","success","copyInputMessage","PostItemComponent","postsService","userStore","postsStore","router","route","accessedFromGroup","vote","deletePosts","API_URL","commentsField","snapshot","params","id","authUser","allPosts$","subscribe","allPosts","posts","open","width","height","window","location","href","afterClosed","dt","post","isPostVotedByAuthUser","selectedPost","emit","post_id","user_id","user_posts","find","up","usersPosts","users_posts","voted","push","e","console","log","setEditePost","cover_img","maxWidth","maxHeight","countUploadFile","navigate","UploadFileComponent","dialogRef","postsServices","uploadFile","title","showUploadImg","percentProgressBar","fileName","typeFile","files","showProgressBar","apiURL","type","obj","name","src","includes","event","i","fl","target","index","file","duration","close","audio","Audio","reader","FileReader","onload","result","toString","length","ArrayBuffer","addEventListener","progressPercent","readAsDataURL","srcImg","Number","loaded","total","toFixed","group_id","description","fd","FormData","forEach","elem","append","path","editPosts","filter","closedModal","saveFile","PostFormPlaceholderComponent","fb","_userInfoService","videoUploadSpinner","finishVideoUpload","videoName","_getAuthInfo","_userInfo","res","postForm","group","username","author_id","votes","add","value","setAllPosts","reset","addPhotoVideoPosts","uploadDialog"],"mappings":"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","file":"x","sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialog} from '@angular/material/dialog';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\n@Component({\r\n    selector: 'app-social-share-dialog',\r\n    templateUrl: './social-share-dialog.component.html',\r\n    styleUrls: ['./social-share-dialog.component.scss']\r\n})\r\nexport class SocialShareDialogComponent implements OnInit {\r\n    shareUrl;\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private dialog: MatDialog,\r\n        private toastr: ToastrService,\r\n    ) {\r\n        this.shareUrl = data.shareUrl;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    getTweeterLink() {\r\n        return 'https://twitter.com/intent/tweet?text=' + this.shareUrl;\r\n    }\r\n\r\n    getFacebookLink() {\r\n        return 'https://www.facebook.com/sharer/sharer.php?href=' + encodeURIComponent(this.shareUrl);\r\n    }\r\n\r\n    copyInputMessage(inputElement){\r\n        this.dialog.closeAll();\r\n        inputElement.select();\r\n        document.execCommand('copy');\r\n        inputElement.setSelectionRange(0, 0);\r\n        this.toastr.success('Captioned');\r\n    }\r\n\r\n}\r\n","<div class=\"modalDiv\">\r\n    <p class=\"shareLink\" >Share this link via</p>\r\n    <div class=\"linkImages\">\r\n        <a  target=\"_blank\" [href]=\"getTweeterLink()\">\r\n            <img class=\"twitterImg\" src=\"assets/img/twitter.svg\" alt=\"\">\r\n        </a>\r\n        <a  [href]=\"getFacebookLink()\"\r\n           onclick=\"javascript:window.open(this.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=300,width=600');return false;\"\r\n           target=\"_blank\" title=\"Share on Facebook\">\r\n            <img class=\"facebookImg\" src=\"assets/img/facebook.svg\" alt=\"\">\r\n        </a>\r\n    </div>\r\n    <div class=\"copyingDiv\">\r\n        <input id=\"link-address-holder\" [value]=\"shareUrl\" #urlHolder>\r\n        <p class=\"copyLink\" (click)=\"copyInputMessage(urlHolder)\">Or copy link</p>\r\n    </div>\r\n    <button class=\"copy-url\" (click)=\"copyInputMessage(urlHolder)\">Copy</button>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport {Post} from '@shared/models/post';\r\nimport {PostsService} from '@core/services/posts.service';\r\nimport {UserStoreService} from '@core/services/stores/user-store.service';\r\nimport { SocialShareDialogComponent } from '@core/components/modals/social-share-dialog/social-share-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PostsStoreService } from '@core/services/stores/posts-store.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {API_URL} from '@core/constants/global';\r\nimport { UploadFileComponent } from '@core/components/modals/upload-file/upload-file.component';\r\n\r\n@Component({\r\n    selector: 'app-post-item',\r\n    templateUrl: './post-item.component.html',\r\n    styleUrls: ['./post-item.component.scss']\r\n})\r\nexport class PostItemComponent implements OnInit, OnDestroy {\r\n    @Input() post: Post;\r\n    @Input() group;\r\n    @Input() accessedFromGroup = false;\r\n    @Output() vote = new EventEmitter();\r\n    @Output() deletePosts = new EventEmitter();\r\n\r\n    selectedPost: Post;\r\n    authUser;\r\n    allPosts;\r\n    totalCount;\r\n    API_URL = API_URL;\r\n    commentsField;\r\n\r\n    constructor(\r\n        private postsService: PostsService,\r\n        private userStore: UserStoreService,\r\n        private dialog: MatDialog,\r\n        private postsStore: PostsStoreService,\r\n        public router: Router,\r\n        private route: ActivatedRoute\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.commentsField = !!this.route.snapshot?.params?.id;\r\n        // console.log(this.route.snapshot?.params?.id);\r\n        this.authUser = this.userStore.authUser;\r\n        this.postsStore.allPosts$.subscribe((data: any) => {\r\n            this.allPosts = data.posts;\r\n        });\r\n    }\r\n    openSocialShareModal() {\r\n        this.dialog.open(SocialShareDialogComponent, {\r\n            width: '500px',\r\n            height: '400px',\r\n            data: {shareUrl: window.location.href}\r\n        })\r\n            .afterClosed().subscribe(dt => {\r\n        });\r\n    }\r\n\r\n    voteForPost(vote, post) {\r\n        if (!this.isPostVotedByAuthUser(vote)) {\r\n            this.selectedPost = post;\r\n            this.vote.emit({\r\n                post_id: this.post.id,\r\n                user_id: this.authUser.id,\r\n                post,\r\n                vote\r\n            });\r\n        }\r\n    }\r\n\r\n    isPostVotedByAuthUser(vote) {\r\n        return !!this.post?.user_posts?.find(up => {\r\n            const usersPosts = up.users_posts;\r\n            return usersPosts.voted === vote &&\r\n                usersPosts.user_id === this.authUser.id;\r\n        });\r\n    }\r\n\r\n    deletePost(post) {\r\n        const id = [];\r\n        id.push(post.id);\r\n        this.postsService.delete(id).subscribe((e) => {\r\n            this.deletePosts.emit();\r\n        });\r\n    }\r\n\r\n    editPost(post) {\r\n        console.log(post);\r\n        this.postsStore.setEditePost(post);\r\n        if (post.cover_img) {\r\n            this.dialog.open(UploadFileComponent, {\r\n                maxWidth: '591px',\r\n                maxHeight: '479px',\r\n                height: '100%',\r\n                width: '100%',\r\n                data: {\r\n                    countUploadFile: 'oneFile',\r\n                    post\r\n                }\r\n            }).afterClosed().subscribe(dt => {\r\n                console.log(dt);\r\n            });\r\n        } else {\r\n            this.router.navigate(['/posts/create']);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n    }\r\n\r\n}\r\n","<div class=\"post-item\" *ngIf=\"post\">\r\n    <div class=\"posted\">\r\n        <p>\r\n            Posted by <span [routerLink]=\"'/users/'+post.post_author.username\"\r\n                            class=\"author-username\">{{post.post_author.username}}</span>\r\n            <ng-container *ngIf=\"!accessedFromGroup && post.post_group as group\">\r\n                <i class=\"fas fa-arrow-right group-pointer\"></i>\r\n                <span class=\"post-group-name\" [routerLink]=\"'/groups/'+group.custom_name+'/about'\">{{group.name}}</span>\r\n            </ng-container>\r\n        </p>\r\n        <p>{{ post.views + ' views ' }}{{ post.created_at| dateFromNow }}</p>\r\n    </div>\r\n\r\n    <div class=\"info\">\r\n        <div class=\"left-wrap\">\r\n            <div class=\"voting-container\">\r\n                <button class=\"vote-up-btn\" [class.active]=\"isPostVotedByAuthUser(1)\" (click)=\"voteForPost(1, post)\" [disabled]=\"\">\r\n                    <span class=\"material-icons\">forward</span>\r\n                </button>\r\n                <div class=\"vote-count\">{{post.votes}}</div>\r\n                <button class=\"vote-down-btn\" [class.active]=\"isPostVotedByAuthUser(-1)\" (click)=\"voteForPost(-1, post)\">\r\n                    <span class=\"material-icons\">forward</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"right-wrap\">\r\n            <div [innerHTML]=\"post.description\" [routerLink]=\"'/posts/'+post.id\"></div>\r\n\r\n            <img *ngIf=\"post?.cover_img?.includes('image')\" class=\"post-cover\" [routerLink]=\"'/posts/'+post.id\" [src]=\"post.cover_img|getImgPath: 'images'\">\r\n            <video *ngIf=\"post?.cover_img?.includes('video')\" [routerLink]=\"'/posts/'+post.id\" [src]=\"post.cover_img|getImgPath: 'videos'\" controls ></video>\r\n<!--            <video src=\"https://metl.tv/uploads/videos/video_1652789198844.mp4\" controls ></video>-->\r\n\r\n            <div class=\"post-menu\">\r\n                <div class=\"menu\">\r\n                        <a *ngIf=\"commentsField\"><span class=\"material-icons\">chat_bubble</span>Comments</a>\r\n                        <a (click)=\"openSocialShareModal()\"><span class=\"material-icons\">share</span>Share</a>\r\n                </div>\r\n                <div class=\"dotes\" *ngIf=\"authUser.id === post.author_id\">\r\n\r\n                    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n                        <i class=\"material-icons\">more_vert</i>\r\n                    </button>\r\n                    <mat-menu #menu=\"matMenu\">\r\n                        <button mat-menu-item (click)=\"editPost(post)\">\r\n                            <mat-icon>edit</mat-icon>\r\n                            <span>Edit</span>\r\n                        </button>\r\n                        <button mat-menu-item (click)=\"deletePost(post)\">\r\n                            <mat-icon>delete</mat-icon>\r\n                            <span>Delete</span>\r\n                        </button>\r\n                    </mat-menu>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { API_URL } from '@core/constants/global';\r\nimport { PostsService } from '@core/services/posts.service';\r\nimport { VideoService } from '@core/services/video.service';\r\n\r\n@Component({\r\n  selector: 'app-upload-file',\r\n  templateUrl: './upload-file.component.html',\r\n  styleUrls: ['./upload-file.component.scss']\r\n})\r\nexport class UploadFileComponent implements OnInit {\r\n\r\n    title = 'Upload File';\r\n\r\n    srcImg;\r\n    showUploadImg = false;\r\n    percentProgressBar = 0;\r\n    fileName = [];\r\n    typeFile = [];\r\n    countUploadFile;\r\n    files = [];\r\n    type;\r\n    showProgressBar = true;\r\n    apiURL = API_URL;\r\n\r\n  constructor(\r\n      public dialogRef: MatDialogRef<UploadFileComponent>,\r\n      @Inject(MAT_DIALOG_DATA) public data: any,\r\n      private postsServices: PostsService,\r\n      private uploadFile: VideoService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n      console.log(this.data);\r\n      this.type = this.data.type;\r\n      this.countUploadFile = this.data.countUploadFile;\r\n      console.log(this.type);\r\n      console.log(this.countUploadFile);\r\n      if (this.data.post) {\r\n          this.title = 'Edit Post';\r\n          this.showProgressBar = false;\r\n          const post = this.data.post;\r\n          const obj = {\r\n              name: post.cover_img,\r\n              type: '',\r\n              src: ''\r\n          };\r\n          if (post.cover_img.includes('image')) {\r\n              obj.type = 'image';\r\n              obj.src = this.apiURL + 'uploads/' + obj.type + 's/' + post.cover_img;\r\n          }\r\n          if (post.cover_img.includes('video')) {\r\n              obj.type = 'video';\r\n              obj.src = this.apiURL + 'uploads/' + obj.type + 's/' + post.cover_img;\r\n          }\r\n          this.files.push(obj);\r\n          this.showUploadImg = true;\r\n          console.log(this.files);\r\n      }\r\n  }\r\n\r\n\r\n    videoUpload(event): any {\r\n        this.showProgressBar = true;\r\n        this.files = [];\r\n        this.percentProgressBar = 0;\r\n        this.showUploadImg = true;\r\n        for (let i = 0; i < event.target.files.length; i++) {\r\n            const fl = event.target.files[i];\r\n            const obj = {\r\n                index: i,\r\n                file: fl,\r\n                name: fl.name,\r\n                type: fl.type,\r\n                src: '',\r\n                duration: null\r\n            };\r\n            this.fileName.push(fl.name);\r\n            this.typeFile.push(fl.type);\r\n            this.files.push(obj);\r\n            if (fl.type.includes('video')) {\r\n                if (this.type === 'image') {\r\n                    this.dialogRef.close('Upload images');\r\n                }\r\n                // tslint:disable-next-line:prefer-for-of\r\n                const audio = new Audio();\r\n                const reader = new FileReader();\r\n                reader.onload = (e) => {\r\n                    const data = e.target.result.toString().length;\r\n                    const bytes = new ArrayBuffer(data);\r\n                    audio.src = e.target.result.toString();\r\n                    audio.addEventListener('loadedmetadata', () => {\r\n                        console.log(audio.duration);\r\n                        this.files[i].duration = audio.duration;\r\n                        // @ts-ignore\r\n                        // this.fd.append('video', obj);\r\n                    }, false);\r\n                    this.progressPercent(e);\r\n                };\r\n                reader.readAsDataURL(fl);\r\n            }\r\n            console.log(fl.type.includes('image'));\r\n            if (fl.type.includes('image')) {\r\n                const reader = new FileReader();\r\n                reader.onload = (e) => {\r\n                    this.srcImg = e.target.result.toString();\r\n                    this.files[i].src = e.target.result.toString();\r\n                    // @ts-ignore\r\n                    // this.fd.append('image', obj);\r\n                    this.progressPercent(e);\r\n                };\r\n                reader.readAsDataURL(fl);\r\n            }\r\n        }\r\n        console.log(this.files);\r\n    }\r\n\r\n    progressPercent(e) {\r\n        const loaded = e.loaded;\r\n        const total = e.total;\r\n        this.percentProgressBar = Number(((loaded / total) * 100).toFixed());\r\n    }\r\n\r\n    saveFile() {\r\n        if (this.data.post) {\r\n            if (this.files[0]?.file === undefined) {\r\n                return this.dialogRef.close('not edit');\r\n            }\r\n            console.log(this.files);\r\n            console.log(this.data.post);\r\n            const obj = {\r\n                id: this.data.post.id,\r\n                group_id: this.data.post.group_id,\r\n                description: this.data.post.description,\r\n                cover_img: this.data.post.cover_img\r\n            };\r\n            const fd = new FormData();\r\n            let type = '';\r\n            this.files.forEach((elem) => {\r\n                if (elem.type.includes('image')) {\r\n                    fd.append('image', elem.file);\r\n                    type = 'image';\r\n                }\r\n                if (elem.type.includes('video')) {\r\n                    fd.append('video', elem.file);\r\n                    type = 'video';\r\n                }\r\n                fd.append('belonging', 'post_img');\r\n                fd.append('duration', elem.duration);\r\n            });\r\n            this.uploadFile.uploadFile(fd, type).subscribe((dt) => {\r\n                console.log(dt);\r\n                obj.cover_img = dt.path;\r\n                this.postsServices.editPosts(obj).subscribe((data) => {\r\n                    console.log(data);\r\n                });\r\n            });\r\n            return this.dialogRef.close();\r\n        }\r\n        this.dialogRef.close(this.files);\r\n    }\r\n\r\n    canselFile(file, i) {\r\n        this.files = this.files.filter((elem) => elem.index !== this.files[i].index);\r\n        console.log(this.files);\r\n    }\r\n\r\n    closedModal() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n}\r\n","<div class=\"uploadModal\">\r\n    <div class=\"header\">\r\n        <h1>{{title}}</h1>\r\n        <mat-icon class=\"iconClosedModal\" (click)=\"closedModal()\">close</mat-icon>\r\n    </div>\r\n    <div *ngIf=\"(countUploadFile === 'oneFile')\" class=\"inputFile\">\r\n        <button class=\"buttonUpload\" (click)=\"uploadFile.click()\">\r\n            <mat-icon>save_alt</mat-icon>\r\n            <span>Upload</span>\r\n        </button>\r\n        <input type=\"file\" hidden #uploadFile (change)=\"videoUpload($event)\">\r\n    </div>\r\n    <div *ngIf=\"!(countUploadFile === 'oneFile')\" class=\"inputFile\">\r\n        <button class=\"buttonUpload\" (click)=\"uploadFile.click()\">\r\n            <mat-icon>save_alt</mat-icon>\r\n            <span>Upload</span>\r\n        </button>\r\n        <input type=\"file\" hidden multiple #uploadFile (change)=\"videoUpload($event)\">\r\n    </div>\r\n    <div *ngFor=\"let file of files; let i = index\">\r\n        <div *ngIf=\"showUploadImg\" class=\"progressFile\">\r\n            <div class=\"imgAndName\">\r\n                <div class=\"img\">\r\n                    <mat-icon *ngIf=\"file.type.includes('video')\">movie</mat-icon>\r\n                    <img *ngIf=\"file.type.includes('image')\" [src]=\"file.src\" alt=\"\">\r\n                </div>\r\n                <div class=\"name\">{{file.name}}</div>\r\n            </div>\r\n            <div class=\"progressBar\" *ngIf=\"showProgressBar\">\r\n                {{percentProgressBar}}%<mat-progress-bar class=\"matProgressBar\" mode=\"determinate\" [value]=\"percentProgressBar\"></mat-progress-bar>\r\n            </div>\r\n            <div class=\"cancel\" *ngIf=\"showProgressBar\">\r\n                <a>Cancel</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"uploadedFile\">\r\n        <div class=\"headUploaded\">Uploaded Files</div>\r\n        <div *ngFor=\"let file of files; let i=index\">\r\n            <div *ngIf=\"percentProgressBar === 100 || showUploadImg\" class=\"listUploaded\">\r\n                <div class=\"uploadedFileIconName\">\r\n                    <div class=\"icon\">\r\n                        <mat-icon *ngIf=\"file.type.includes('video')\">movie</mat-icon>\r\n                        <img *ngIf=\"file.type.includes('image')\" [src]=\"file.src\" alt=\"\">\r\n                    </div>\r\n                    <div class=\"uploadedFileName\">{{file.name}}</div>\r\n                </div>\r\n                <div class=\"closedUploadedFile\"  (click)=\"canselFile(file, i)\">\r\n                    <mat-icon>close</mat-icon>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"button\">\r\n        <button class=\"canselButton\" (click)=\"closedModal()\">Cancel</button>\r\n        <button class=\"saveButton\" (click)=\"saveFile()\">Save</button>\r\n    </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {UserStoreService} from '@core/services/stores/user-store.service';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {PostsService} from '@core/services/posts.service';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {PostsStoreService} from '@core/services/stores/posts-store.service';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {UploadFileComponent} from '@core/components/modals/upload-file/upload-file.component';\r\nimport {CurrentUserData} from '@core/interfaces';\r\nimport {UserInfoService} from '@core/services/user-info.service';\r\n\r\n@Component({\r\n    selector: 'app-post-form-placeholder',\r\n    templateUrl: './post-form-placeholder.component.html',\r\n    styleUrls: ['./post-form-placeholder.component.scss']\r\n})\r\nexport class PostFormPlaceholderComponent implements OnInit {\r\n    @Input() selectedGroup;\r\n\r\n    authUser: CurrentUserData;\r\n    fd = new FormData();\r\n    videoUploadSpinner = false;\r\n    finishVideoUpload = false;\r\n    videoName = '';\r\n    postForm: FormGroup;\r\n\r\n    constructor(\r\n        public userStore: UserStoreService,\r\n        private postsServices: PostsService,\r\n        private uploadFile: VideoService,\r\n        private fb: FormBuilder,\r\n        private postsStore: PostsStoreService,\r\n        private dialog: MatDialog,\r\n        private _userInfoService: UserInfoService\r\n    ) {\r\n        this._getAuthInfo();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    private _getAuthInfo() {\r\n        this._userInfoService._userInfo.subscribe((data) => {\r\n            this.authUser = data;\r\n            console.log(this.authUser, 'Post Form  Placeholder DATA');\r\n        });\r\n    }\r\n\r\n    addPhotoVideoPosts(fd, type) {\r\n        this.uploadFile.uploadFile(fd, type).subscribe((res) => {\r\n            if (res) {\r\n                this.postForm = this.fb.group({\r\n                    description: [''],\r\n                    username: [this.userStore.authUser.username],\r\n                    author_id: [this.userStore.authUser?.id],\r\n                    group_id: [''],\r\n                    cover_img: [res.path],\r\n                    votes: 1\r\n                });\r\n                this.postsServices.add(this.postForm.value).subscribe((post) => {\r\n                    console.log(post);\r\n                    this.postsStore.setAllPosts(post);\r\n                    this.postForm.reset();\r\n                });\r\n            }\r\n            this.finishVideoUpload = false;\r\n            this.fd = new FormData();\r\n        });\r\n    }\r\n\r\n    uploadDialog() {\r\n        this.dialog.open(UploadFileComponent, {\r\n            maxWidth: '591px',\r\n            maxHeight: '479px',\r\n            height: '100%',\r\n            width: '100%',\r\n            data: {countUploadFile: 'oneFile'}\r\n        }).afterClosed().subscribe(dt => {\r\n            console.log(dt);\r\n            if (dt) {\r\n                const fd = new FormData();\r\n                let type = '';\r\n                dt.forEach((elem) => {\r\n                    if (elem.type.includes('image')) {\r\n                        console.log(elem);\r\n                        type = 'image';\r\n                        console.log(type);\r\n                        fd.append('image', elem.file);\r\n                        fd.append('belonging', 'post_image');\r\n                        fd.append('duration', '');\r\n                    }\r\n                    if (elem.type.includes('video')) {\r\n                        type = 'video';\r\n                        console.log(type);\r\n                        fd.append('video', elem.file);\r\n                        fd.append('belonging', 'post_video');\r\n                        fd.append('duration', elem.duration);\r\n                    }\r\n                });\r\n                if (type === 'image' || type === 'video') {\r\n                    this.addPhotoVideoPosts(fd, type);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div id=\"post-form-container\">\r\n    <form>\r\n        <div class=\"user-avatar\" *ngIf=\"(userStore.authUser$|async) as authUser\">\r\n            <img class=\"avatar\" [src]=\"authUser.avatar|getImgPath: 'images'\">\r\n        </div>\r\n\r\n        <div class=\"form-controls\">\r\n            <textarea placeholder=\"Create a public post...\" routerLink=\"/posts/create\"\r\n                      [queryParams]=\"{group_id: selectedGroup?.id}\"></textarea>\r\n            <div class=\"action-btn-wrap\">\r\n                <button (click)=\"uploadDialog()\" >\r\n                    <img src=\"assets/img/photo-green-small.svg\" alt=\"\">\r\n                    <span>Add photo/video</span>\r\n                </button>\r\n                <p>{{videoName}}</p>\r\n                <mat-spinner *ngIf=\"videoUploadSpinner\" [diameter]=\"24\"></mat-spinner>\r\n                <mat-icon *ngIf=\"finishVideoUpload\" style=\"background-color: #0aa06e; color: #ffffff\">done</mat-icon>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n"]}