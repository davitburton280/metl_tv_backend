{"version":3,"sources":["./src/app/videos/play-video/play-video.component.ts","./src/app/videos/play-video/play-video.component.html","./src/app/videos/play-video/video-details-form/video-details-form.component.ts","./src/app/videos/play-video/video-details-form/video-details-form.component.html","./src/app/videos/play-video/video-suggestions/video-suggestions.component.ts","./src/app/videos/play-video/video-suggestions/video-suggestions.component.html","./src/app/videos/show-saved-videos/show-saved-videos.component.ts","./src/app/videos/show-saved-videos/show-saved-videos.component.html","./src/app/videos/show-videos/show-playlists-list/show-playlists-list.component.ts","./src/app/videos/show-videos/show-playlists-list/show-playlists-list.component.html","./src/app/videos/show-videos/show-regular-list/show-regular-list.component.ts","./src/app/videos/show-videos/show-regular-list/show-regular-list.component.html","./src/app/videos/show-videos/show-search-results/show-search-results.component.ts","./src/app/videos/show-videos/show-search-results/show-search-results.component.html","./src/app/videos/show-videos/show-videos.component.ts","./src/app/videos/show-videos/show-videos.component.html","./src/app/videos/videos-routing.module.ts","./src/app/videos/videos.module.ts"],"names":[],"mappings":"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","file":"videos-videos-module-es2015.js","sourcesContent":["import {AfterViewInit, Component, OnInit} from '@angular/core';\r\nimport {CHART_1, CHART_2, CHART_3, CHART_4} from '@core/constants/charts';\r\nimport {Chart} from 'chart.js';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {AuthService} from '@core/services/auth.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {PlaylistsService} from '@core/services/playlists.service';\r\nimport {environment} from '@env';\r\n\r\n@Component({\r\n    selector: 'app-play-video',\r\n    templateUrl: './play-video.component.html',\r\n    styleUrls: ['./play-video.component.scss']\r\n})\r\nexport class PlayVideoComponent implements OnInit, AfterViewInit {\r\n\r\n    canvas: any;\r\n    ctx: any;\r\n    lineChart;\r\n\r\n    videoUrl;\r\n    videoData;\r\n    apiUrl = API_URL;\r\n\r\n    authUser;\r\n    userVideoConnection = {liked: 0, disliked: 0, saved: '', viewed: false};\r\n    isProduction = environment.production;\r\n\r\n    videoJSPlayerOptions = {\r\n        autoplay: true,\r\n        controls: true,\r\n        bigPlayButton: false,\r\n        progressControl: true,\r\n        fluid: false,\r\n        preload: 'auto',\r\n        html5: {\r\n            vhs: {\r\n                withCredentials: true,\r\n                overrideNative: true,\r\n            },\r\n            nativeAudioTracks: false,\r\n            nativeVideoTracks: false\r\n        },\r\n        sources: []\r\n    };\r\n\r\n    viewsCount = 0;\r\n\r\n    showTagsForm = false;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private videoService: VideoService,\r\n        public router: Router,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        public auth: AuthService,\r\n        private toastr: ToastrService,\r\n        private playlistsService: PlaylistsService\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        const videoId = this.route.snapshot.queryParams.id;\r\n        const params = {id: videoId};\r\n\r\n        this.videoService.getVideoById(params).subscribe(dt => {\r\n            this.videoData = dt;\r\n            if (this.auth.loggedIn()) {\r\n                this.userVideoConnection = this.checkUserVideoConnection(dt);\r\n                this.updateViewsCount(dt);\r\n                this.indexUserTags(dt);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    checkUserVideoConnection(videoData) {\r\n        const userVideoConnection = videoData?.users_vids.find(u => u.id === this.authUser.id);\r\n        if (!userVideoConnection) {\r\n            return this.userVideoConnection;\r\n        } else {\r\n            const liked = userVideoConnection.users_videos?.liked;\r\n            const disliked = userVideoConnection.users_videos?.disliked;\r\n            const saved = userVideoConnection.users_videos.saved ? 'saved' : '';\r\n            const viewed = !!userVideoConnection?.users_videos?.viewed;\r\n            return {liked, disliked, saved, viewed};\r\n        }\r\n    }\r\n\r\n    updateViewsCount(dt) {\r\n        const params = {user_id: this.authUser.id, video_id: dt.id};\r\n        if (!this.userVideoConnection.viewed) {\r\n            this.videoService.updateViews(params).subscribe((d) => {\r\n                this.videoData = d;\r\n            });\r\n        }\r\n    }\r\n\r\n    updateLikes(videoData, action) {\r\n        if (this.auth.loggedIn()) {\r\n\r\n            videoData = this.getLikesState(action, videoData);\r\n\r\n            this.videoService.updateLikes({\r\n                video_id: videoData.id,\r\n                user_id: this.authUser.id,\r\n                likes: videoData.likes,\r\n                dislikes: videoData.dislikes,\r\n                liked: this.userVideoConnection.liked,\r\n                disliked: this.userVideoConnection.disliked,\r\n                saved: videoData.saved\r\n            }).subscribe(dt => {\r\n\r\n            });\r\n        } else {\r\n            this.toastr.error('Please log in first to take this action');\r\n        }\r\n    }\r\n\r\n    getLikesState(action, videoData) {\r\n        if (action === 'like') {\r\n            this.userVideoConnection.liked = +!this.userVideoConnection.liked;\r\n            if (this.userVideoConnection.disliked) {\r\n                videoData.dislikes += videoData.dislikes === 0 ? 0 : -1;\r\n            }\r\n            this.userVideoConnection.disliked = 0;\r\n            videoData.likes += this.userVideoConnection.liked ? 1 : -1;\r\n\r\n        } else {\r\n            this.userVideoConnection.disliked = +!this.userVideoConnection.disliked;\r\n            if (this.userVideoConnection.liked) {\r\n                videoData.likes += videoData.likes === 0 ? 0 : -1;\r\n            }\r\n            this.userVideoConnection.liked = 0;\r\n            videoData.dislikes += this.userVideoConnection.disliked ? 1 : -1;\r\n        }\r\n        return videoData;\r\n    }\r\n\r\n    indexUserTags(dt) {\r\n        const params = {user_id: this.authUser.id, video_id: dt.id, tags: this.videoData?.tags};\r\n        this.videoService.indexUserTags(params).subscribe(d => {\r\n\r\n        });\r\n    }\r\n\r\n\r\n    openChannelPage(videoData) {\r\n        this.router.navigate(['channels/show'], {queryParams: {username: videoData.users_vids[0].username}});\r\n    }\r\n\r\n    async openVideoByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n    saveVideo(videoData) {\r\n\r\n        this.videoService.saveVideo({\r\n            video_id: videoData.id,\r\n            user_id: this.authUser.id,\r\n            saved: this.userVideoConnection.saved === 'saved' ? 0 : 1\r\n        }).subscribe(dt => {\r\n            this.userVideoConnection.saved = dt.saved ? 'saved' : '';\r\n        });\r\n    }\r\n\r\n    saveVideoDetails(e) {\r\n        this.videoData.tags = e.tags;\r\n        this.videoService.saveVideoDetails({...e, video_id: this.videoData.id}).subscribe(dt => {\r\n            this.videoData = dt;\r\n            this.showTagsForm = false;\r\n        });\r\n    }\r\n\r\n    async getVideosByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n    isSmallSize() {\r\n        return window.screen.availWidth < 992;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n}\r\n","<app-user-tags *ngIf=\"auth.loggedIn()\" (tagSelected)=\"getVideosByTag($event)\"></app-user-tags>\r\n<div class=\"ads-block\">\r\n    <div class=\"ads-block-left\">\r\n        <ng-container *ngIf=\"videoData\">\r\n            <div class=\"videoWrap\">\r\n                <app-vjs-player [videoData]=\"videoData\" [options]=\"videoJSPlayerOptions\"></app-vjs-player>\r\n            </div>\r\n\r\n            <div class=\"main-tags\">\r\n                <div class=\"main-tags-text\">\r\n                    <span *ngIf=\"videoData.tags?.length === 0\">No tags defined for this video</span>\r\n                    <ng-container *ngIf=\"videoData.tags?.length > 0\">\r\n                        <p *ngFor=\"let tag of videoData.tags\" class=\"tag\" (click)=\"openVideoByTag(tag.name)\">\r\n                            #{{tag.name}}</p>\r\n                    </ng-container>\r\n                </div>\r\n\r\n                <div class=\"main-tags-like\">\r\n                    <div class=\"main-tags-share\" (click)=\"updateLikes(videoData, 'like')\">\r\n                        <i class=\"fas fa-thumbs-up\" [class.liked]=\"userVideoConnection?.liked\"></i>\r\n                        <p>{{videoData.likes}}</p>\r\n                    </div>\r\n                    <div class=\"main-tags-share\" (click)=\"updateLikes(videoData, 'dislike')\">\r\n                        <i class=\"fas fa-thumbs-down\"\r\n                           [class.disliked]=\"userVideoConnection?.disliked\"></i>\r\n                        <p>{{videoData.dislikes}}</p>\r\n                    </div>\r\n                    <div class=\"main-tags-share\">\r\n                        <i class=\"fas fa-share-alt\"></i>\r\n                        <p>Share</p>\r\n                    </div>\r\n                    <div class=\"main-tags-share\" (click)=\"saveVideo(videoData)\"\r\n                         [class.saved]=\"userVideoConnection?.saved === 'saved'\">\r\n                        <i class=\"fas fa-plus-square\"></i>\r\n                        <p>{{userVideoConnection?.saved === 'saved' ? 'Saved' : 'Save'}}</p>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"tags-container\">\r\n                <div class=\"editable-details\" *ngIf=\"!showTagsForm\">\r\n                    <p class=\"ads-text-1\">{{videoData?.name}}</p>\r\n                    <button id=\"add-tags\" *ngIf=\"!showTagsForm && authUser?.id === videoData.author_id\"\r\n                            (click)=\"showTagsForm = !showTagsForm\">\r\n                        <mat-icon>edit</mat-icon>\r\n                        <span>Edit details</span>\r\n                    </button>\r\n                </div>\r\n                <app-video-details-form [videoData]=\"videoData\" *ngIf=\"showTagsForm\"\r\n                                        (formReady)=\"saveVideoDetails($event)\"></app-video-details-form>\r\n            </div>\r\n            <div class=\"details-row\">\r\n                <span class=\"ads-text-2\">{{videoData?.views + ' view' + (videoData?.views === 1 ? '' : 's')}}</span>\r\n                <span class=\"dot\">&middot;</span>\r\n                <span class=\"ads-text-2\">{{videoData.created_at|dateFromNow}}</span>\r\n            </div>\r\n            <div class=\"main-item-block channel-block\" (click)=\"openChannelPage(videoData)\" *ngIf=\"videoData?.channel\">\r\n                <img class=\"avatar\" [src]=\"videoData.channel.avatar|getImgPath:'avatars'\">\r\n                <div>\r\n                    <p class=\"channel-name\">{{videoData.channel.name}}</p>\r\n                    <p class=\"main-text-4\">{{videoData.channel.subscribers_count + ' subscriber' + (videoData.channel.subscribers_count === 1 ? '' : 's')}}</p>\r\n                </div>\r\n            </div>\r\n            <p class=\"ads-text-2\"></p>\r\n        </ng-container>\r\n        <app-video-suggestions *ngIf=\"isSmallSize()\"></app-video-suggestions>\r\n    </div>\r\n    <div class=\"ads-block-right\">\r\n        <app-video-suggestions *ngIf=\"!isSmallSize()\"></app-video-suggestions>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport {MatChipInputEvent} from '@angular/material/chips';\r\n\r\n@Component({\r\n    selector: 'app-video-details-form',\r\n    templateUrl: './video-details-form.component.html',\r\n    styleUrls: ['./video-details-form.component.scss']\r\n})\r\nexport class VideoDetailsFormComponent implements OnInit {\r\n    @Input('videoData') videoData;\r\n    @Output('formReady') formReady = new EventEmitter();\r\n    videoDetailsForm: FormGroup;\r\n\r\n    isSubmitted = false;\r\n    readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n\r\n    constructor(\r\n        private fb: FormBuilder\r\n    ) {\r\n        this.videoDetailsForm = this.fb.group({\r\n            name: ['', Validators.required],\r\n            tags: [[], Validators.required],\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.videoDetailsForm.patchValue({name: this.videoData.name});\r\n    }\r\n\r\n    add(event: MatChipInputEvent): void {\r\n        const input = event.input;\r\n        const value = event.value;\r\n\r\n        if ((value || '').trim()) {\r\n            this.videoData.tags.push({name: value.trim()});\r\n            this.videoDetailsForm.patchValue({tags: this.videoData.tags});\r\n\r\n            // this.saveTags();\r\n        }\r\n\r\n        // Reset the input value\r\n        if (input) {\r\n            input.value = '';\r\n        }\r\n    }\r\n\r\n    remove(tag): void {\r\n        const index = this.videoData.tags.indexOf(tag);\r\n\r\n        if (index >= 0) {\r\n            this.videoData.tags.splice(index, 1);\r\n            this.videoDetailsForm.patchValue({tags: this.videoData.tags});\r\n        }\r\n    }\r\n\r\n    saveDetails() {\r\n        this.videoDetailsForm.patchValue({tags: this.videoData.tags});\r\n        this.isSubmitted = true;\r\n        if (this.videoDetailsForm.valid) {\r\n            this.formReady.emit(this.videoDetailsForm.value);\r\n        }\r\n    }\r\n\r\n}\r\n","<form [formGroup]=\"videoDetailsForm\" id=\"tags-form\">\r\n    <div class=\"left-group\">\r\n\r\n        <div id=\"video-name\">\r\n            <mat-form-field>\r\n                <input matInput formControlName=\"name\">\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"isSubmitted && videoDetailsForm.get('name').hasError('required')\">\r\n                The video name is required\r\n            </mat-error>\r\n        </div>\r\n    </div>\r\n    <div class=\"right-group\">\r\n\r\n        <div id=\"video-tags\">\r\n            <mat-form-field class=\"example-chip-list\">\r\n                <mat-chip-list #tagList formControlName=\"tags\">\r\n                    <mat-chip *ngFor=\"let tag of videoData.tags\" (removed)=\"remove(tag)\">\r\n                        {{tag.name}}\r\n                        <mat-icon matChipRemove>cancel</mat-icon>\r\n                    </mat-chip>\r\n                    <input placeholder=\"Tags...\" #chipsInput\r\n                           [matChipInputFor]=\"tagList\"\r\n                           [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                           (matChipInputTokenEnd)=\"add($event)\">\r\n                </mat-chip-list>\r\n                <mat-hint align=\"end\">Please press 'Enter' after the tag name</mat-hint>\r\n\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"videoData.tags.length ===0 && isSubmitted\">Please provide some tags describing your live\r\n                video\r\n            </mat-error>\r\n        </div>\r\n\r\n        <div class=\"actions\">\r\n            <button id=\"save-tags\" (click)=\"saveDetails()\">\r\n                <mat-icon>checked</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {PlaylistsService} from '@core/services/playlists.service';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {API_URL, DEFAULT_VIDEO_SUGGESTIONS_COUNT} from '@core/constants/global';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {ConfirmationDialogComponent} from '@core/components/modals/confirmation-dialog/confirmation-dialog.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {environment} from '@env';\r\n\r\n@Component({\r\n    selector: 'app-video-suggestions',\r\n    templateUrl: './video-suggestions.component.html',\r\n    styleUrls: ['./video-suggestions.component.scss']\r\n})\r\nexport class VideoSuggestionsComponent implements OnInit {\r\n\r\n    urlParams;\r\n    videoId;\r\n    playlistId;\r\n    playlistData;\r\n\r\n    playlistOpened = false;\r\n    videoSuggestions = [];\r\n\r\n    apiUrl = API_URL;\r\n    authUser;\r\n\r\n    isProduction = environment.production;\r\n\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private playlistsService: PlaylistsService,\r\n        private videoService: VideoService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        public router: Router,\r\n        private dialog: MatDialog\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.urlParams = this.route.snapshot.queryParams;\r\n        this.videoId = +this.urlParams?.id;\r\n        this.playlistId = this.urlParams?.playlist_id;\r\n        this.playlistOpened = !!this.playlistId;\r\n\r\n        if (this.playlistOpened) {\r\n            this.playlistsService.getById({playlist_id: this.playlistId}).subscribe(dt => {\r\n                this.playlistData = dt;\r\n            });\r\n        }\r\n\r\n        this.videoService.get({limit: DEFAULT_VIDEO_SUGGESTIONS_COUNT}).subscribe(dt => {\r\n            this.videoSuggestions = dt.videos;\r\n        });\r\n\r\n    }\r\n\r\n    openVideoPage(video, playlistId = null) {\r\n        const route = '/videos/play';\r\n        const params = {id: video.id, playlist_id: playlistId};\r\n\r\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(async () =>\r\n            await this.router.navigate([route], {queryParams: params})\r\n        );\r\n\r\n    }\r\n\r\n    removeVideoFromPlaylist(video, playlistId) {\r\n        this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed) {\r\n                this.playlistsService.removeVideoFromPlaylist({\r\n                    playlist_id: playlistId,\r\n                    video_id: video.id\r\n                }).subscribe(dt => {\r\n                    const oldVideoIndex = this.playlistData.videos.indexOf(video);\r\n                    this.playlistData.videos = dt.videos;\r\n                    const nextVideo = this.playlistData.videos[oldVideoIndex];\r\n                    if (nextVideo) {\r\n                        this.openVideoPage(nextVideo);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div class=\"playlist-wrap\" *ngIf=\"playlistOpened && playlistData && playlistData.videos.length > 0\">\r\n    <h2>{{playlistData.name}}</h2>\r\n    <div class=\"list-wrap\">\r\n        <ng-container *ngFor=\"let video of playlistData.videos\">\r\n\r\n            <div class=\"playlist-video\" [class.selected]=\"videoId === video.id\"\r\n                 (click)=\"openVideoPage(video, playlistData?.id)\">\r\n\r\n                <div class=\"thumbnail-container\">\r\n                    <img [src]=\"video.thumbnail|getImgPath\">\r\n                </div>\r\n\r\n                <div class=\"details-container\">\r\n                    <p class=\"video-name\" (click)=\"openVideoPage(video, playlistData?.id)\">{{video.name}}</p>\r\n                    <p class=\"main-text-3\">{{video.channel.name}}</p>\r\n                </div>\r\n\r\n                <div class=\"remove-btn-container\" *ngIf=\"authUser.id === playlistData.channel.id\"\r\n                     (click)=\"removeVideoFromPlaylist(video,playlistId)\">\r\n                    <span class=\"material-icons\">delete</span>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"suggested-videos\" *ngFor=\"let video of videoSuggestions;let ind = index\">\r\n    <div class=\"suggested-video\" *ngIf=\"ind < 5\">\r\n\r\n        <div class=\"thumbnail-container\">\r\n            <img [src]=\"video.thumbnail|getImgPath\" (click)=\"openVideoPage(video)\">\r\n        </div>\r\n\r\n        <div class=\"details-container\">\r\n            <p class=\"video-name\">{{video.name}}</p>\r\n            <p class=\"channel-sub-name\">{{video.channel.name}}</p>\r\n            <div class=\"details-row\">\r\n                <span class=\"watchers-count\">\r\n                    {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\r\n                </span>\r\n                <span class=\"dot\">&middot;</span>\r\n                <span class=\"upload-time\">{{video.created_at|dateFromNow}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<div [hidden]=\"isProduction\">\r\n    <img class=\"ads\" src=\"assets/img/ads.png\">\r\n    <img class=\"ads\" src=\"assets/img/ads.png\">\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {buildPlayVideoRoute} from '@core/helpers/build-play-video-route';\r\n\r\n@Component({\r\n    selector: 'app-show-saved-videos',\r\n    templateUrl: './show-saved-videos.component.html',\r\n    styleUrls: ['./show-saved-videos.component.scss']\r\n})\r\nexport class ShowSavedVideosComponent implements OnInit {\r\n\r\n    userVideos;\r\n    channelsVideos = [];\r\n    apiUrl = API_URL;\r\n    search;\r\n    authUser;\r\n\r\n    constructor(\r\n        private videoService: VideoService,\r\n        public router: Router,\r\n        private subject: SubjectService,\r\n        private channelsService: ChannelsService,\r\n        private route: ActivatedRoute,\r\n        private getAuthUser: GetAuthUserPipe\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.authUser = this.getAuthUser.transform();\r\n\r\n        this.videoService.getUserSavedVideos({user_id: this.authUser.id}).subscribe(dt => {\r\n            this.userVideos = dt;\r\n        });\r\n    }\r\n\r\n    async openVideoPage(video, username) {\r\n        const r = buildPlayVideoRoute(video, username);\r\n        await this.router.navigate([r.route], {queryParams: r.params});\r\n    }\r\n\r\n    openChannelPage(channel, username) {\r\n        this.router.navigate(['channels/show'], {queryParams: {username}});\r\n    }\r\n\r\n    async getVideosByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n}\r\n","<div id=\"videos-list\" *ngIf=\"userVideos\">\r\n    <ng-container *ngIf=\"!search\">\r\n        <div class=\"video-container flex-wrap\" *ngFor=\"let video of userVideos.users_vids\">\r\n            <div class=\"thumbnail\">\r\n                <img [src]=\"video.thumbnail|getImgPath\" (click)=\"openVideoPage(video, userVideos.username)\">\r\n                <span class=\"duration\">{{video.duration}}</span>\r\n            </div>\r\n            <div class=\"details\">\r\n                <h4 class=\"title\">{{video.name}}</h4>\r\n                <div class=\"shortened-details\">\r\n                    <span class=\"channel-name\"\r\n                          (click)=\"openChannelPage(video.user.channel, video.user.username)\">{{video.channel.name}}</span>\r\n                    <span class=\"dot\">&middot;</span>\r\n                    <span class=\"watchers-count\">\r\n                        {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\r\n                    </span>\r\n                    <span class=\"dot\">&middot;</span>\r\n                    <span class=\"upload-time\">{{video.created_at | dateFromNow}}</span>\r\n                </div>\r\n                <p class=\"shortened-description\">\r\n                   {{video.description}}\r\n                </p>\r\n\r\n                <div class=\"tags\">\r\n                    <ul>\r\n                        <li *ngFor=\"let tag of video?.tags\" (click)=\"getVideosByTag(tag.name)\">\r\n                            <span>{{tag.name}}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-show-playlists-list',\n    templateUrl: './show-playlists-list.component.html',\n    styleUrls: ['./show-playlists-list.component.scss']\n})\nexport class ShowPlaylistsListComponent implements OnInit {\n\n    @Input('items') items;\n    @Input('authUser') authUser;\n\n    constructor(\n        public router: Router\n    ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    async openPlaylistPage(playlist, firstVideoId) {\n        const route = 'videos/play';\n        const params = {id: firstVideoId, playlist_id: playlist.id};\n        await this.router.navigate([route], {queryParams: params});\n    }\n\n}\n","<div class=\"playlist-container\" *ngFor=\"let playlist of items.playlists\">\n    <ng-container *ngIf=\"playlist.videos.length > 0\">\n        <div class=\"thumbnail-container\" (click)=\"openPlaylistPage(playlist, playlist.videos[0].id)\">\n            <div class=\"thumbnail\">\n                <div class=\"short-details\">\n                    <mat-icon>playlist_add_check</mat-icon>\n                    <p class=\"name\">{{playlist.name}}</p>\n                    <p class=\"video-count\">{{playlist.videos.length + (playlist.videos.length === 1 ? ' video' : ' videos')}}</p>\n                </div>\n                <img [src]=\"playlist.thumbnail|getImgPath\">\n            </div>\n            <div class=\"fake-bg thumbnail\"></div>\n        </div>\n        <div class=\"details\">\n\n        </div>\n    </ng-container>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {buildPlayVideoRoute} from '@core/helpers/build-play-video-route';\r\nimport {Router} from '@angular/router';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector: 'app-show-regular-list',\r\n    templateUrl: './show-regular-list.component.html',\r\n    styleUrls: ['./show-regular-list.component.scss']\r\n})\r\nexport class ShowRegularListComponent implements OnInit {\r\n\r\n    @Input('items') items;\r\n    @Input('authUser') authUser;\r\n\r\n    constructor(\r\n        public router: Router\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    async openVideoPage(video, username) {\r\n        const r = buildPlayVideoRoute(video, username);\r\n        await this.router.navigate([r.route], {queryParams: r.params});\r\n    }\r\n\r\n    async openChannelPage(channel, username) {\r\n        await this.router.navigate(['channels/show'], {queryParams: {username}});\r\n    }\r\n\r\n    checkIfSavedByCurrentUser(video) {\r\n        return video.users_vids.find(v => v.username === this.authUser?.username && v.users_videos.saved);\r\n    }\r\n\r\n    checkIfNewVideo(video) {\r\n        const duration = moment.duration(moment().diff(video.created_at));\r\n        return Math.floor(duration.asDays()) < 7;\r\n    }\r\n\r\n    async getVideosByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n}\r\n","<div id=\"regular-video-list-container\">\r\n    <div class=\"video-container flex-wrap\" *ngFor=\"let video of items.videos\">\r\n        <div class=\"thumbnail\">\r\n            <img [src]=\"video.thumbnail|getImgPath\" (click)=\"openVideoPage(video, video.user.username)\">\r\n            <span class=\"live-now\" *ngIf=\"video.status==='live'\">Live now</span>\r\n            <span class=\"duration\">{{video.duration}}</span>\r\n        </div>\r\n        <div class=\"details\">\r\n            <h4 class=\"title\">{{video.name}}</h4>\r\n            <div class=\"shortened-details\">\r\n                    <span class=\"channel-name\" (click)=\"openChannelPage(video.user.channel, video.user.username)\">\r\n                        {{video.user.channel.name}}\r\n                    </span>\r\n                <span class=\"dot\">&middot;</span>\r\n                <span class=\"watchers-count\">\r\n                        {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\r\n                    </span>\r\n                <span class=\"dot\">&middot;</span>\r\n                <span class=\"upload-time\">{{video.created_at | dateFromNow}}</span>\r\n            </div>\r\n            <p class=\"shortened-description\">\r\n                {{video.description}}\r\n            </p>\r\n\r\n            <div class=\"saved-video\" *ngIf=\"checkIfSavedByCurrentUser(video)\">\r\n                <mat-icon>turned_in</mat-icon>\r\n                <span>Saved</span>\r\n            </div>\r\n\r\n            <div class=\"tags\">\r\n                <ul>\r\n                    <li *ngFor=\"let tag of video?.tags\" (click)=\"getVideosByTag(tag.name)\">\r\n                        <span>{{tag.name}}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div class=\"is-new-video\" *ngIf=\"checkIfNewVideo(video)\">\r\n                <span class=\"new\">New</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {SubjectService} from '@core/services/subject.service';\nimport {ChannelsService} from '@core/services/channels.service';\nimport {buildPlayVideoRoute} from '@core/helpers/build-play-video-route';\n\n@Component({\n    selector: 'app-show-search-results',\n    templateUrl: './show-search-results.component.html',\n    styleUrls: ['./show-search-results.component.scss']\n})\nexport class ShowSearchResultsComponent implements OnInit {\n\n    @Input('channelsVideos') channelsVideos;\n    @Input('authUser') authUser;\n\n    constructor(\n        public router: Router,\n        private subject: SubjectService,\n        private channelsService: ChannelsService,\n    ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    async openChannelPage(channel, username) {\n        await this.router.navigate(['channels/show'], {queryParams: {username}});\n    }\n\n    async openVideoPage(video, username) {\n        const r = buildPlayVideoRoute(video, username);\n        await this.router.navigate([r.route], {queryParams: r.params});\n    }\n\n    subscribeToChannel(channel) {\n        this.channelsService.subscribeToChannel({user_id: this.authUser.id, channel_id: channel.id}).subscribe(dt => {\n            this.channelsService.getUserChannelSubscriptions({user_id: this.authUser.id}).subscribe(d => {\n                this.subject.setUserSubscriptions(d);\n                if (this.checkIfSubscribed(channel)) {\n                    channel.subscribers = channel.subscribers.filter(s => s.id !== this.authUser?.id);\n                } else {\n                    channel.subscribers.push(this.authUser);\n                }\n                // console.log(channel.subscribers)\n                // channel.subscribers = channel.subscribers.filter(s => s.id !== this.authUser?.id).concat([this.authUser]);\n                // console.log(channel.subscribers)\n\n                // this.searchChannelsVideos({search: this.search, filters: this.filters});\n            });\n        });\n    }\n\n    checkIfSubscribed(channel) {\n        return channel.subscribers.find(s => s.id === this.authUser?.id);\n    }\n\n    getDesc(d) {\n        return d?.replace(/<br\\s*[\\/]?>/gi, '\\n');\n    }\n\n\n}\n","<div id=\"search-results-container\">\n    <ng-container *ngFor=\"let channel of channelsVideos\">\n        <div class=\"channel-item\">\n            <div class=\"thumbnail\">\n                <img class=\"avatar\" [src]=\"channel.avatar|getImgPath:'avatars'\"\n                     (click)=\"openChannelPage(channel,channel.user?.username)\">\n            </div>\n            <div class=\"info\">\n                <p class=\"name\" (click)=\"openChannelPage(channel, channel?.user?.username)\">{{channel.name}}</p>\n                <div class=\"shortened-details\">\n                    <p class=\"video-count\">{{channel.videos.length + (channel.videos.length === 1 ? ' video' : ' videos')}}</p>\n                </div>\n                <p>{{getDesc(channel.description)}}</p>\n                <button class=\"btn subscribe-to-channel-btn\" *ngIf=\"channel?.user?.username !== authUser?.username\"\n                        [class.subscribed]=\"checkIfSubscribed(channel)\"\n                        (click)=\"subscribeToChannel(channel)\">{{checkIfSubscribed(channel) ? 'Subscribed' : 'Subscribe'}}\n                </button>\n            </div>\n        </div>\n        <div class=\"video-container\" *ngFor=\"let video of channel.videos\">\n            <div class=\"thumbnail\">\n                <img [src]=\"video.thumbnail|getImgPath\" (click)=\"openVideoPage(video, channel.user.username)\">\n                <span class=\"duration\">{{video.duration}}</span>\n            </div>\n            <div class=\"details\">\n                <h4 class=\"title\">{{video.name}}</h4>\n                <div class=\"shortened-details\">\n                    <span class=\"channel-name\">{{channel.name}}</span>\n                    <span class=\"dot\">&middot;</span>\n                    <span class=\"watchers-count\">\n                    {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\n                </span>\n                    <span class=\"dot\">&middot;</span>\n                    <span class=\"upload-time\">{{video.created_at | dateFromNow}}</span>\n                </div>\n                <p class=\"shortened-description\">\n                    {{video.description}}\n                </p>\n                <div class=\"tags\">\n                    <ul>\n                        <li *ngFor=\"let tag of video?.tags\">\n                            <span>{{tag.name}}</span>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n</div>\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {API_URL} from '@core/constants/global';\r\nimport * as moment from 'moment';\r\nimport {ActivatedRoute, ActivationEnd, Data, Router} from '@angular/router';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {filter, map, tap} from 'rxjs/operators';\r\nimport {checkIfObjectEmpty} from '@core/helpers/check-if-object-empty';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {FilterOutFalsyValuesFromObjectPipe} from '@shared/pipes/filter-out-falsy-values-from-object.pipe';\r\nimport {Subscription} from 'rxjs';\r\nimport {buildPlayVideoRoute} from '@core/helpers/build-play-video-route';\r\n\r\n@Component({\r\n    selector: 'app-show-videos',\r\n    templateUrl: './show-videos.component.html',\r\n    styleUrls: ['./show-videos.component.scss']\r\n})\r\nexport class ShowVideosComponent implements OnInit, OnDestroy {\r\n    items = {videos: [], playlists: []};\r\n    channelsVideos = [];\r\n    apiUrl = API_URL;\r\n    search;\r\n    selectedTag;\r\n    authUser;\r\n    showTrending = false;\r\n    showFilters = false;\r\n    filters = {};\r\n    filterStatus = 'idle';\r\n    subscriptions: Subscription[] = [];\r\n    loadingVideos = false;\r\n\r\n    constructor(\r\n        private videoService: VideoService,\r\n        public router: Router,\r\n        private subject: SubjectService,\r\n        private channelsService: ChannelsService,\r\n        private route: ActivatedRoute,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private getExactParams: FilterOutFalsyValuesFromObjectPipe\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n\r\n        this.subscriptions.push(\r\n            this.route.queryParams.subscribe(d => {\r\n                this.search = this.route.snapshot.queryParams?.search;\r\n                this.showTrending = this.router.url.includes('trending');\r\n                this.selectedTag = this.route.snapshot.queryParams?.tag;\r\n                if (this.search) {\r\n                    this.searchChannelsVideos({search: this.search, filters: this.filters});\r\n                } else {\r\n                    this.getVideosList({search: this.search, filters: this.filters, tag: this.selectedTag});\r\n                }\r\n            }));\r\n\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n\r\n    }\r\n\r\n    getFilteredList(filters = {}) {\r\n        this.filters = filters;\r\n        this.filterStatus = 'applied';\r\n        if (this.search) {\r\n            this.searchChannelsVideos({search: this.search, filters: this.filters});\r\n        } else {\r\n            this.getVideosList({filters: this.filters});\r\n        }\r\n    }\r\n\r\n    getVideosList(params) {\r\n        params = this.getExactParams.transform(params);\r\n\r\n        this.videoService.get({\r\n            withPlaylists: !this.showTrending ? 1 : 0,\r\n            trending: this.showTrending ? 1 : 0,\r\n            ...params\r\n        }).subscribe(dt => {\r\n            this.items = dt;\r\n        });\r\n    }\r\n\r\n    searchChannelsVideos(params) {\r\n\r\n        params = this.getExactParams.transform(params);\r\n        this.loadingVideos = true;\r\n\r\n        this.channelsService.searchWithVideos({user_id: this.authUser?.id, ...params}).subscribe(dt => {\r\n            this.loadingVideos = false;\r\n            this.channelsVideos = dt;\r\n        });\r\n    }\r\n\r\n\r\n    isFiltersShown() {\r\n        return this.items.videos?.length > 0 ||\r\n            (this.search && this.channelsVideos.find(v => v.videos.length > 0))\r\n            || this.filterStatus === 'applied' && !this.loadingVideos;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n}\r\n","<div class=\"all-videos\">\r\n    <button class=\"filter-toggle-btn\" *ngIf=\"isFiltersShown()\" (click)=\"showFilters = !showFilters\">\r\n        <mat-icon>tune</mat-icon>\r\n        <span>Filters</span>\r\n    </button>\r\n    <app-video-filters (filter)=\"getFilteredList($event)\" *ngIf=\"showFilters\"></app-video-filters>\r\n    <div id=\"videos-list\">\r\n        <mat-spinner [diameter]=\"20\" *ngIf=\"loadingVideos\"></mat-spinner>\r\n        <ng-container *ngIf=\"!search && !loadingVideos\">\r\n            <app-show-regular-list [items]=\"items\" [authUser]=\"authUser\"></app-show-regular-list>\r\n            <app-show-playlists-list [items]=\"items\" [authUser]=\"authUser\"></app-show-playlists-list>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"search && !loadingVideos\">\r\n            <app-show-search-results [channelsVideos]=\"channelsVideos\" [authUser]=\"authUser\"></app-show-search-results>\r\n        </ng-container>\r\n    </div>\r\n    <div *ngIf=\"search && channelsVideos?.length === 0\">\r\n        <span class=\"error\">No results found</span>\r\n    </div>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {ShowVideosComponent} from '@app/videos/show-videos/show-videos.component';\r\nimport {PlayVideoComponent} from '@app/videos/play-video/play-video.component';\r\nimport {ShowSavedVideosComponent} from '@app/videos/show-saved-videos/show-saved-videos.component';\r\nimport {AuthGuard} from '@core/guards/auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ShowVideosComponent,\r\n        pathMatch: 'full',\r\n        data: {\r\n            title: 'Videos',\r\n        }\r\n    },\r\n    {\r\n        path: 'play',\r\n        component: PlayVideoComponent,\r\n        data: {\r\n            title: 'Play Video',\r\n        }\r\n    },\r\n    {\r\n        path: 'saved',\r\n        component: ShowSavedVideosComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n            title: 'Saved Videos',\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class VideosRoutingModule {\r\n}\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {VideosRoutingModule} from './videos-routing.module';\r\nimport {ShowVideosComponent} from './show-videos/show-videos.component';\r\nimport {SharedModule} from '@shared/shared.module';\r\n\r\nimport {PlayVideoComponent} from '../videos/play-video/play-video.component';\r\nimport {ShowSavedVideosComponent} from './show-saved-videos/show-saved-videos.component';\r\nimport {VideoSuggestionsComponent} from './play-video/video-suggestions/video-suggestions.component';\r\nimport { VideoDetailsFormComponent } from './play-video/video-details-form/video-details-form.component';\nimport { ShowRegularListComponent } from './show-videos/show-regular-list/show-regular-list.component';\nimport { ShowSearchResultsComponent } from './show-videos/show-search-results/show-search-results.component';\nimport { ShowPlaylistsListComponent } from './show-videos/show-playlists-list/show-playlists-list.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ShowVideosComponent,\r\n        PlayVideoComponent,\r\n        ShowSavedVideosComponent,\r\n        VideoSuggestionsComponent,\r\n        VideoDetailsFormComponent,\r\n        ShowRegularListComponent,\r\n        ShowSearchResultsComponent,\r\n        ShowPlaylistsListComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        VideosRoutingModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class VideosModule {\r\n}\r\n"],"sourceRoot":"webpack:///"}