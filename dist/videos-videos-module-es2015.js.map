{"version":3,"sources":["./src/app/videos/play-video/play-video.component.ts","./src/app/videos/play-video/play-video.component.html","./src/app/videos/play-video/video-comments-form/video-comments-form.component.ts","./src/app/videos/play-video/video-comments-form/video-comments-form.component.html","./src/app/videos/play-video/video-comments-list/comment-actions/comment-actions.component.ts","./src/app/videos/play-video/video-comments-list/comment-actions/comment-actions.component.html","./src/app/videos/play-video/video-comments-list/single-comment/single-comment.component.ts","./src/app/videos/play-video/video-comments-list/single-comment/single-comment.component.html","./src/app/videos/play-video/video-comments-list/video-comments-list.component.ts","./src/app/videos/play-video/video-comments-list/video-comments-list.component.html","./src/app/videos/play-video/video-details-form/video-details-form.component.ts","./src/app/videos/play-video/video-details-form/video-details-form.component.html","./src/app/videos/play-video/video-suggestions/video-suggestions.component.ts","./src/app/videos/play-video/video-suggestions/video-suggestions.component.html","./src/app/videos/show-saved-videos/show-saved-videos.component.ts","./src/app/videos/show-saved-videos/show-saved-videos.component.html","./src/app/videos/show-videos/show-playlists-list/show-playlists-list.component.ts","./src/app/videos/show-videos/show-playlists-list/show-playlists-list.component.html","./src/app/videos/show-videos/show-regular-list/show-regular-list.component.ts","./src/app/videos/show-videos/show-regular-list/show-regular-list.component.html","./src/app/videos/show-videos/show-search-results/show-search-results.component.ts","./src/app/videos/show-videos/show-search-results/show-search-results.component.html","./src/app/videos/show-videos/show-videos.component.ts","./src/app/videos/show-videos/show-videos.component.html","./src/app/videos/videojs-test/videojs-test.component.ts","./src/app/videos/videojs-test/videojs-test.component.html","./src/app/videos/videos-routing.module.ts","./src/app/videos/videos.module.ts"],"names":[],"mappings":"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","file":"videos-videos-module-es2015.js","sourcesContent":["import {AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {API_URL, VIDEOJS_PLAYER_OPTIONS} from '@core/constants/global';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {AuthService} from '@core/services/auth.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport IsResponsive from '@core/helpers/is-responsive';\r\nimport {Subscription} from 'rxjs';\r\nimport {LoaderService} from '@core/services/loader.service';\r\nimport {Title} from '@angular/platform-browser';\r\n\r\n@Component({\r\n    selector: 'app-play-video',\r\n    templateUrl: './play-video.component.html',\r\n    styleUrls: ['./play-video.component.scss']\r\n})\r\nexport class PlayVideoComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    videoData;\r\n    apiUrl = API_URL;\r\n\r\n    authUser;\r\n    userVideoConnection = {liked: 0, disliked: 0, saved: '', viewed: false};\r\n    videoJSPlayerOptions = VIDEOJS_PLAYER_OPTIONS;\r\n\r\n    showTagsForm = false;\r\n    isSmallScreen = IsResponsive.isSmallScreen();\r\n\r\n    commentsRefreshed = false;\r\n    formValue;\r\n    videoComments = [];\r\n    commentsLoading = 'idle';\r\n    subscriptions: Subscription[] = [];\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private videoService: VideoService,\r\n        public router: Router,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        public auth: AuthService,\r\n        private toastr: ToastrService,\r\n        private loader: LoaderService,\r\n        private titleService: Title\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        const videoId = this.route.snapshot.queryParams.id;\r\n        const params = {id: videoId};\r\n\r\n        this.subscriptions.push(this.videoService.getVideoById(params).subscribe(dt => {\r\n            this.videoData = dt;\r\n            this.titleService.setTitle(dt.name);\r\n            if (this.auth.loggedIn()) {\r\n                this.userVideoConnection = this.checkUserVideoConnection(dt);\r\n                this.updateViewsCount(dt);\r\n                this.indexUserTags(dt);\r\n                this.getComments();\r\n            }\r\n        }));\r\n\r\n\r\n    }\r\n\r\n\r\n    checkUserVideoConnection(videoData) {\r\n        const userVideoConnection = videoData?.users_vids.find(u => u.id === this.authUser.id);\r\n        if (!userVideoConnection) {\r\n            return this.userVideoConnection;\r\n        } else {\r\n            const liked = userVideoConnection.users_videos?.liked;\r\n            const disliked = userVideoConnection.users_videos?.disliked;\r\n            const saved = userVideoConnection.users_videos.saved ? 'saved' : '';\r\n            const viewed = !!userVideoConnection?.users_videos?.viewed;\r\n            return {liked, disliked, saved, viewed};\r\n        }\r\n    }\r\n\r\n    updateViewsCount(dt) {\r\n        const params = {user_id: this.authUser.id, video_id: dt.id};\r\n        if (!this.userVideoConnection.viewed) {\r\n            this.subscriptions.push(this.videoService.updateViews(params).subscribe((d) => {\r\n                this.videoData = d;\r\n            }));\r\n        }\r\n    }\r\n\r\n    updateLikes(videoData, action) {\r\n        if (this.auth.loggedIn()) {\r\n\r\n            videoData = this.getLikesState(action, videoData);\r\n\r\n            this.videoService.updateLikes({\r\n                video_id: videoData.id,\r\n                user_id: this.authUser.id,\r\n                likes: videoData.likes,\r\n                dislikes: videoData.dislikes,\r\n                liked: this.userVideoConnection.liked,\r\n                disliked: this.userVideoConnection.disliked,\r\n                saved: videoData.saved\r\n            }).subscribe(dt => {\r\n\r\n            });\r\n        } else {\r\n            this.toastr.error('Please log in first to take this action');\r\n        }\r\n    }\r\n\r\n    getLikesState(action, videoData) {\r\n        if (action === 'like') {\r\n            this.userVideoConnection.liked = +!this.userVideoConnection.liked;\r\n            if (this.userVideoConnection.disliked) {\r\n                videoData.dislikes += videoData.dislikes === 0 ? 0 : -1;\r\n            }\r\n            this.userVideoConnection.disliked = 0;\r\n            videoData.likes += this.userVideoConnection.liked ? 1 : -1;\r\n\r\n        } else {\r\n            this.userVideoConnection.disliked = +!this.userVideoConnection.disliked;\r\n            if (this.userVideoConnection.liked) {\r\n                videoData.likes += videoData.likes === 0 ? 0 : -1;\r\n            }\r\n            this.userVideoConnection.liked = 0;\r\n            videoData.dislikes += this.userVideoConnection.disliked ? 1 : -1;\r\n        }\r\n        return videoData;\r\n    }\r\n\r\n    indexUserTags(dt) {\r\n        const params = {user_id: this.authUser.id, video_id: dt.id, tags: this.videoData?.tags};\r\n        this.subscriptions.push(this.videoService.indexUserTags(params).subscribe(d => {\r\n\r\n        }));\r\n    }\r\n\r\n\r\n    openChannelPage(videoData) {\r\n        this.router.navigate(['channels/show'], {queryParams: {username: videoData.users_vids[0].username}});\r\n    }\r\n\r\n    async openVideoByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n    saveVideo(videoData) {\r\n\r\n        this.subscriptions.push(this.videoService.saveVideo({\r\n            video_id: videoData.id,\r\n            user_id: this.authUser.id,\r\n            saved: this.userVideoConnection.saved === 'saved' ? 0 : 1\r\n        }).subscribe(dt => {\r\n            this.userVideoConnection.saved = dt.saved ? 'saved' : '';\r\n        }));\r\n    }\r\n\r\n    saveVideoDetails(e) {\r\n        this.subscriptions.push(this.videoService.saveVideoDetails(e)\r\n            .subscribe(dt => {\r\n                this.videoData = dt;\r\n                this.titleService.setTitle(dt.name);\r\n                this.showTagsForm = false;\r\n            }));\r\n    }\r\n\r\n    getComments() {\r\n        this.commentsLoading = 'loading';\r\n        this.subscriptions.push(this.videoService.getVideoComments({video_id: this.videoData.id}).subscribe(dt => {\r\n            this.videoComments = dt;\r\n            this.commentsLoading = 'finished';\r\n        }));\r\n    }\r\n\r\n    commentAdded(e) {\r\n        this.commentsRefreshed = true;\r\n        this.videoComments = e;\r\n    }\r\n\r\n    async getVideosByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n    buildSubscribersCountText(videoData) {\r\n        const count = videoData.channel.subscribers_count;\r\n        return count + ' subscriber' + (count === 1 ? '' : 's');\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n}\r\n","<app-user-tags *ngIf=\"auth.loggedIn()\" (tagSelected)=\"getVideosByTag($event)\"></app-user-tags>\r\n<div class=\"ads-block\">\r\n    <div class=\"ads-block-left\">\r\n        <ng-container *ngIf=\"videoData\">\r\n            <div class=\"videoWrap\">\r\n                <app-video-js-player [videoData]=\"videoData\"\r\n                                     [videoUrl]=\"apiUrl + 'uploads/videos/' + videoData.filename\"></app-video-js-player>\r\n                <!--                                <app-video-regular-player [videoData]=\"videoData\"></app-video-regular-player>-->\r\n                <!--                                <app-vjs-player [videoData]=\"videoData\" [options]=\"videoJSPlayerOptions\"></app-vjs-player>-->\r\n            </div>\r\n\r\n            <div class=\"main-tags\">\r\n                <div class=\"main-tags-text\">\r\n                    <span *ngIf=\"videoData.tags?.length === 0\">No tags defined for this video</span>\r\n                    <ng-container *ngIf=\"videoData.tags?.length > 0\">\r\n                        <p *ngFor=\"let tag of videoData.tags\" class=\"tag\" (click)=\"openVideoByTag(tag.name)\">\r\n                            #{{tag.name}}</p>\r\n                    </ng-container>\r\n                </div>\r\n\r\n                <div class=\"main-tags-like\">\r\n                    <div class=\"main-tags-share\" (click)=\"updateLikes(videoData, 'like')\">\r\n                        <i class=\"fas fa-thumbs-up\" [class.liked]=\"userVideoConnection?.liked\"></i>\r\n                        <p>{{videoData.likes}}</p>\r\n                    </div>\r\n                    <div class=\"main-tags-share\" (click)=\"updateLikes(videoData, 'dislike')\">\r\n                        <i class=\"fas fa-thumbs-down\"\r\n                           [class.disliked]=\"userVideoConnection?.disliked\"></i>\r\n                        <p>{{videoData.dislikes}}</p>\r\n                    </div>\r\n                    <div class=\"main-tags-share\">\r\n                        <i class=\"fas fa-share-alt\"></i>\r\n                        <p>Share</p>\r\n                    </div>\r\n                    <div class=\"main-tags-share\" (click)=\"saveVideo(videoData)\"\r\n                         [class.saved]=\"userVideoConnection?.saved === 'saved'\">\r\n                        <i class=\"fas fa-plus-square\"></i>\r\n                        <p>{{userVideoConnection?.saved === 'saved' ? 'Saved' : 'Save'}}</p>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"tags-container\">\r\n                <div class=\"editable-details\" *ngIf=\"!showTagsForm\">\r\n                    <p class=\"video-title\">{{videoData?.name}}</p>\r\n                    <button id=\"add-tags\"\r\n                            *ngIf=\"auth.loggedIn() && !showTagsForm && authUser?.id === videoData.author_id\"\r\n                            (click)=\"showTagsForm = !showTagsForm\">\r\n                        <mat-icon>edit</mat-icon>\r\n                        <span>Edit details</span>\r\n                    </button>\r\n                </div>\r\n                <app-video-details-form [videoData]=\"videoData\" *ngIf=\"showTagsForm\"\r\n                                        (formReady)=\"saveVideoDetails($event)\"></app-video-details-form>\r\n            </div>\r\n            <div class=\"details-row\">\r\n                <span class=\"views-count\">{{videoData?.views + ' view' + (videoData?.views === 1 ? '' : 's')}}</span>\r\n                <span class=\"dot\">&middot;</span>\r\n                <span class=\"date\">{{videoData.created_at|dateFromNow}}</span>\r\n            </div>\r\n            <div class=\"channel-block\" (click)=\"openChannelPage(videoData)\" *ngIf=\"videoData?.channel\">\r\n                <img alt=\"avatar\" class=\"avatar\" [src]=\"videoData.channel.avatar|getImgPath:'avatars'\">\r\n                <div>\r\n                    <p class=\"channel-name\">{{videoData.channel.name}}</p>\r\n                    <p class=\"subscribers-count\">{{buildSubscribersCountText(videoData)}}</p>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <app-video-suggestions *ngIf=\"isSmallScreen\"></app-video-suggestions>\r\n            </div>\r\n            <div class=\"comments-block\">\r\n                <app-video-comments-form *ngIf=\"auth.loggedIn()\" (added)=\"commentAdded($event)\" [videoData]=\"videoData\"\r\n                                         class=\"w-100\"></app-video-comments-form>\r\n                <mat-spinner [diameter]=\"15\"\r\n                             [hidden]=\"!auth.loggedIn() || commentsLoading === 'finished'\"></mat-spinner>\r\n                <app-video-comments-list [videoData]=\"videoData\"\r\n                                         [videoComments]=\"videoComments\"></app-video-comments-list>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"ads-block-right\">\r\n        <app-video-suggestions *ngIf=\"!isSmallScreen\"></app-video-suggestions>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n    Renderer2,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {FixTextLineBreaksPipe} from '@shared/pipes/fix-text-line-breaks.pipe';\r\n\r\n@Component({\r\n    selector: 'app-video-comments-form',\r\n    templateUrl: './video-comments-form.component.html',\r\n    styleUrls: ['./video-comments-form.component.scss']\r\n})\r\nexport class VideoCommentsFormComponent implements OnInit, AfterViewInit {\r\n    @Input() videoData;\r\n    videoCommentsForm: FormGroup;\r\n    inputFocused = false;\r\n    authUser;\r\n    isSubmitted = false;\r\n    replyUsername;\r\n    originalFormattedComment = '';\r\n\r\n\r\n    @Input() editComment = false;\r\n    @Input() selectedComment = null;\r\n    @Input() selectedReply = null;\r\n    @Input() reply = false;\r\n    @Input() isReplyComment = false;\r\n    @Input() reply2Reply = false;\r\n    @Input() parentComment = null;\r\n    @ViewChild('cEditable') cEditable;\r\n    @Output('added') commentAdded = new EventEmitter();\r\n    @Output('updated') commentUpdated = new EventEmitter();\r\n    @Output('cancelled') cancelled = new EventEmitter();\r\n\r\n    placeholderText;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private videoService: VideoService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private subject: SubjectService,\r\n        private cdr: ChangeDetectorRef,\r\n        private fixLineBreaks: FixTextLineBreaksPipe\r\n    ) {\r\n    }\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.authUser = this.getAuthUser.transform();\r\n        this.placeholderText = this.getPlaceholderText();\r\n\r\n        this.videoCommentsForm = this.fb.group({\r\n            id: [''],\r\n            from_id: [this.authUser.id],\r\n            comment: ['', Validators.required],\r\n            video_id: [this.videoData.id],\r\n            to_user_id: [0],\r\n            to_comment_id: [0],\r\n            to_reply_id: [0],\r\n            is_reply: [0]\r\n        });\r\n\r\n        if (this.reply2Reply) {\r\n            this.replyUsername = '@' + this.selectedReply?.user.username + ' ';\r\n            this.videoCommentsForm.patchValue({comment: this.replyUsername});\r\n        }\r\n\r\n    }\r\n\r\n    saveComment() {\r\n        this.isSubmitted = true;\r\n        if (this.videoCommentsForm.valid) {\r\n            // Reply add\r\n            if (this.reply) {\r\n                this.videoCommentsForm.patchValue({\r\n                    to_comment_id: this.selectedComment.id,\r\n                    to_user_id: this.selectedComment.user.id,\r\n                    is_reply: 1\r\n                });\r\n                // Reply edit\r\n            } else if (this.isReplyComment) {\r\n                this.videoCommentsForm.patchValue({\r\n                    to_comment_id: this.parentComment.id,\r\n                    to_user_id: this.parentComment.user.id,\r\n                    is_reply: 1\r\n                });\r\n            } else if (this.reply2Reply) {\r\n                const updatedUsername = '<strong class=\"reply-username\">' + this.replyUsername + '</strong>';\r\n                const reply2Reply = this.commentCtrl.value.replace(this.replyUsername, updatedUsername);\r\n                this.videoCommentsForm.patchValue({\r\n                    to_comment_id: this.selectedComment.id,\r\n                    to_reply_id: this.selectedReply.id,\r\n                    to_user_id: this.selectedComment.user.id,\r\n                    comment: reply2Reply,\r\n                    is_reply: 1\r\n                });\r\n            }\r\n\r\n            // Comment & reply actions\r\n            if (this.editComment) {\r\n\r\n                if (this.parentComment) {\r\n                    const updatedUsername = '<strong class=\"reply-username\">' + this.replyUsername + '</strong>';\r\n                    const reply2Reply = this.commentCtrl.value.replace(this.replyUsername, updatedUsername);\r\n                    this.videoCommentsForm.patchValue({comment: reply2Reply});\r\n                }\r\n\r\n\r\n                this.videoService.updateVideoComment(this.videoCommentsForm.value).subscribe(dt => {\r\n                    this.commentUpdated.emit(dt);\r\n                    this.videoCommentsForm.get('comment').reset();\r\n                });\r\n            } else {\r\n\r\n                this.videoService.addVideoComment(this.videoCommentsForm.value).subscribe(dt => {\r\n                    this.inputFocused = false;\r\n                    this.commentAdded.emit(dt);\r\n                    this.videoCommentsForm.get('comment').reset();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCancel() {\r\n        this.inputFocused = false;\r\n        this.videoCommentsForm.get('comment').reset();\r\n        if (this.editComment || this.reply || this.reply2Reply) {\r\n            this.cancelled.emit();\r\n        }\r\n    }\r\n\r\n\r\n    getPlaceholderText() {\r\n        return 'Add a public ' + (this.reply ? 'reply' : 'comment') + '...';\r\n    }\r\n\r\n    get commentCtrl() {\r\n        return this.videoCommentsForm.get('comment');\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.editComment) {\r\n            const comment = this.selectedComment.comment;\r\n            if (this.parentComment) {\r\n                this.replyUsername = comment.substring(\r\n                    comment.lastIndexOf('@'),\r\n                    comment.lastIndexOf(' ')\r\n                );\r\n            }\r\n            this.videoCommentsForm.patchValue({\r\n                comment: this.fixLineBreaks.transform(comment.replace(/<[^>]*>?/gm, '')),\r\n                id: this.selectedComment.id\r\n            });\r\n            this.inputFocused = true;\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n\r\n}\r\n","<form [formGroup]=\"videoCommentsForm\" class=\"w-100\">\r\n    <div class=\"d-flex mt-3 comment-input-container\">\r\n        <img class=\"avatar\" [src]=\"authUser.channel.avatar|getImgPath:'avatars'\">\r\n        <input type=\"hidden\" formControlName=\"comment\">\r\n        <mat-form-field floatLabel=\"never\">\r\n            <textarea matInput cdkTextareaAutosize [placeholder]=\"placeholderText\" class=\"comment-input\" #cEditable\r\n                      (focus)=\"inputFocused = true\"\r\n                      formControlName=\"comment\"></textarea>\r\n        </mat-form-field>\r\n    </div>\r\n    <div class=\"d-flex justify-content-end\">\r\n        <div [ngClass]=\"inputFocused ? 'd-flex':'d-none'\">\r\n            <button class=\"btn text-btn\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\r\n            <button (click)=\"saveComment()\" type=\"button\" [class.green-bg]=\"videoCommentsForm.valid\"\r\n                    class=\"ml-3 px-2 btn enter\">{{reply ? 'Reply' : 'Comment'}}\r\n            </button>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\n\r\n@Component({\r\n    selector: 'app-comment-actions',\r\n    templateUrl: './comment-actions.component.html',\r\n    styleUrls: ['./comment-actions.component.scss']\r\n})\r\nexport class CommentActionsComponent implements OnInit {\r\n    authUser;\r\n\r\n    @Input() comment;\r\n    @Output() commentSelected = new EventEmitter();\r\n    @Output() remove = new EventEmitter();\r\n\r\n\r\n    constructor(\r\n        private getAuthUser: GetAuthUserPipe\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n\r\n\r\n    selectComment(c) {\r\n        this.commentSelected.emit(c);\r\n    }\r\n\r\n    removeComment(c) {\r\n        this.remove.emit(c);\r\n    }\r\n\r\n\r\n}\r\n","<div class=\"more-actions\">\r\n\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n        <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n        <button mat-menu-item (click)=\"selectComment(comment)\">\r\n            <mat-icon>edit</mat-icon>\r\n            <span>Edit</span>\r\n        </button>\r\n        <button mat-menu-item (click)=\"removeComment(comment)\">\r\n            <mat-icon>delete</mat-icon>\r\n            <span>Delete</span>\r\n        </button>\r\n    </mat-menu>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-single-comment',\r\n    templateUrl: './single-comment.component.html',\r\n    styleUrls: ['./single-comment.component.scss']\r\n})\r\nexport class SingleCommentComponent implements OnInit {\r\n\r\n    @Input() comment;\r\n    @Input() videoData;\r\n    @Input() showReplyForm;\r\n    @Input() selectedComment;\r\n    @Input() selectedReply;\r\n    @Input() showReplies;\r\n    @Input() reply;\r\n    @Input() reply2Reply;\r\n\r\n    @Output() toggleReplies = new EventEmitter();\r\n    @Output() commentAdded = new EventEmitter();\r\n    @Output() selectComment = new EventEmitter();\r\n    @Output() likeDislikeComment = new EventEmitter();\r\n\r\n    authUser;\r\n\r\n    constructor(\r\n        private getAuthUser: GetAuthUserPipe,\r\n        public router: Router\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    isAuthor(c) {\r\n        return c.user.id === this.videoData.author_id;\r\n    }\r\n\r\n    getRepliesTogglerText(c) {\r\n        const len = c.replies.length;\r\n        return `View ${len + (len > 1 ? ' replies' : ' reply')}`;\r\n    }\r\n\r\n    selectCommentFn(c) {\r\n        this.selectComment.emit(c);\r\n    }\r\n\r\n    commentAddedFn(e) {\r\n        this.commentAdded.emit(e);\r\n    }\r\n\r\n    toggleRepliesFn(c) {\r\n        this.toggleReplies.emit(c);\r\n    }\r\n\r\n    likeDislikeCommentFn(c, liked = true) {\r\n        this.likeDislikeComment.emit({c, liked});\r\n    }\r\n\r\n    checkUserCommentConnection(c) {\r\n        const foundInReactors = c.reactors.find(r => r.id === this.authUser.id);\r\n        return foundInReactors?.users_comments;\r\n    }\r\n\r\n    getReactorsCount(reactors, reaction) {\r\n        return reactors.filter(r => r?.users_comments[reaction]).length;\r\n    }\r\n\r\n    getFullName(data) {\r\n        return data.first_name + ' ' + data.last_name;\r\n    }\r\n\r\n    async openChannelPage(username) {\r\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(async () =>\r\n            await this.router.navigate(['channels/show'], {queryParams: {username}})\r\n        );\r\n    }\r\n}\r\n","<div class=\"d-flex\">\r\n    <img class=\"avatar\" [src]=\"comment.user?.channel.avatar|getImgPath:'avatars'\">\r\n    <div class=\"details\">\r\n        <div class=\"d-flex align-items-center mb-2\">\r\n            <div class=\"mr-3 user-name\" [class.author.px-2]=\"isAuthor(comment)\"\r\n                 (click)=\"openChannelPage(comment?.user?.username)\">\r\n                {{getFullName(comment?.user)}} <i class=\"fas fa-check-circle ml-1\" *ngIf=\"isAuthor(comment)\"></i>\r\n            </div>\r\n            <div class=\"comment-date\">{{comment.created_at | dateFromNow}}</div>\r\n        </div>\r\n\r\n        <div class=\"comment-text mb-2\" [innerHTML]=\"comment.comment\">\r\n        </div>\r\n        <div class=\"likes-reply\">\r\n            <div class=\"comments-like mb-2\">\r\n                <i class=\"fa fa-thumbs-up mr-1\" (click)=\"likeDislikeCommentFn(comment)\"\r\n                   [class.liked]=\"checkUserCommentConnection(comment)?.liked\"></i>\r\n                <span class=\"likes-count\"> {{getReactorsCount(comment.reactors, 'liked') }} </span>\r\n                <i class=\"fa fa-thumbs-down ml-3 mr-1\" (click)=\"likeDislikeCommentFn(comment, false)\"\r\n                   [class.disliked]=\"checkUserCommentConnection(comment)?.disliked\"></i>\r\n                <span class=\"likes-count\"> {{getReactorsCount(comment.reactors, 'disliked') }} </span>\r\n            </div>\r\n            <div class=\"reply-container\">\r\n                <span class=\"reply\" (click)=\"selectCommentFn(comment)\">Reply</span>\r\n                <app-video-comments-form [videoData]=\"videoData\" [reply]=\"reply\"\r\n                                         *ngIf=\"showReplyForm && (comment.id===selectedComment?.id ||comment.id == selectedReply?.id)\"\r\n                                         [selectedComment]=\"selectedComment\" [reply2Reply]=\"reply2Reply\"\r\n                                         [selectedReply]=\"selectedReply\"\r\n                                         (added)=\"commentAddedFn($event)\"\r\n                                         class=\"w-100\"></app-video-comments-form>\r\n            </div>\r\n        </div>\r\n        <p class=\"replies-toggler mt-3\" *ngIf=\"comment?.replies?.length > 0\"\r\n           (click)=\"toggleRepliesFn(comment)\">\r\n            <mat-icon>expand_{{showReplies && selectedComment === comment ? 'more' : 'less'}}</mat-icon>\r\n            <span>{{getRepliesTogglerText(comment)}}</span>\r\n        </p>\r\n    </div>\r\n</div>\r\n","import {ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {ConfirmationDialogComponent} from '@core/components/modals/confirmation-dialog/confirmation-dialog.component';\r\nimport {Subscription} from 'rxjs';\r\nimport trackByElement from '@core/helpers/track-by-element';\r\n\r\n@Component({\r\n    selector: 'app-video-comments-list',\r\n    templateUrl: './video-comments-list.component.html',\r\n    styleUrls: ['./video-comments-list.component.scss'],\r\n    // changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class VideoCommentsListComponent implements OnInit, OnDestroy {\r\n\r\n    authUser;\r\n    selectedComment;\r\n    subscriptions: Subscription[] = [];\r\n    showReplyForm = false;\r\n    showReplyToReplyForm = false;\r\n    showReplies = false;\r\n    editReply = false;\r\n    selectedReply;\r\n    trackByElement = trackByElement;\r\n\r\n    @Input() videoData;\r\n    @Input() videoComments = [];\r\n    @Input() editComment = false;\r\n\r\n    constructor(\r\n        private subject: SubjectService,\r\n        private videoService: VideoService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private dialog: MatDialog\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n\r\n    isAuthor(c) {\r\n        return c.user.id === this.videoData.author_id;\r\n    }\r\n\r\n    isMyComment(c) {\r\n        return c.user.id === this.authUser.id;\r\n    }\r\n\r\n    getUpdatedComments(e) {\r\n        this.videoComments = e;\r\n        this.editComment = false;\r\n        this.editReply = false;\r\n        this.selectedComment = e.find(cm => cm.id === this.selectedComment?.id);\r\n        this.selectedReply = e.find(c => c.id === this.selectedReply?.id);\r\n    }\r\n\r\n    selectComment(c, replyBtnClicked = false, replyCommentSelected = false) {\r\n        if (!replyBtnClicked && !replyCommentSelected) {\r\n            this.editComment = !this.editComment;\r\n            this.showReplyForm = !this.editComment;\r\n            this.selectedComment = c;\r\n        } else if (replyCommentSelected) {\r\n            this.editReply = true;\r\n            this.selectedReply = c;\r\n        } else {\r\n            this.showReplyForm = this.selectedComment !== c || !this.showReplyForm;\r\n            this.selectedComment = c;\r\n        }\r\n    }\r\n\r\n    replyToReply(c, r) {\r\n        this.showReplyToReplyForm = this.selectedReply !== r || !this.showReplyToReplyForm;\r\n        this.selectedComment = c;\r\n        this.selectedReply = r;\r\n    }\r\n\r\n\r\n    removeComment(c) {\r\n        this.subscriptions.push(this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed) {\r\n                this.videoService.removeVideoComment({\r\n                    user_id: this.authUser.id,\r\n                    id: c.id,\r\n                    video_id: c.video_id\r\n                }).subscribe(dt => {\r\n                    this.videoComments = dt;\r\n                    this.selectedComment = dt.find(cm => cm.id === this.selectedComment?.id);\r\n                });\r\n            }\r\n        }));\r\n    }\r\n\r\n    commentAdded(e) {\r\n        this.videoComments = e;\r\n        this.showReplyForm = false;\r\n        this.showReplyToReplyForm = false;\r\n        this.showReplies = true;\r\n        this.selectedComment = e.find(c => c.id === this.selectedComment.id);\r\n    }\r\n\r\n    toggleReplies(c) {\r\n        this.showReplies = !this.showReplies;\r\n        this.selectedComment = c;\r\n    }\r\n\r\n    likeDislikeComment(e) {\r\n        const params = this.buildParams(e.c, e.liked);\r\n\r\n\r\n        this.subscriptions.push(this.videoService.updateCommentLikes(params).subscribe(dt => {\r\n            this.videoComments = dt;\r\n            this.showReplies = true;\r\n            this.selectedComment = this.videoComments.find(comm => comm.id === this.selectedComment?.id);\r\n        }));\r\n    }\r\n\r\n    buildParams(c, liked) {\r\n        const params = {\r\n            video_id: c.video_id,\r\n            comment_id: c.id,\r\n            user_id: this.authUser.id,\r\n            liked: 0,\r\n            disliked: 0,\r\n            likes: c.likes,\r\n            dislikes: c.dislikes\r\n        };\r\n        const conn = this.checkUserCommentConnection(c);\r\n\r\n        // Avoiding negative values here\r\n        params.likes = Math.max(0, conn?.liked ? --c.likes : +c.likes);\r\n        params.dislikes = Math.max(0, conn?.disliked ? --c.dislikes : +c.dislikes);\r\n\r\n\r\n        if (liked) {\r\n            params.liked = +!conn?.liked;\r\n        } else {\r\n            params.disliked = +!conn?.disliked;\r\n        }\r\n\r\n        return params;\r\n    }\r\n\r\n    getReactorsCount(reactors, reaction) {\r\n        return reactors.filter(r => r?.users_comments[reaction]).length;\r\n    }\r\n\r\n\r\n    checkUserCommentConnection(comment) {\r\n        const foundInReactors = comment.reactors?.find(r => r.id === this.authUser.id);\r\n        return foundInReactors?.users_comments;\r\n    }\r\n\r\n    isCommentShown(c) {\r\n        return (c.id !== this.selectedComment?.id && !this.showReplyForm) || this.showReplyForm || !this.editComment;\r\n    }\r\n\r\n    isReplyShown(c) {\r\n        return this.showReplies && this.selectedComment === c;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n}\r\n","<div class=\"comments-container\" [hidden]=\"videoComments.length === 0\">\r\n    <ng-container *ngFor=\"let c of videoComments\">\r\n        <div class=\"comment d-flex mt-4\" *ngIf=\"isCommentShown(c)\">\r\n            <div class=\"left-group\" [class.w-100]=\"editComment\">\r\n                <app-single-comment [comment]=\"c\" [videoData]=\"videoData\" [showReplyForm]=\"showReplyForm\"\r\n                                    [showReplies]=\"showReplies\" [selectedComment]=\"selectedComment\"\r\n                                    class=\"w-100\" [reply]=\"true\" (likeDislikeComment)=\"likeDislikeComment($event)\"\r\n                                    (commentAdded)=\"commentAdded($event)\" (toggleReplies)=\"toggleReplies($event)\"\r\n                                    (selectComment)=\"selectComment($event, true)\"></app-single-comment>\r\n                <div class=\"replies\" [hidden]=\"!isReplyShown(c)\">\r\n                    <ng-container *ngFor=\"let reply of c.replies\">\r\n                        <div class=\"d-flex reply mt-4\" *ngIf=\"reply.id!==selectedReply?.id || !editReply\">\r\n                            <div class=\"left-group\">\r\n                                <app-single-comment [comment]=\"reply\" [videoData]=\"videoData\"\r\n                                                    [showReplyForm]=\"showReplyToReplyForm\"\r\n                                                    [showReplies]=\"showReplies\"\r\n                                                    [selectedComment]=\"selectedComment\"\r\n                                                    [selectedReply]=\"selectedReply\" [reply2Reply]=\"true\"\r\n                                                    (likeDislikeComment)=\"likeDislikeComment($event)\"\r\n                                                    (commentAdded)=\"commentAdded($event)\" class=\"w-100\"\r\n                                                    (selectComment)=\"replyToReply(c, reply)\"></app-single-comment>\r\n                            </div>\r\n                            <div class=\"right-group\">\r\n                                <app-comment-actions [comment]=\"reply\"\r\n                                                     *ngIf=\"isMyComment(reply) && !editReply\"\r\n                                                     (remove)=\"removeComment($event)\"\r\n                                                     (commentSelected)=\"selectComment($event, false,true)\">\r\n                                </app-comment-actions>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <app-video-comments-form [editComment]=\"true\" [selectedComment]=\"selectedReply\"\r\n                                                 class=\"w-100\" [isReplyComment]=\"true\" [parentComment]=\"c\"\r\n                                                 *ngIf=\"editReply && reply.id===selectedReply.id\"\r\n                                                 (updated)=\"getUpdatedComments($event)\"\r\n                                                 (cancelled)=\"editReply = false\"\r\n                                                 [videoData]=\"videoData\">\r\n                        </app-video-comments-form>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n            <div class=\"right-group\">\r\n                <app-comment-actions [comment]=\"c\" *ngIf=\"isMyComment(c) && !editComment\"\r\n                                     (remove)=\"removeComment($event)\"\r\n                                     (commentSelected)=\"selectComment($event)\">\r\n                </app-comment-actions>\r\n            </div>\r\n        </div>\r\n        <app-video-comments-form [editComment]=\"true\" [selectedComment]=\"selectedComment\"\r\n                                 class=\"edit-comment-form w-100\"\r\n                                 *ngIf=\"editComment && c.id===selectedComment.id\"\r\n                                 (updated)=\"getUpdatedComments($event)\" (cancelled)=\"editComment = false\"\r\n                                 [videoData]=\"videoData\">\r\n        </app-video-comments-form>\r\n    </ng-container>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport {MatChipInputEvent} from '@angular/material/chips';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {API_URL, TAG_CHARACTERS_LIMIT} from '@core/constants/global';\r\nimport {DROPZONE_CONFIG} from 'ngx-dropzone-wrapper';\r\n\r\n@Component({\r\n    selector: 'app-video-details-form',\r\n    templateUrl: './video-details-form.component.html',\r\n    styleUrls: ['./video-details-form.component.scss']\r\n})\r\nexport class VideoDetailsFormComponent implements OnInit {\r\n    @Input('videoData') videoData;\r\n    @Output('formReady') formReady = new EventEmitter();\r\n    videoDetailsForm: FormGroup;\r\n\r\n    isSubmitted = false;\r\n    readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n\r\n    apiUrl = API_URL;\r\n\r\n    thumbnailFile;\r\n\r\n    dropzoneConfig = DROPZONE_CONFIG;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private toastr: ToastrService\r\n    ) {\r\n        this.videoDetailsForm = this.fb.group({\r\n            name: ['', [Validators.required, Validators.maxLength(TAG_CHARACTERS_LIMIT)]],\r\n            tags: [[], Validators.required],\r\n            thumbnail: [''],\r\n            video_id: []\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.videoDetailsForm.patchValue({\r\n            video_id: this.videoData.id,\r\n            ...this.videoData\r\n        });\r\n    }\r\n\r\n    add(event: MatChipInputEvent): void {\r\n        const input = event.input;\r\n        const value = event.value;\r\n\r\n        if ((value || '').trim()) {\r\n            if (this.videoData.tags.length === 3) {\r\n                this.toastr.error('We don\\'t support more than 3 tags per video');\r\n            } else {\r\n                this.videoData.tags.push({name: value.trim()});\r\n                this.videoDetailsForm.patchValue({tags: this.videoData.tags});\r\n            }\r\n\r\n            // this.saveTags();\r\n        }\r\n\r\n        // Reset the input value\r\n        if (input) {\r\n            input.value = '';\r\n        }\r\n    }\r\n\r\n    remove(tag): void {\r\n        const index = this.videoData.tags.indexOf(tag);\r\n\r\n        if (index >= 0) {\r\n            this.videoData.tags.splice(index, 1);\r\n            this.videoDetailsForm.patchValue({tags: this.videoData.tags});\r\n        }\r\n    }\r\n\r\n    removeThumbnail() {\r\n        this.videoDetailsForm.patchValue({thumbnail: ''});\r\n        this.videoData.thumbnail = '';\r\n    }\r\n\r\n    changeThumbnail(e) {\r\n        this.thumbnailFile = e.target.files[0];\r\n        this.videoDetailsForm.patchValue({thumbnail: this.thumbnailFile.name});\r\n    }\r\n\r\n    saveDetails() {\r\n        this.videoDetailsForm.patchValue({tags: this.videoData.tags});\r\n        this.isSubmitted = true;\r\n        if (this.videoDetailsForm.valid) {\r\n            const formData = new FormData();\r\n            for (const field in this.videoDetailsForm.value) {\r\n                if (field !== 'tags') {\r\n                    formData.append(field, this.videoDetailsForm.value[field]);\r\n                } else {\r\n                    formData.append(field, JSON.stringify(this.videoDetailsForm.value[field]));\r\n                }\r\n            }\r\n            if (this.thumbnailFile) {\r\n                formData.append('video_thumbnail_file', this.thumbnailFile, this.thumbnailFile.name);\r\n            }\r\n            this.formReady.emit(formData);\r\n        }\r\n    }\r\n\r\n    removeImage() {\r\n\r\n    }\r\n\r\n    onAddedFile(e) {\r\n        this.thumbnailFile = e[0];\r\n        this.videoDetailsForm.patchValue({thumbnail: this.thumbnailFile.name});\r\n    }\r\n\r\n}\r\n","<form [formGroup]=\"videoDetailsForm\" id=\"tags-form\">\r\n    <div class=\"left-group\">\r\n\r\n        <div id=\"video-name\">\r\n            <mat-form-field>\r\n                <input matInput formControlName=\"name\">\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"isSubmitted && videoDetailsForm.get('name').hasError('required')\">\r\n                The video name is required\r\n            </mat-error>\r\n            <mat-error *ngIf=\"videoDetailsForm.get('name').hasError('maxlength')\">\r\n                Not more than 12 characters please\r\n            </mat-error>\r\n        </div>\r\n    </div>\r\n    <div class=\"center-group\">\r\n        <div class=\"image-container\" *ngIf=\"videoData.thumbnail\">\r\n            <img class=\"saved-thumbnail\" [src]=\"apiUrl+ 'uploads/thumbnails/'+videoData.thumbnail\">\r\n        </div>\r\n        <div class=\"actions-container\">\r\n            <button id=\"change-thumbnail\" *ngIf=\"videoData.thumbnail\" (click)=\"removeThumbnail()\">Change thumbnail\r\n            </button>\r\n            <dropzone [config]=\"dropzoneConfig\" [hidden]=\"videoData.thumbnail\" (removedFile)=\"removeImage()\"\r\n                      id=\"video-thumbnail-dropzone\" class=\"single\" #dropzone (thumbnail)=\"onAddedFile($event)\"\r\n                      [message]=\"'Click or drag an image to upload'\">\r\n            </dropzone>\r\n            <input type=\"file\" (change)=\"changeThumbnail($event)\" [hidden]=\"true\">\r\n        </div>\r\n    </div>\r\n    <div class=\"right-group\">\r\n\r\n        <div id=\"video-tags\">\r\n            <mat-form-field class=\"example-chip-list\">\r\n                <mat-chip-list #tagList formControlName=\"tags\">\r\n                    <mat-chip *ngFor=\"let tag of videoData.tags\" (removed)=\"remove(tag)\">\r\n                        {{tag.name}}\r\n                        <mat-icon matChipRemove>cancel</mat-icon>\r\n                    </mat-chip>\r\n                    <input placeholder=\"Tags...\" #chipsInput\r\n                           [matChipInputFor]=\"tagList\"\r\n                           [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                           (matChipInputTokenEnd)=\"add($event)\">\r\n                </mat-chip-list>\r\n                <mat-hint align=\"end\">Please press 'Enter' after the tag name</mat-hint>\r\n\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"videoData.tags.length ===0 && isSubmitted\">Please provide some tags describing your live\r\n                video\r\n            </mat-error>\r\n        </div>\r\n\r\n        <div class=\"actions\">\r\n            <button id=\"save-tags\" (click)=\"saveDetails()\">\r\n                <mat-icon>checked</mat-icon>\r\n                <span>Save changes</span>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {PlaylistsService} from '@core/services/playlists.service';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {API_URL, DEFAULT_VIDEO_SUGGESTIONS_COUNT} from '@core/constants/global';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {ConfirmationDialogComponent} from '@core/components/modals/confirmation-dialog/confirmation-dialog.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {environment} from '@env';\r\n\r\n@Component({\r\n    selector: 'app-video-suggestions',\r\n    templateUrl: './video-suggestions.component.html',\r\n    styleUrls: ['./video-suggestions.component.scss']\r\n})\r\nexport class VideoSuggestionsComponent implements OnInit {\r\n\r\n    urlParams;\r\n    videoId;\r\n    playlistId;\r\n    playlistData;\r\n\r\n    playlistOpened = false;\r\n    videoSuggestions = [];\r\n\r\n    apiUrl = API_URL;\r\n    authUser;\r\n\r\n    isProduction = environment.production;\r\n\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private playlistsService: PlaylistsService,\r\n        private videoService: VideoService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        public router: Router,\r\n        private dialog: MatDialog\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.urlParams = this.route.snapshot.queryParams;\r\n        this.videoId = +this.urlParams?.id;\r\n        this.playlistId = this.urlParams?.playlist_id;\r\n        this.playlistOpened = !!this.playlistId;\r\n\r\n        if (this.playlistOpened) {\r\n            this.playlistsService.getById({playlist_id: this.playlistId}).subscribe(dt => {\r\n                this.playlistData = dt;\r\n            });\r\n        }\r\n\r\n        this.videoService.get({limit: DEFAULT_VIDEO_SUGGESTIONS_COUNT}).subscribe(dt => {\r\n            this.videoSuggestions = dt.videos;\r\n        });\r\n\r\n    }\r\n\r\n    openVideoPage(video, playlistId = null) {\r\n        const route = '/videos/play';\r\n        const params = {id: video.id, playlist_id: playlistId};\r\n\r\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(async () =>\r\n            await this.router.navigate([route], {queryParams: params})\r\n        );\r\n\r\n    }\r\n\r\n    removeVideoFromPlaylist(video, playlistId) {\r\n        this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed) {\r\n                this.playlistsService.removeVideoFromPlaylist({\r\n                    playlist_id: playlistId,\r\n                    video_id: video.id\r\n                }).subscribe(dt => {\r\n                    const oldVideoIndex = this.playlistData.videos.indexOf(video);\r\n                    this.playlistData.videos = dt.videos;\r\n                    const nextVideo = this.playlistData.videos[oldVideoIndex];\r\n                    if (nextVideo) {\r\n                        this.openVideoPage(nextVideo);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div class=\"playlist-wrap\" *ngIf=\"playlistOpened && playlistData && playlistData.videos.length > 0\">\r\n    <h2>{{playlistData.name}}</h2>\r\n    <div class=\"list-wrap\">\r\n        <ng-container *ngFor=\"let video of playlistData.videos\">\r\n\r\n            <div class=\"playlist-video\" [class.selected]=\"videoId === video.id\"\r\n                 (click)=\"openVideoPage(video, playlistData?.id)\">\r\n\r\n                <div class=\"thumbnail-container\">\r\n                    <img [src]=\"video.thumbnail|getImgPath\">\r\n                </div>\r\n\r\n                <div class=\"details-container\">\r\n                    <p class=\"video-name\" (click)=\"openVideoPage(video, playlistData?.id)\">{{video.name}}</p>\r\n                    <p class=\"main-text-3\">{{video.channel.name}}</p>\r\n                </div>\r\n\r\n                <div class=\"remove-btn-container\" *ngIf=\"authUser.id === playlistData.channel.id\"\r\n                     (click)=\"removeVideoFromPlaylist(video,playlistId)\">\r\n                    <span class=\"material-icons\">delete</span>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"suggested-videos\" *ngFor=\"let video of videoSuggestions;let ind = index\">\r\n    <div class=\"suggested-video\" *ngIf=\"ind < 5\">\r\n\r\n        <div class=\"thumbnail-container\">\r\n            <img [src]=\"video.thumbnail|getImgPath\" (click)=\"openVideoPage(video)\">\r\n        </div>\r\n\r\n        <div class=\"details-container\">\r\n            <p class=\"video-name\">{{video.name}}</p>\r\n            <p class=\"channel-sub-name\">{{video.channel.name}}</p>\r\n            <div class=\"details-row\">\r\n                <span class=\"watchers-count\">\r\n                    {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\r\n                </span>\r\n                <span class=\"dot\">&middot;</span>\r\n                <span class=\"upload-time\">{{video.created_at|dateFromNow}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<!--<div [hidden]=\"isProduction\">-->\r\n<!--    <img class=\"ads\" src=\"assets/img/ads.png\">-->\r\n<!--    <img class=\"ads\" src=\"assets/img/ads.png\">-->\r\n<!--</div>-->\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {buildPlayVideoRoute} from '@core/helpers/build-play-video-route';\r\n\r\n@Component({\r\n    selector: 'app-show-saved-videos',\r\n    templateUrl: './show-saved-videos.component.html',\r\n    styleUrls: ['./show-saved-videos.component.scss']\r\n})\r\nexport class ShowSavedVideosComponent implements OnInit {\r\n\r\n    userVideos;\r\n    channelsVideos = [];\r\n    apiUrl = API_URL;\r\n    search;\r\n    authUser;\r\n\r\n    constructor(\r\n        private videoService: VideoService,\r\n        public router: Router,\r\n        private subject: SubjectService,\r\n        private channelsService: ChannelsService,\r\n        private route: ActivatedRoute,\r\n        private getAuthUser: GetAuthUserPipe\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.authUser = this.getAuthUser.transform();\r\n\r\n        this.videoService.getUserSavedVideos({user_id: this.authUser.id}).subscribe(dt => {\r\n            this.userVideos = dt;\r\n        });\r\n    }\r\n\r\n    async openVideoPage(video, username) {\r\n        const r = buildPlayVideoRoute(video, username);\r\n        await this.router.navigate([r.route], {queryParams: r.params});\r\n    }\r\n\r\n    openChannelPage(channel, username) {\r\n        this.router.navigate(['channels/show'], {queryParams: {username}});\r\n    }\r\n\r\n    async getVideosByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n}\r\n","<div id=\"videos-list\" *ngIf=\"userVideos\">\r\n    <ng-container *ngIf=\"!search\">\r\n        <div class=\"video-container flex-wrap\" *ngFor=\"let video of userVideos.users_vids\">\r\n            <div class=\"thumbnail\">\r\n                <img [src]=\"video.thumbnail|getImgPath\" (click)=\"openVideoPage(video, userVideos.username)\">\r\n                <span class=\"duration\">{{video.duration}}</span>\r\n            </div>\r\n            <div class=\"details\">\r\n                <h4 class=\"title\">{{video.name}}</h4>\r\n                <div class=\"shortened-details\">\r\n                    <span class=\"channel-name\"\r\n                          (click)=\"openChannelPage(video.user.channel, video.user.username)\">{{video.channel.name}}</span>\r\n                    <span class=\"dot\">&middot;</span>\r\n                    <span class=\"watchers-count\">\r\n                        {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\r\n                    </span>\r\n                    <span class=\"dot\">&middot;</span>\r\n                    <span class=\"upload-time\">{{video.created_at | dateFromNow}}</span>\r\n                </div>\r\n                <p class=\"shortened-description\">\r\n                   {{video.description}}\r\n                </p>\r\n\r\n                <div class=\"tags\">\r\n                    <ul>\r\n                        <li *ngFor=\"let tag of video?.tags\" (click)=\"getVideosByTag(tag.name)\">\r\n                            <span>{{tag.name}}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-show-playlists-list',\r\n    templateUrl: './show-playlists-list.component.html',\r\n    styleUrls: ['./show-playlists-list.component.scss']\r\n})\r\nexport class ShowPlaylistsListComponent implements OnInit {\r\n\r\n    @Input('items') items;\r\n    @Input('authUser') authUser;\r\n\r\n    constructor(\r\n        public router: Router\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    async openPlaylistPage(playlist, firstVideoId) {\r\n        const route = 'videos/play';\r\n        const params = {id: firstVideoId, playlist_id: playlist.id};\r\n        await this.router.navigate([route], {queryParams: params});\r\n    }\r\n\r\n}\r\n","<div class=\"playlist-container\" *ngFor=\"let playlist of items.playlists\">\r\n    <ng-container *ngIf=\"playlist.videos.length > 0\">\r\n        <div class=\"thumbnail-container\" (click)=\"openPlaylistPage(playlist, playlist.videos[0].id)\">\r\n            <div class=\"thumbnail\">\r\n                <div class=\"short-details\">\r\n                    <mat-icon>playlist_add_check</mat-icon>\r\n                    <p class=\"name\">{{playlist.name}}</p>\r\n                    <p class=\"video-count\">{{playlist.videos.length + (playlist.videos.length === 1 ? ' video' : ' videos')}}</p>\r\n                </div>\r\n                <img [src]=\"playlist.thumbnail|getImgPath\">\r\n            </div>\r\n            <div class=\"fake-bg thumbnail\"></div>\r\n        </div>\r\n        <div class=\"details\">\r\n\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {buildPlayVideoRoute} from '@core/helpers/build-play-video-route';\r\nimport trackByElement from '@core/helpers/track-by-element';\r\nimport {Router} from '@angular/router';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector: 'app-show-regular-list',\r\n    templateUrl: './show-regular-list.component.html',\r\n    styleUrls: ['./show-regular-list.component.scss']\r\n})\r\nexport class ShowRegularListComponent implements OnInit {\r\n\r\n    @Input('items') items;\r\n    @Input('authUser') authUser;\r\n    trackByElement = trackByElement;\r\n\r\n    constructor(\r\n        public router: Router\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    async openVideoPage(video, username) {\r\n        const r = buildPlayVideoRoute(video, username);\r\n        await this.router.navigate([r.route], {queryParams: r.params});\r\n    }\r\n\r\n    async openChannelPage(channel, username) {\r\n        await this.router.navigate(['channels/show'], {queryParams: {username}});\r\n    }\r\n\r\n    checkIfSavedByCurrentUser(video) {\r\n        return video.users_vids.find(v => v.username === this.authUser?.username && v.users_videos.saved);\r\n    }\r\n\r\n    checkIfNewVideo(video) {\r\n        const duration = moment.duration(moment().diff(video.created_at));\r\n        return Math.floor(duration.asDays()) < 7;\r\n    }\r\n\r\n    async getVideosByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n}\r\n","<div id=\"regular-video-list-container\">\r\n    <div class=\"video-container flex-wrap\" *ngFor=\"let video of items.videos; trackBy: trackByElement\">\r\n        <div class=\"thumbnail\">\r\n            <img [src]=\"video.thumbnail|getImgPath\" (click)=\"openVideoPage(video, video.user.username)\">\r\n            <span class=\"live-now\" *ngIf=\"video.status==='live'\">Live now</span>\r\n            <span class=\"duration\">{{video.duration}}</span>\r\n        </div>\r\n        <div class=\"details\">\r\n            <h4 class=\"title\">{{video.name}}</h4>\r\n            <div class=\"shortened-details\">\r\n                    <span class=\"channel-name\" (click)=\"openChannelPage(video.user.channel, video.user.username)\">\r\n                        {{video.user.channel.name}}\r\n                    </span>\r\n                <span class=\"dot\">&middot;</span>\r\n                <span class=\"watchers-count\">\r\n                        {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\r\n                    </span>\r\n                <span class=\"dot\">&middot;</span>\r\n                <span class=\"upload-time\">{{video.created_at | dateFromNow}}</span>\r\n            </div>\r\n            <p class=\"shortened-description\">\r\n                {{video.description}}\r\n            </p>\r\n\r\n            <div class=\"saved-video\" *ngIf=\"checkIfSavedByCurrentUser(video)\">\r\n                <mat-icon>turned_in</mat-icon>\r\n                <span>Saved</span>\r\n            </div>\r\n\r\n            <div class=\"tags\">\r\n                <ul>\r\n                    <li *ngFor=\"let tag of video?.tags\" (click)=\"getVideosByTag(tag.name)\">\r\n                        <span>{{tag.name}}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div class=\"is-new-video\" *ngIf=\"checkIfNewVideo(video)\">\r\n                <span class=\"new\">New</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {buildPlayVideoRoute} from '@core/helpers/build-play-video-route';\r\n\r\n@Component({\r\n    selector: 'app-show-search-results',\r\n    templateUrl: './show-search-results.component.html',\r\n    styleUrls: ['./show-search-results.component.scss']\r\n})\r\nexport class ShowSearchResultsComponent implements OnInit {\r\n\r\n    @Input('channelsVideos') channelsVideos;\r\n    @Input('authUser') authUser;\r\n\r\n    constructor(\r\n        public router: Router,\r\n        private subject: SubjectService,\r\n        private channelsService: ChannelsService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    async openChannelPage(channel, username) {\r\n        await this.router.navigate(['channels/show'], {queryParams: {username}});\r\n    }\r\n\r\n    async openVideoPage(video, username) {\r\n        const r = buildPlayVideoRoute(video, username);\r\n        await this.router.navigate([r.route], {queryParams: r.params});\r\n    }\r\n\r\n    subscribeToChannel(channel) {\r\n        this.channelsService.subscribeToChannel({user_id: this.authUser.id, channel_id: channel.id}).subscribe(dt => {\r\n            this.channelsService.getUserChannelSubscriptions({user_id: this.authUser.id}).subscribe(d => {\r\n                this.subject.setUserSubscriptions(d);\r\n                if (this.checkIfSubscribed(channel)) {\r\n                    channel.subscribers = channel.subscribers.filter(s => s.id !== this.authUser?.id);\r\n                } else {\r\n                    channel.subscribers.push(this.authUser);\r\n                }\r\n                // console.log(channel.subscribers)\r\n                // channel.subscribers = channel.subscribers.filter(s => s.id !== this.authUser?.id).concat([this.authUser]);\r\n                // console.log(channel.subscribers)\r\n\r\n                // this.searchChannelsVideos({search: this.search, filters: this.filters});\r\n            });\r\n        });\r\n    }\r\n\r\n    checkIfSubscribed(channel) {\r\n        return channel.subscribers.find(s => s.id === this.authUser?.id);\r\n    }\r\n\r\n    getDesc(d) {\r\n        return d?.replace(/<br\\s*[\\/]?>/gi, '\\n');\r\n    }\r\n\r\n\r\n}\r\n","<div id=\"search-results-container\">\r\n    <ng-container *ngFor=\"let channel of channelsVideos\">\r\n        <div class=\"channel-item\">\r\n            <div class=\"thumbnail\">\r\n                <img class=\"avatar\" [src]=\"channel.avatar|getImgPath:'avatars'\"\r\n                     (click)=\"openChannelPage(channel,channel.user?.username)\">\r\n            </div>\r\n            <div class=\"info\">\r\n                <p class=\"name\" (click)=\"openChannelPage(channel, channel?.user?.username)\">{{channel.name}}</p>\r\n                <div class=\"shortened-details\">\r\n                    <p class=\"video-count\">{{channel.videos.length + (channel.videos.length === 1 ? ' video' : ' videos')}}</p>\r\n                </div>\r\n                <p>{{getDesc(channel.description)}}</p>\r\n                <button class=\"btn subscribe-to-channel-btn\" *ngIf=\"channel?.user?.username !== authUser?.username\"\r\n                        [class.subscribed]=\"checkIfSubscribed(channel)\"\r\n                        (click)=\"subscribeToChannel(channel)\">{{checkIfSubscribed(channel) ? 'Subscribed' : 'Subscribe'}}\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"video-container\" *ngFor=\"let video of channel.videos\">\r\n            <div class=\"thumbnail\">\r\n                <img [src]=\"video.thumbnail|getImgPath\" (click)=\"openVideoPage(video, channel.user.username)\">\r\n                <span class=\"duration\">{{video.duration}}</span>\r\n            </div>\r\n            <div class=\"details\">\r\n                <h4 class=\"title\">{{video.name}}</h4>\r\n                <div class=\"shortened-details\">\r\n                    <span class=\"channel-name\">{{channel.name}}</span>\r\n                    <span class=\"dot\">&middot;</span>\r\n                    <span class=\"watchers-count\">\r\n                    {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\r\n                </span>\r\n                    <span class=\"dot\">&middot;</span>\r\n                    <span class=\"upload-time\">{{video.created_at | dateFromNow}}</span>\r\n                </div>\r\n                <p class=\"shortened-description\">\r\n                    {{video.description}}\r\n                </p>\r\n                <div class=\"tags\">\r\n                    <ul>\r\n                        <li *ngFor=\"let tag of video?.tags\">\r\n                            <span>{{tag.name}}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {API_URL} from '@core/constants/global';\r\nimport * as moment from 'moment';\r\nimport {ActivatedRoute, ActivationEnd, Data, Router} from '@angular/router';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {filter, map, tap} from 'rxjs/operators';\r\nimport {checkIfObjectEmpty} from '@core/helpers/check-if-object-empty';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {FilterOutFalsyValuesFromObjectPipe} from '@shared/pipes/filter-out-falsy-values-from-object.pipe';\r\nimport {Subscription} from 'rxjs';\r\nimport {buildPlayVideoRoute} from '@core/helpers/build-play-video-route';\r\n\r\n@Component({\r\n    selector: 'app-show-videos',\r\n    templateUrl: './show-videos.component.html',\r\n    styleUrls: ['./show-videos.component.scss']\r\n})\r\nexport class ShowVideosComponent implements OnInit, OnDestroy {\r\n    items = {videos: [], playlists: []};\r\n    channelsVideos = [];\r\n    apiUrl = API_URL;\r\n    search;\r\n    selectedTag;\r\n    authUser;\r\n    showTrending = false;\r\n    showFilters = false;\r\n    filters = {};\r\n    filterStatus = 'idle';\r\n    subscriptions: Subscription[] = [];\r\n    loadingVideos = false;\r\n\r\n    constructor(\r\n        private videoService: VideoService,\r\n        public router: Router,\r\n        private subject: SubjectService,\r\n        private channelsService: ChannelsService,\r\n        private route: ActivatedRoute,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private getExactParams: FilterOutFalsyValuesFromObjectPipe\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n\r\n        this.subscriptions.push(\r\n            this.route.queryParams.subscribe(d => {\r\n                this.search = this.route.snapshot.queryParams?.search;\r\n                this.showTrending = this.router.url.includes('trending');\r\n                this.selectedTag = this.route.snapshot.queryParams?.tag;\r\n                if (this.search) {\r\n                    this.searchChannelsVideos({search: this.search, filters: this.filters});\r\n                } else {\r\n                    this.getVideosList({search: this.search, filters: this.filters, tag: this.selectedTag});\r\n                }\r\n            }));\r\n\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n\r\n    }\r\n\r\n    getFilteredList(filters = {}) {\r\n        this.filters = filters;\r\n        this.filterStatus = 'applied';\r\n        if (this.search) {\r\n            this.searchChannelsVideos({search: this.search, filters: this.filters});\r\n        } else {\r\n            this.getVideosList({filters: this.filters});\r\n        }\r\n    }\r\n\r\n    getVideosList(params) {\r\n        params = this.getExactParams.transform(params);\r\n\r\n        this.videoService.get({\r\n            withPlaylists: !this.showTrending ? 1 : 0,\r\n            trending: this.showTrending ? 1 : 0,\r\n            ...params\r\n        }).subscribe(dt => {\r\n            this.items = dt;\r\n        });\r\n    }\r\n\r\n    searchChannelsVideos(params) {\r\n\r\n        params = this.getExactParams.transform(params);\r\n        this.loadingVideos = true;\r\n\r\n        this.channelsService.searchWithVideos({user_id: this.authUser?.id, ...params}).subscribe(dt => {\r\n            this.loadingVideos = false;\r\n            this.channelsVideos = dt;\r\n        });\r\n    }\r\n\r\n\r\n    isFiltersShown() {\r\n        return this.items.videos?.length > 0 ||\r\n            (this.search && this.channelsVideos.find(v => v.videos.length > 0))\r\n            || this.filterStatus === 'applied' && !this.loadingVideos;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n}\r\n","<div class=\"all-videos\">\r\n    <button class=\"filter-toggle-btn\" *ngIf=\"isFiltersShown()\" (click)=\"showFilters = !showFilters\">\r\n        <mat-icon>tune</mat-icon>\r\n        <span>Filters</span>\r\n    </button>\r\n    <app-video-filters (filter)=\"getFilteredList($event)\" *ngIf=\"showFilters\"></app-video-filters>\r\n    <div id=\"videos-list\">\r\n        <mat-spinner [diameter]=\"20\" *ngIf=\"loadingVideos\"></mat-spinner>\r\n        <ng-container *ngIf=\"!search && !loadingVideos\">\r\n            <app-show-regular-list [items]=\"items\" [authUser]=\"authUser\"></app-show-regular-list>\r\n            <app-show-playlists-list [items]=\"items\" [authUser]=\"authUser\"></app-show-playlists-list>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"search && !loadingVideos\">\r\n            <app-show-search-results [channelsVideos]=\"channelsVideos\" [authUser]=\"authUser\"></app-show-search-results>\r\n        </ng-container>\r\n    </div>\r\n    <div *ngIf=\"search && channelsVideos?.length === 0\">\r\n        <span class=\"error\">No results found</span>\r\n    </div>\r\n</div>\r\n","import {AfterViewInit, Component, OnInit} from '@angular/core';\r\nimport videojs from 'video.js';\r\nimport * as RecordRTC from 'recordrtc';\r\n\r\n@Component({\r\n    selector: 'app-videojs-test',\r\n    templateUrl: './videojs-test.component.html',\r\n    styleUrls: ['./videojs-test.component.scss']\r\n})\r\nexport class VideojsTestComponent implements OnInit, AfterViewInit {\r\n    config = {\r\n        controls: true,\r\n        bigPlayButton: false,\r\n        width: 320,\r\n        height: 240,\r\n        fluid: false,\r\n        plugins: {\r\n            record: {\r\n                audio: true,\r\n                video: true,\r\n                maxLength: 110,\r\n                debug: true\r\n            }\r\n        }\r\n    };\r\n    player;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.player = videojs(document.getElementById('video'), this.config, () => {\r\n            // console.log('player ready! id:', el);\r\n\r\n            // print version information at startup\r\n            const msg = 'Using video.js ' + videojs.VERSION +\r\n                ' with videojs-record ' + videojs.getPluginVersion('record') +\r\n                ' and recordrtc ' + RecordRTC.version;\r\n            videojs.log(msg);\r\n        }, () => {\r\n        });\r\n\r\n        let player = this.player;\r\n\r\n        this.player.on('finishRecord', () => {\r\n            // the blob object contains the recorded data that\r\n            // can be downloaded by the user, stored on server etc.\r\n            console.log('finished recording: ', player.recordedData);\r\n            // player.record().saveAs({'video': 'my-video-file-name.webm'});\r\n        });\r\n\r\n    }\r\n}\r\n","<video id=\"video\" class=\"video-js\" playsinline></video>\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {ShowVideosComponent} from '@app/videos/show-videos/show-videos.component';\r\nimport {PlayVideoComponent} from '@app/videos/play-video/play-video.component';\r\nimport {ShowSavedVideosComponent} from '@app/videos/show-saved-videos/show-saved-videos.component';\r\nimport {AuthGuard} from '@core/guards/auth.guard';\r\nimport {VideojsTestComponent} from '@app/videos/videojs-test/videojs-test.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n      path: 'test',\r\n      component: VideojsTestComponent\r\n    },\r\n    {\r\n        path: '',\r\n        component: ShowVideosComponent,\r\n        pathMatch: 'full',\r\n        data: {\r\n            title: 'Videos',\r\n        }\r\n    },\r\n    {\r\n        path: 'play',\r\n        component: PlayVideoComponent,\r\n        data: {\r\n            title: 'Play Video',\r\n        }\r\n    },\r\n    {\r\n        path: 'saved',\r\n        component: ShowSavedVideosComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n            title: 'Saved Videos',\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class VideosRoutingModule {\r\n}\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {VideosRoutingModule} from './videos-routing.module';\r\nimport {ShowVideosComponent} from './show-videos/show-videos.component';\r\nimport {SharedModule} from '@shared/shared.module';\r\n\r\nimport {PlayVideoComponent} from '../videos/play-video/play-video.component';\r\nimport {ShowSavedVideosComponent} from './show-saved-videos/show-saved-videos.component';\r\nimport {VideoSuggestionsComponent} from './play-video/video-suggestions/video-suggestions.component';\r\nimport { VideoDetailsFormComponent } from './play-video/video-details-form/video-details-form.component';\r\nimport { ShowRegularListComponent } from './show-videos/show-regular-list/show-regular-list.component';\r\nimport { ShowSearchResultsComponent } from './show-videos/show-search-results/show-search-results.component';\r\nimport { ShowPlaylistsListComponent } from './show-videos/show-playlists-list/show-playlists-list.component';\r\nimport { VideoCommentsFormComponent } from './play-video/video-comments-form/video-comments-form.component';\r\nimport { VideoCommentsListComponent } from './play-video/video-comments-list/video-comments-list.component';\r\nimport { CommentActionsComponent } from './play-video/video-comments-list/comment-actions/comment-actions.component';\r\nimport { SingleCommentComponent } from './play-video/video-comments-list/single-comment/single-comment.component';\r\nimport { VideojsTestComponent } from './videojs-test/videojs-test.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ShowVideosComponent,\r\n        PlayVideoComponent,\r\n        ShowSavedVideosComponent,\r\n        VideoSuggestionsComponent,\r\n        VideoDetailsFormComponent,\r\n        ShowRegularListComponent,\r\n        ShowSearchResultsComponent,\r\n        ShowPlaylistsListComponent,\r\n        VideoCommentsFormComponent,\r\n        VideoCommentsListComponent,\r\n        CommentActionsComponent,\r\n        SingleCommentComponent,\r\n        VideojsTestComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        VideosRoutingModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class VideosModule {\r\n}\r\n"],"sourceRoot":"webpack:///"}