{"version":3,"sources":["webpack:///src/app/core/helpers/normalizeTableColumnName.ts","webpack:///src/app/stocks/stock-profile/historical-tab/historical-tab.component.ts","webpack:///src/app/stocks/stock-profile/historical-tab/historical-tab.component.html","webpack:///src/app/stocks/stock-profile/stock-profile.component.html","webpack:///src/app/stocks/stock-profile/stock-profile.component.ts","webpack:///src/app/stocks/stock-profile/summary-tab/summary-tab.component.ts","webpack:///src/app/stocks/stock-profile/summary-tab/summary-tab.component.html","webpack:///src/app/stocks/stocks-routing.module.ts","webpack:///src/app/stocks/stocks.module.ts"],"names":["normalizeColName","col","toUpperCase","slice","replace","trim","HistoricalTabComponent","stocksService","displayedColumns","paginationValues","getStockHistoricalPrices","stock","selectedStock","subscribe","dt","tableData","historical","paginator","selector","templateUrl","styleUrls","StockProfileComponent","router","route","subject","activeTab","dataLoading","currentIndices","length","indices","snapshot","params","symbol","tab","navigateByUrl","skipLocationChange","then","navigate","SummaryTabComponent","loader","updateStocks","getAuthUser","colorScheme","domain","userStocks","addedToWatchlist","subscriptions","stocksUpdatedHere","processingStock","getUserStocks","getStockInfo","authUser","transform","currentUserStocks","find","us","getStockChartData","chartData","chart","table","tick","xAxisComponent","ticks","tickPresent","t","i","minute","format","type_id","following","show","push","updateFollowedStocks","user_id","id","stocks","user_stocks","hide","changeUserStocks","routes","path","component","data","title","StocksRoutingModule","forChild","imports","exports","StocksModule","declarations"],"mappings":"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","file":"stocks-stocks-module-es5.js","sourcesContent":["function normalizeColName(col): string {\r\n    col = `${col[0].toUpperCase()}${col.slice(1)}`.replace(/([A-Z])/g, ' $1').trim();\r\n    return col.replace(/_/g, ' ');\r\n}\r\n\r\nexport {normalizeColName as normalizeColName};\r\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {StocksService} from '@core/services/stocks.service';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {normalizeColName} from '@core/helpers/normalizeTableColumnName';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\n\r\n@Component({\r\n    selector: 'app-historical-tab',\r\n    templateUrl: './historical-tab.component.html',\r\n    styleUrls: ['./historical-tab.component.scss']\r\n})\r\nexport class HistoricalTabComponent implements OnInit {\r\n    @Input('selectedStock') selectedStock;\r\n\r\n    displayedColumns: string[] = ['date', 'price', 'change', 'changePercent', 'open', 'volume'];\r\n    tableData;\r\n    paginationValues = [10, 25, 100];\r\n\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n    constructor(\r\n        private stocksService: StocksService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.stocksService.getStockHistoricalPrices({stock: this.selectedStock}).subscribe(dt => {\r\n            this.tableData = new MatTableDataSource(dt.historical);\r\n            this.tableData.paginator = this.paginator;\r\n        });\r\n    }\r\n\r\n    normalizeColName(col): string {\r\n        return normalizeColName(col);\r\n    }\r\n\r\n}\r\n","<table mat-table [dataSource]=\"tableData\" class=\"mat-elevation-z8\" *ngIf=\"tableData && tableData.data.length\">\r\n\r\n    <!--- Note that these columns can be defined in any order.\r\n          The actual rendered columns are set as a property on the row definition\" -->\r\n    <!-- Symbol Column -->\r\n    <ng-container *ngFor=\"let col of displayedColumns\">\r\n        <ng-container [matColumnDef]=\"col\">\r\n            <th mat-header-cell *matHeaderCellDef> {{normalizeColName(col)}}</th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element[col]}} </td>\r\n        </ng-container>\r\n    </ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n</table>\r\n<mat-paginator [pageSizeOptions]=\"paginationValues\"\r\n               [hidden]=\"!tableData?.data.length\"></mat-paginator>\r\n\r\n<mat-error *ngIf=\"!tableData?.data.length\">No historical prices found</mat-error>\r\n","<div class=\"stock-content\">\r\n    <div class=\"major-indexes\">\r\n        <h2>Major indexes</h2>\r\n        <div class=\"stocks-list-container\">\r\n            <div class=\"spinner-container\">\r\n                <mat-spinner [diameter]=\"25\" *ngIf=\"indices?.length === 0\"></mat-spinner>\r\n            </div>\r\n            <app-stocks-list-sample [stocks]=\"indices\" [followAllowed]=\"false\"></app-stocks-list-sample>\r\n        </div>\r\n    </div>\r\n    <div class=\"stock-tabs\" *ngIf=\"selectedStock\">\r\n\r\n        <ul class=\"nav nav-tabs\">\r\n            <li [class.active]=\"activeTab==='summary'\">\r\n                <a data-toggle=\"tab\" (click)=\"changeTab('summary')\">\r\n                    Summary</a></li>\r\n\r\n            <li [class.active]=\"activeTab==='historical'\">\r\n                <a data-toggle=\"tab\" (click)=\"changeTab('historical')\">\r\n                    Historical data</a>\r\n            </li>\r\n        </ul>\r\n\r\n        <div class=\"tab-content\">\r\n\r\n\r\n            <div id=\"summary\">\r\n\r\n                <app-summary-tab [selectedStock]=\"selectedStock\" [hidden]=\"activeTab!=='summary'\"></app-summary-tab>\r\n\r\n            </div>\r\n            <div id=\"historical\">\r\n                <app-historical-tab [selectedStock]=\"selectedStock\"\r\n                                    [hidden]=\"activeTab!=='historical'\"></app-historical-tab>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <mat-error *ngIf=\"!selectedStock && indices?.length !== 0\">Please select a stock to view its information\r\n    </mat-error>\r\n    <!-- <img class=\"stock-content-img\" src=\"assets/img/stock.jpg\"> -->\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {StocksService} from '@core/services/stocks.service';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {SubjectService} from '@core/services/subject.service';\r\n\r\n@Component({\r\n    selector: 'app-stock-profile',\r\n    templateUrl: './stock-profile.component.html',\r\n    styleUrls: ['./stock-profile.component.scss']\r\n})\r\nexport class StockProfileComponent implements OnInit {\r\n    activeTab = 'summary';\r\n    indices;\r\n    selectedStock;\r\n    stockInfo;\r\n    dataLoading = 'idle';\r\n\r\n    constructor(\r\n        private stocksService: StocksService,\r\n        public router: Router,\r\n        private route: ActivatedRoute,\r\n        private subject: SubjectService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.dataLoading = 'loading';\r\n        this.subject.currentIndices.subscribe(dt => {\r\n            if (dt.length > 0) {\r\n                this.dataLoading = 'finished';\r\n                this.indices = dt;\r\n            }\r\n        });\r\n        this.selectedStock = this.route.snapshot?.params?.symbol?.toUpperCase();\r\n    }\r\n\r\n\r\n    changeTab(tab) {\r\n        this.activeTab = tab;\r\n    }\r\n\r\n    openStockProfile(stock) {\r\n        this.router.navigateByUrl('/test', {skipLocationChange: true}).then(async () =>\r\n            await this.router.navigate([`stocks/${stock}/analytics`])\r\n        );\r\n    }\r\n\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {StocksService} from '@core/services/stocks.service';\r\nimport {normalizeColName} from '@core/helpers/normalizeTableColumnName';\r\nimport {LoaderService} from '@core/services/loader.service';\r\nimport {XAxisTicksComponent} from '@swimlane/ngx-charts';\r\nimport * as moment from 'moment';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {UpdateUserStocksPipe} from '@shared/pipes/update-user-stocks.pipe';\r\nimport {Subscription} from 'rxjs';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\n\r\n@Component({\r\n    selector: 'app-summary-tab',\r\n    templateUrl: './summary-tab.component.html',\r\n    styleUrls: ['./summary-tab.component.scss']\r\n})\r\nexport class SummaryTabComponent implements OnInit {\r\n\r\n    // Chart settings\r\n    chartData: any[];\r\n    colorScheme = {\r\n        domain: ['#18B587', '#F53C6F']\r\n    };\r\n\r\n\r\n    // Table settings\r\n    displayedColumns: string[] = ['symbol', 'name', 'price', 'change', 'changesPercentage', 'marketCap', 'open', 'volume', 'action'];\r\n    tableData;\r\n\r\n    userStocks = [];\r\n\r\n    addedToWatchlist = false;\r\n    subscriptions: Subscription[] = [];\r\n\r\n    authUser;\r\n    stocksUpdatedHere = false;\r\n    processingStock = false;\r\n\r\n    @Input('selectedStock') selectedStock;\r\n\r\n    constructor(\r\n        private stocksService: StocksService,\r\n        public loader: LoaderService,\r\n        private subject: SubjectService,\r\n        private updateStocks: UpdateUserStocksPipe,\r\n        private getAuthUser: GetAuthUserPipe\r\n    ) {\r\n    }\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.getUserStocks();\r\n        this.getStockInfo();\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    getUserStocks() {\r\n        this.subject.currentUserStocks.subscribe(dt => {\r\n            this.userStocks = dt;\r\n            this.addedToWatchlist = !!this.userStocks.find(us => us.symbol === this.selectedStock);\r\n        });\r\n    }\r\n\r\n    getStockInfo() {\r\n        this.loader.dataLoading = true;\r\n        this.stocksService.getStockChartData({stock: this.selectedStock}).subscribe(dt => {\r\n            this.chartData = dt.chart;\r\n            this.tableData = new MatTableDataSource(dt.table);\r\n            this.loader.dataLoading = false;\r\n        });\r\n    }\r\n\r\n    axisFormatting(tick) {\r\n        const xAxisComponent = this as any;\r\n        const ticks = xAxisComponent.ticks;\r\n        const tickPresent = ticks.find((t, i) => t === tick && moment(t, 'HH:mm:ss').minute() % 30 === 0);\r\n        return tickPresent ? moment(tickPresent, 'HH:mm:ss').format('HH:mm A') : '';\r\n    }\r\n\r\n    normalizeColName(col): string {\r\n        return normalizeColName(col);\r\n    }\r\n\r\n\r\n    updateUserStocks(stock) {\r\n        this.processingStock = true;\r\n        const {userStocks, following} = this.updateStocks.transform(this.userStocks, stock, stock.type_id);\r\n        this.addedToWatchlist = following;\r\n        this.loader.show();\r\n        this.subscriptions.push(this.stocksService.updateFollowedStocks({\r\n            user_id: this.authUser.id,\r\n            stocks: userStocks\r\n        }).subscribe(dt => {\r\n            this.processingStock = false;\r\n            this.userStocks = dt?.user_stocks || [];\r\n            this.stocksUpdatedHere = true;\r\n            this.loader.hide();\r\n            this.subject.changeUserStocks(this.userStocks);\r\n        }));\r\n    }\r\n\r\n}\r\n","<div class=\"loader-holder\">\r\n    <mat-spinner [diameter]=\"50\" [hidden]=\"!loader.dataLoading\"></mat-spinner>\r\n</div>\r\n<div class=\"table-chart-container\">\r\n    <ng-container *ngIf=\"chartData && chartData[0].series.length > 0\">\r\n\r\n        <div class=\"chart-container\">\r\n\r\n            <ngx-charts-area-chart\r\n                [scheme]=\"colorScheme\"\r\n                [legend]=\"false\"\r\n                [showXAxisLabel]=\"false\"\r\n                [showYAxisLabel]=\"false\"\r\n                [trimXAxisTicks]=\"false\"\r\n                [maxXAxisTickLength]=\"5\"\r\n                [autoScale]=\"true\"\r\n                [xAxis]=\"true\"\r\n                [yAxis]=\"true\"\r\n                [rotateXAxisTicks]=\"false\"\r\n                [xAxisTickFormatting]=\"axisFormatting\"\r\n                [results]=\"chartData\">\r\n            </ngx-charts-area-chart>\r\n        </div>\r\n        <div class=\"table-container\">\r\n            <h1 class=\"selected-stock\">{{selectedStock.replace('^', '')}}</h1>\r\n            <table mat-table [dataSource]=\"tableData\" class=\"mat-elevation-z8\">\r\n\r\n                <ng-container *ngFor=\"let col of displayedColumns\">\r\n                    <ng-container [matColumnDef]=\"col\">\r\n                        <th mat-header-cell *matHeaderCellDef> {{normalizeColName(col)}}</th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                            <span *ngIf=\"col!=='action'\">{{element[col]}}</span>\r\n                            <div *ngIf=\"col==='action'\" class=\"action-column\">\r\n                                <button id=\"watchlist-act-btn\" (click)=\"updateUserStocks(element)\"\r\n                                        [ngClass]=\"addedToWatchlist? 'red-bg':'green-bg'\"\r\n                                >{{(addedToWatchlist ? 'Remove from' : 'Add to') + ' watchlist'}}</button>\r\n                                <mat-spinner [diameter]=\"15\" *ngIf=\"processingStock\"></mat-spinner>\r\n                            </div>\r\n                        </td>\r\n                    </ng-container>\r\n                </ng-container>\r\n\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n<mat-error *ngIf=\"(!chartData || chartData[0].series.length === 0) && !loader.dataLoading\">No chart data found\r\n</mat-error>\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {StockProfileComponent} from '@app/stocks/stock-profile/stock-profile.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'analytics',\r\n        component: StockProfileComponent,\r\n        data: {\r\n            title: 'Stock profile',\r\n        }\r\n    },\r\n    {\r\n        path: ':symbol/analytics',\r\n        component: StockProfileComponent,\r\n        data: {\r\n            title: 'Stock profile',\r\n        }\r\n    },\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class StocksRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {StocksRoutingModule} from './stocks-routing.module';\r\nimport {StockProfileComponent} from '@app/stocks/stock-profile/stock-profile.component';\r\nimport {SummaryTabComponent} from '@app/stocks/stock-profile/summary-tab/summary-tab.component';\r\nimport {HistoricalTabComponent} from '@app/stocks/stock-profile/historical-tab/historical-tab.component';\r\nimport {NgxChartsModule} from '@swimlane/ngx-charts';\r\nimport {SharedModule} from '@shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        StockProfileComponent,\r\n        SummaryTabComponent,\r\n        HistoricalTabComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        StocksRoutingModule,\r\n        NgxChartsModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class StocksModule {\r\n}\r\n"]}