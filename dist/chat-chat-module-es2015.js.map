{"version":3,"sources":["./src/app/chat/chat-routing.module.ts","./src/app/chat/chat.module.ts","./src/app/chat/show-chatrooms/show-chatrooms.component.ts","./src/app/chat/show-chatrooms/show-chatrooms.component.html","./src/app/chat/show-messages/direct-chat/direct-chat.component.ts","./src/app/chat/show-messages/direct-chat/direct-chat.component.html","./src/app/chat/show-messages/group-chat/group-chat.component.ts","./src/app/chat/show-messages/group-chat/group-chat.component.html","./src/app/chat/show-messages/show-messages.component.ts","./src/app/chat/show-messages/show-messages.component.html"],"names":[],"mappings":"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","file":"chat-chat-module-es2015.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {ShowChatroomsComponent} from '@app/chat/show-chatrooms/show-chatrooms.component';\r\nimport {ShowMessagesComponent} from '@app/chat/show-messages/show-messages.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'rooms',\r\n        component: ShowChatroomsComponent,\r\n        data: {\r\n            title: 'Chat rooms',\r\n        }\r\n    },\r\n    {\r\n        path: 'messages',\r\n        component: ShowMessagesComponent,\r\n        data: {\r\n            title: 'Chat',\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ChatRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {ChatRoutingModule} from './chat-routing.module';\r\nimport {ShowChatroomsComponent} from './show-chatrooms/show-chatrooms.component';\r\nimport {ShowMessagesComponent} from './show-messages/show-messages.component';\r\nimport {SharedModule} from '@shared/shared.module';\r\nimport { DirectChatComponent } from './show-messages/direct-chat/direct-chat.component';\r\nimport { GroupChatComponent } from './show-messages/group-chat/group-chat.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [ShowChatroomsComponent, ShowMessagesComponent, DirectChatComponent, GroupChatComponent],\r\n    imports: [\r\n        CommonModule,\r\n        ChatRoutingModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class ChatModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-show-chatrooms',\r\n  templateUrl: './show-chatrooms.component.html',\r\n  styleUrls: ['./show-chatrooms.component.scss']\r\n})\r\nexport class ShowChatroomsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"chatrooms-list\">\r\n    <h1>Chat Rooms</h1>\r\n\r\n    <div class=\"create-post\">\r\n        <div class=\"img\">\r\n            <img src=\"assets/img/item-4.png\" alt=\"\">\r\n            <span>Create Post</span>\r\n        </div>\r\n        <div class=\"select\">\r\n            <select name=\"\" id=\"\">\r\n                <option value=\"\">Choose community</option>\r\n                <option value=\"\">option</option>\r\n            </select>\r\n        </div>\r\n\r\n        <div class=\"input\">\r\n            <input placeholder=\"Title\" type=\"text\">\r\n        </div>\r\n\r\n        <label class=\"add-photo\">\r\n            <input type=\"file\">\r\n            <span class=\"material-icons\">image</span>\r\n            Add Photo or Video\r\n        </label>\r\n\r\n        <div class=\"btn\">\r\n            <button class=\"post\">Post</button>\r\n        </div>\r\n    </div>\r\n\r\n    <ul class=\"categories\">\r\n        <li><a class=\"active\"><span class=\"material-icons\">whatshot</span>Hot</a></li>\r\n        <li><a><span class=\"material-icons\">new_releases</span>New</a></li>\r\n        <li><a><span class=\"material-icons\">trending_up</span>Top</a></li>\r\n        <li><a><span class=\"material-icons\">new_releases</span>Best of the week</a></li>\r\n    </ul>\r\n\r\n    <div class=\"search\">\r\n        <input placeholder=\"Search\" type=\"text\">\r\n        <span class=\"material-icons\">search</span>\r\n    </div>\r\n\r\n    <div class=\"chatrooms-items\">\r\n        <div class=\"item\">\r\n            <div class=\"posted\">\r\n                <p>Posted by<span>u/alotasalad</span></p>\r\n                <p>4 minutes ago</p>\r\n            </div>\r\n\r\n            <div class=\"info\">\r\n                <div class=\"left-wrap\">\r\n                    <div class=\"voting-container\">\r\n                        <button class=\"vote-up-btn active\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                        <div class=\"vote-count\">50k</div>\r\n                        <button class=\"vote-down-btn\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-wrap\">\r\n                    <p>This is my friends loss but to make matters even worse he borrowed the money from his Nigerian\r\n                        boss and yolod everything on fds otw up and down did I forget to mention that 4K in the the\r\n                        account right now is also his bosses money 💰</p>\r\n\r\n                    <img src=\"assets/img/jp-valeryunsplash.png\" alt=\"\">\r\n\r\n                    <div class=\"post-menu\">\r\n                        <div class=\"menu\">\r\n                            <a href=\"\"><span class=\"material-icons\">chat_bubble</span>Comments</a>\r\n                            <a href=\"\"><span class=\"material-icons\">share</span>Share</a>\r\n                        </div>\r\n                        <div class=\"dotes\"><span class=\"material-icons\">more_vert</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"item\">\r\n            <div class=\"posted\">\r\n                <p>Posted by<span>u/alotasalad</span></p>\r\n                <p>4 minutes ago</p>\r\n            </div>\r\n\r\n            <div class=\"info\">\r\n                <div class=\"left-wrap\">\r\n                    <div class=\"voting-container\">\r\n                        <button class=\"vote-up-btn active\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                        <div class=\"vote-count\">50k</div>\r\n                        <button class=\"vote-down-btn\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-wrap\">\r\n                    <p>This is my friends loss but to make matters even worse he borrowed the money from his Nigerian\r\n                        boss and yolod everything on fds otw up and down did I forget to mention that 4K in the the\r\n                        account right now is also his bosses money 💰</p>\r\n\r\n                    <img src=\"assets/img/jp-valeryunsplash.png\" alt=\"\">\r\n\r\n                    <div class=\"post-menu\">\r\n                        <div class=\"menu\">\r\n                            <a href=\"\"><span class=\"material-icons\">chat_bubble</span>Comments</a>\r\n                            <a href=\"\"><span class=\"material-icons\">share</span>Share</a>\r\n                        </div>\r\n                        <div class=\"dotes\"><span class=\"material-icons\">more_vert</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"item\">\r\n            <div class=\"posted\">\r\n                <p>Posted by<span>u/alotasalad</span></p>\r\n                <p>4 minutes ago</p>\r\n            </div>\r\n\r\n            <div class=\"info\">\r\n                <div class=\"left-wrap\">\r\n                    <div class=\"voting-container\">\r\n                        <button class=\"vote-up-btn active\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                        <div class=\"vote-count\">50k</div>\r\n                        <button class=\"vote-down-btn\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-wrap\">\r\n                    <p>This is my friends loss but to make matters even worse he borrowed the money from his Nigerian\r\n                        boss and yolod everything on fds otw up and down did I forget to mention that 4K in the the\r\n                        account right now is also his bosses money 💰</p>\r\n\r\n                    <img src=\"assets/img/jp-valeryunsplash.png\" alt=\"\">\r\n\r\n                    <div class=\"post-menu\">\r\n                        <div class=\"menu\">\r\n                            <a href=\"\"><span class=\"material-icons\">chat_bubble</span>Comments</a>\r\n                            <a href=\"\"><span class=\"material-icons\">share</span>Share</a>\r\n                        </div>\r\n                        <div class=\"dotes\"><span class=\"material-icons\">more_vert</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"item\">\r\n            <div class=\"posted\">\r\n                <p>Posted by<span>u/alotasalad</span></p>\r\n                <p>4 minutes ago</p>\r\n            </div>\r\n\r\n            <div class=\"info\">\r\n                <div class=\"left-wrap\">\r\n                    <div class=\"voting-container\">\r\n                        <button class=\"vote-up-btn active\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                        <div class=\"vote-count\">50k</div>\r\n                        <button class=\"vote-down-btn\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-wrap\">\r\n                    <p>This is my friends loss but to make matters even worse he borrowed the money from his Nigerian\r\n                        boss and yolod everything on fds otw up and down did I forget to mention that 4K in the the\r\n                        account right now is also his bosses money 💰</p>\r\n\r\n                    <img src=\"assets/img/jp-valeryunsplash.png\" alt=\"\">\r\n\r\n                    <div class=\"post-menu\">\r\n                        <div class=\"menu\">\r\n                            <a href=\"\"><span class=\"material-icons\">chat_bubble</span>Comments</a>\r\n                            <a href=\"\"><span class=\"material-icons\">share</span>Share</a>\r\n                        </div>\r\n                        <div class=\"dotes\"><span class=\"material-icons\">more_vert</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {\r\n    AfterViewChecked,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef, EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit, Output,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport IsResponsive from '@core/helpers/is-responsive';\r\nimport * as moment from 'moment';\r\nimport {ChatService} from '@core/services/chat.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {SocketIoService} from '@core/services/socket-io.service';\r\nimport {DatePipe} from '@angular/common';\r\nimport {GroupByPipe} from '@shared/pipes/group-by.pipe';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {UsersService} from '@core/services/users.service';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {GetElegantDatePipe} from \"@shared/pipes/get-elegant-date.pipe\";\r\nimport {environment} from \"@env\";\r\n\r\n@Component({\r\n    selector: 'app-direct-chat',\r\n    templateUrl: './direct-chat.component.html',\r\n    styleUrls: ['./direct-chat.component.scss']\r\n})\r\nexport class DirectChatComponent implements OnInit, AfterViewChecked, OnDestroy {\r\n\r\n    @Input() authUser;\r\n\r\n    usersMessages = [];\r\n    filteredUsersMessages = [];\r\n    selectedUserMessages = {messages: [], user: {}, rawMessages: [], connection_id: null};\r\n    activeUser;\r\n\r\n    typingText: string;\r\n\r\n    chatForm: FormGroup;\r\n    showBlockedUsers = false;\r\n\r\n    onlineUsers = [];\r\n    blockedUsers = [];\r\n    newMessageSources = [];\r\n\r\n    subscriptions: Subscription[] = [];\r\n    isProduction = environment.production;\r\n\r\n    @ViewChild('directMessagesList') private messagesList: ElementRef;\r\n    @Output() newMessagesCountReceived = new EventEmitter();\r\n\r\n    constructor(\r\n        private chatService: ChatService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private socketService: SocketIoService,\r\n        private usersService: UsersService,\r\n        private toastr: ToastrService,\r\n        private subject: SubjectService,\r\n        private datePipe: DatePipe,\r\n        private groupBy: GroupByPipe,\r\n        private fb: FormBuilder,\r\n        private getElegantDate: GetElegantDatePipe\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        // this.addUserToSocket();\r\n        this.getOnlineUsers();\r\n        this.getMessagesFromSocket();\r\n        this.getUsersMessages();\r\n        this.initForm();\r\n        this.getTyping();\r\n        this.getSeen();\r\n        this.getChatNotifications();\r\n        this.getBlockUnblockUser();\r\n    }\r\n\r\n    addUserToSocket() {\r\n        this.socketService.addNewUser({...this.authUser, group: false});\r\n    }\r\n\r\n    getOnlineUsers() {\r\n        this.socketService.getConnectedUsers({username: this.authUser.username});\r\n        this.socketService.usersOnlineFeedback().subscribe((dt: any) => {\r\n            console.log(dt)\r\n            this.onlineUsers = dt;\r\n        });\r\n\r\n        this.subscriptions.push(this.socketService.userOnlineFeedback().subscribe((dt: any) => {\r\n            console.log(this.onlineUsers)\r\n            this.onlineUsers = dt;\r\n        }));\r\n    }\r\n\r\n    getUserCurrentStatus(username) {\r\n        return this.onlineUsers.length === 0 || this.onlineUsers.includes(username);\r\n    }\r\n\r\n    getChatNotifications() {\r\n        this.subscriptions.push(this.socketService.getChatNotifications().subscribe((data: any) => {\r\n            this.onlineUsers = data.users;\r\n        }));\r\n    }\r\n\r\n    initForm() {\r\n        this.chatForm = this.fb.group({\r\n            from: [this.authUser.username],\r\n            from_id: [this.authUser.id],\r\n            connection_id: [this.selectedUserMessages?.connection_id],\r\n            to_id: [this.activeUser?.id],\r\n            avatar: [this.authUser?.avatar],\r\n            from_user: [this.authUser],\r\n            to_user: [null],\r\n            message: ['', Validators.required],\r\n            personal: [1]\r\n        });\r\n    }\r\n\r\n    isOwnMessage(user) {\r\n        return user.id === this.authUser.id;\r\n    }\r\n\r\n    isChatUsersListSize() {\r\n        return IsResponsive.isChatUsersListSize();\r\n    }\r\n\r\n    getUsersMessages() {\r\n        this.selectedUserMessages.messages = [];\r\n        this.subscriptions.push(this.chatService.getDirectMessages({\r\n            user_id: this.authUser.id,\r\n            blocked: 0\r\n        }).subscribe(dt => {\r\n            this.usersMessages = dt;\r\n            const newMessagesSource = dt.filter(d => d.unseens > 0);\r\n            this.newMessagesCountReceived.emit(newMessagesSource.length);\r\n            this.blockedUsers = dt.filter(d => d.users_connections[0].is_blocked === 1);\r\n            this.filteredUsersMessages = dt.filter(d => !!d.users_connections[0].is_blocked === this.showBlockedUsers);\r\n            console.log(this.blockedUsers)\r\n            this.newMessageSources = this.filteredUsersMessages.filter(fm => fm.unseens);\r\n            this.subject.setNewMessagesSourceData({source: this.newMessageSources, type: 'direct'});\r\n            this.activeUser = this.activeUser || this.filteredUsersMessages[0];\r\n            // connection_id: this.filteredUsersMessages[0].users_connections[0].id\r\n            // console.log(this.activeUser)\r\n\r\n            const selectedMessages = this.filteredUsersMessages.find(m => m.id === this.activeUser?.id);\r\n            this.selectedUserMessages.user = selectedMessages;\r\n            this.selectedUserMessages.connection_id = selectedMessages?.users_connections[0].id;\r\n            this.selectedUserMessages.messages = this.groupBy.transform(selectedMessages?.users_connections[0].users_messages, 'created_at');\r\n            this.selectedUserMessages.rawMessages = selectedMessages?.users_connections[0].users_messages;\r\n            this.chatForm.patchValue({\r\n                to_id: this.activeUser?.id,\r\n                to_user: this.activeUser,\r\n                connection_id: this.activeUser?.users_connections?.[0].id\r\n            });\r\n            // console.log(this.chatForm.value)\r\n        }));\r\n    }\r\n\r\n    getMessagesFromSocket() {\r\n        this.subscriptions.push(this.socketService.onNewMessage().subscribe((dt: any) => {\r\n            console.log('new message direct chat!!!')\r\n            this.typingText = null;\r\n            this.getUsersMessages();\r\n\r\n        }));\r\n    }\r\n\r\n    makeUserActive(user, lastMsg) {\r\n        this.activeUser = user;\r\n        this.selectedUserMessages = {messages: [], user: {}, rawMessages: [], connection_id: null};\r\n        if (user) {\r\n            this.chatForm.patchValue({\r\n                to_id: user.id,\r\n                to_user: this.activeUser,\r\n                connection_id: this.activeUser.users_connections[0].id\r\n            });\r\n            const userMessages = JSON.parse(JSON.stringify(this.filteredUsersMessages.find(m => m.id === user.id)));\r\n            this.selectedUserMessages = userMessages;\r\n            this.selectedUserMessages.connection_id = userMessages?.users_connections[0].id;\r\n            this.selectedUserMessages.messages = this.groupBy.transform(userMessages?.users_connections[0].users_messages, 'created_at');\r\n            this.selectedUserMessages.rawMessages = userMessages?.users_connections[0].users_messages;\r\n            if (!lastMsg?.seen) {\r\n                this.setSeen();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    toggleBlockedUsers(show) {\r\n        this.showBlockedUsers = show;\r\n        this.filteredUsersMessages = this.usersMessages.filter(d => {\r\n            return !!d.users_connections?.[0].is_blocked === this.showBlockedUsers;\r\n        });\r\n        this.activeUser = this.filteredUsersMessages[0];\r\n        if (this.activeUser) {\r\n            const activeUserMessages = this.activeUser?.users_connections[0]?.users_messages;\r\n            this.makeUserActive(this.activeUser, activeUserMessages[activeUserMessages.length - 1]);\r\n        }\r\n\r\n    }\r\n\r\n    sendMessage(e) {\r\n        if (e.keyCode === 13 && !e.shiftKey && this.chatForm.value.message.trim() !== '') {\r\n            if (this.chatForm.valid) {\r\n                const data = {...this.chatForm.value};\r\n\r\n\r\n                this.subscriptions.push(this.chatService.saveDirectMessage(data).subscribe(dt => {\r\n                    this.usersMessages = dt;\r\n                    this.filteredUsersMessages = dt.filter(d => !!d.users_connections[0].is_blocked === this.showBlockedUsers);\r\n                    const selectedMessages = this.filteredUsersMessages.find(m => m.id === this.activeUser?.id);\r\n                    this.selectedUserMessages.user = selectedMessages;\r\n                    this.selectedUserMessages.connection_id = selectedMessages?.users_connections[0].id;\r\n                    console.log(selectedMessages?.users_connections)\r\n                    this.selectedUserMessages.messages = this.groupBy.transform(selectedMessages?.users_connections[0].users_messages, 'created_at');\r\n                    this.selectedUserMessages.rawMessages = selectedMessages?.users_connections[0].users_messages;\r\n\r\n                    this.socketService.sendMessage(data);\r\n                    this.scrollMsgsToBottom();\r\n                    console.log(this.selectedUserMessages);\r\n                }));\r\n                this.chatForm.patchValue({message: ''});\r\n            }\r\n        }\r\n    }\r\n\r\n    scrollMsgsToBottom() {\r\n        try {\r\n            this.messagesList.nativeElement.scrollTop = this.messagesList.nativeElement.scrollHeight;\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n    setTyping(msg = null) {\r\n        this.socketService.setTyping({\r\n            from_user: this.chatForm.value.from_user,\r\n            to_user: this.chatForm.value.to_user,\r\n            message: this.chatForm.value.message\r\n        });\r\n    }\r\n\r\n    getTyping() {\r\n        this.subscriptions.push(this.socketService.getTyping().subscribe((dt: any) => {\r\n            console.log(dt.from_user.id, this.authUser.id, this.activeUser);\r\n            if (dt.from_user.id !== this.authUser.id && this.activeUser.id === dt.from_user.id) {\r\n                this.typingText = dt.message ? `${dt.from_user.first_name} is typing...` : null;\r\n            }\r\n        }));\r\n    }\r\n\r\n    setSeen() {\r\n        const userMessages = this.selectedUserMessages.rawMessages;\r\n        if (userMessages.length > 0) {\r\n            const isOwnMessage = userMessages[userMessages.length - 1]?.from_id === this.authUser.id;\r\n            console.log('set seen', isOwnMessage)\r\n            this.scrollMsgsToBottom();\r\n            if (!isOwnMessage) {\r\n                this.socketService.setSeen({\r\n                    message_id: userMessages[userMessages.length - 1].id,\r\n                    from_id: this.chatForm.value.from_id,\r\n                    to_id: this.chatForm.value.to_id,\r\n                    from_user: this.chatForm.value.from_user,\r\n                    to_user: this.chatForm.value.to_user,\r\n                    connection_id: this.chatForm.value.connection_id,\r\n                    seen: 1,\r\n                    seen_at: moment().format('YYYY-MM-DD, h:mm:ss a')\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    getSeen() {\r\n\r\n        this.subscriptions.push(this.socketService.getSeen().subscribe((dt: any) => {\r\n            this.selectedUserMessages.messages = [];\r\n            console.log('get seen', dt)\r\n            this.getUsersMessages();\r\n        }));\r\n    }\r\n\r\n    unreadLastMessages(usersMessages) {\r\n        const messages = usersMessages.users_connections[0]?.users_messages;\r\n        const lastReceivedMessages = [];\r\n\r\n        messages.reverse().some((message) => {\r\n            if (message.from_id !== this.authUser.id) {\r\n                lastReceivedMessages.push(message);\r\n            }\r\n            return message.from_id === this.authUser.id;\r\n        });\r\n\r\n        const params = {\r\n            message_ids: lastReceivedMessages.map(m => m.id),\r\n            to_user: usersMessages.username,\r\n            from_user: this.authUser.username\r\n        };\r\n\r\n        if (params.message_ids.length > 0) {\r\n            this.socketService.unreadLastMessages(params);\r\n        }\r\n    }\r\n\r\n    blockUser(user) {\r\n        const params = {\r\n            connection_id: user.users_connections?.[0].id,\r\n            user: this.authUser,\r\n            block: +!this.showBlockedUsers,\r\n            contact_username: user.username\r\n        };\r\n\r\n        this.subscriptions.push(this.usersService.blockUser(params).subscribe(dt => {\r\n            this.activeUser = null;\r\n            this.getUsersMessages();\r\n            this.socketService.blockUnblockUser(params);\r\n        }));\r\n    }\r\n\r\n    getBlockUnblockUser() {\r\n        this.subscriptions.push(this.socketService.getBlockUnblockUser().subscribe((dt: any) => {\r\n            // this.selectedUserMessages.messages = [];\r\n            console.log('get block/unblock', dt)\r\n            this.toastr.error(`${dt.user.username} blocked the connection between you two`)\r\n            this.activeUser = null;\r\n            this.getUsersMessages();\r\n        }));\r\n    }\r\n\r\n    getSeenTooltip(message) {\r\n        const user = message.to_user;\r\n        // const thisWeekDate = moment(message.seen_at).isSame(new Date(), 'week');\r\n        // const seenDate = moment(message.seen_at).format(thisWeekDate ? 'ddd HH:mm' : 'MMM DD, YYYY HH:mm');\r\n        const seenDate = this.getElegantDate.transform(message.seen_at);\r\n\r\n        return `${user.first_name} ${user.last_name} at ${seenDate}`;\r\n    }\r\n\r\n    checkIfLastMessageSeen(lastMsg) {\r\n        return lastMsg?.seen === 0 && lastMsg?.from_id !== this.authUser.id;\r\n    }\r\n\r\n    getUserLastMessage(messages) {\r\n        return messages[messages.length - 1];\r\n    }\r\n\r\n    getChatInputPlaceholder(activeUser) {\r\n        return !this.ifContactBlocked(activeUser) ? 'Type your message' : 'Since the contact is blocked you will no longer be able to send messages to this user';\r\n    }\r\n\r\n    ifUnreadShown(lastMsg, user) {\r\n        return lastMsg?.from_id !== this.authUser.id && !user.users_connections[0].is_blocked;\r\n    }\r\n\r\n    ifMoreActionsShown(lastMsg, user) {\r\n        return !user.users_connections[0].is_blocked && (!lastMsg || lastMsg?.from_id === this.authUser.id || lastMsg?.seen === 1);\r\n    }\r\n\r\n    ifContactBlocked(user) {\r\n        return user.users_connections?.[0].is_blocked;\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n        this.scrollMsgsToBottom();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.setTyping(null);\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n\r\n}\r\n","<div class=\"chat-wrap\">\r\n    <div class=\"people-groups-container\" [hidden]=\"isChatUsersListSize() && activeUser\"\r\n         [class.responsive-list]=\"isChatUsersListSize()\">\r\n        <div id=\"people-list\" class=\"list-wrap\">\r\n            <div class=\"top-actions\">\r\n                <div id=\"back-to-active-users\">\r\n                    <button *ngIf=\"showBlockedUsers\" (click)=\"toggleBlockedUsers(false)\">\r\n                        <mat-icon>arrow_backward</mat-icon>\r\n                        <span>Active contacts</span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"three-dot-actions\" *ngIf=\"filteredUsersMessages.length > 0 || blockedUsers.length > 0\">\r\n\r\n                    <button [matMenuTriggerFor]=\"menu\" class=\"show-actions\">\r\n                        <i class=\"fas fa-ellipsis-h\"></i>\r\n                    </button>\r\n\r\n                    <mat-menu #menu=\"matMenu\">\r\n                        <button\r\n                            mat-menu-item [class.active]=\"!showBlockedUsers\" (click)=\"toggleBlockedUsers(false)\"\r\n                                [disableRipple]=\"true\">\r\n                            <i class=\"fas fa-users\"></i>\r\n                            Active users\r\n                        </button>\r\n                        <button mat-menu-item [class.active]=\"showBlockedUsers\" (click)=\"toggleBlockedUsers(true)\"\r\n                                [disableRipple]=\"true\">\r\n                            <i class=\"fa fa-users-slash\"></i>\r\n                            Blocked users\r\n                        </button>\r\n                    </mat-menu>\r\n                </div>\r\n            </div>\r\n            <ul class=\"list align-items-center\">\r\n                <li *ngFor=\"let userMessages of filteredUsersMessages\"\r\n                    [class.active]=\"activeUser?.id === userMessages.id\">\r\n\r\n                    <ng-container\r\n                        [ngTemplateOutlet]=\"itemTemplate\"\r\n                        [ngTemplateOutletContext]=\"{user: userMessages, lastMsg: getUserLastMessage(userMessages?.users_connections[0]?.users_messages)}\">\r\n                    </ng-container>\r\n\r\n                    <ng-template #itemTemplate let-user=\"user\" let-lastMsg=\"lastMsg\">\r\n                        <div class=\"d-flex user-last-msg align-items-center justify-content-between\">\r\n                            <div class=\"left-group\" (click)=\"makeUserActive(user, lastMsg)\">\r\n\r\n                                <div class=\"img user-avatar\" [class.blocked]=\"ifContactBlocked(user)\">\r\n                                    <img class=\"avatar\" [src]=\"user.avatar|getImgPath: 'user_avatars'\">\r\n                                    <div class=\"status\" [hidden]=\"onlineUsers.length === 0\"\r\n                                         [ngClass]=\"getUserCurrentStatus(user.username) ? 'online':'offline'\"></div>\r\n                                </div>\r\n                                <div class=\"text\">\r\n                                    <div class=\"name\">{{user.first_name + ' ' + user.last_name}}</div>\r\n                                    <div class=\"d-flex align-items-center\" *ngIf=\"lastMsg\">\r\n                                        <div>\r\n                                            <span class=\"latest-message\">{{lastMsg.message|fixLineBreaks}}</span>\r\n                                        </div>\r\n                                        <div>\r\n                                            <span\r\n                                                class=\"ml-4 latest-msg-date\">{{lastMsg.created_at | dateFromNow}}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"ml-auto more-btn\">\r\n                                <ng-container *ngIf=\"ifMoreActionsShown(lastMsg, user)\">\r\n                                    <button mat-icon-button class=\"more-actions-btn\" [matMenuTriggerFor]=\"menu\"\r\n                                            [disableRipple]=\"true\">\r\n                                        <i class=\"fas fa-ellipsis-v\"></i>\r\n                                    </button>\r\n                                    <mat-menu #menu=\"matMenu\">\r\n                                        <button mat-menu-item *ngIf=\"ifUnreadShown(lastMsg, user) \"\r\n                                                (click)=\"unreadLastMessages(user)\">\r\n                                            Unread\r\n                                        </button>\r\n                                        <button mat-menu-item *ngIf=\"!showBlockedUsers\" (click)=\"blockUser(user)\">\r\n                                            Block\r\n                                        </button>\r\n<!--                                        <button mat-menu-item *ngIf=\"showBlockedUsers\" (click)=\"blockUser(user)\">-->\r\n<!--                                            Unblock-->\r\n<!--                                        </button>-->\r\n                                    </mat-menu>\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"checkIfLastMessageSeen(lastMsg)\">\r\n                                    <button class=\"seen-circle\">\r\n                                        <strong>{{userMessages?.unseens}}</strong>\r\n                                    </button>\r\n                                </ng-container>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div class=\"chat\" [hidden]=\"(isChatUsersListSize() && !activeUser)\">\r\n        <div class=\"chat-about\" *ngIf=\"activeUser\" [class.blocked]=\"ifContactBlocked(activeUser)\">\r\n            <div class=\"left\">\r\n                <button mat-icon-button *ngIf=\"isChatUsersListSize()\" (click)=\"activeUser = null;\">\r\n                    <mat-icon>arrow_back</mat-icon>\r\n                </button>\r\n                <div class=\"img\">\r\n                    <img class=\"avatar\" [src]=\"activeUser.avatar|getImgPath: 'user_avatars'\">\r\n                </div>\r\n                <div class=\"name\">{{activeUser.first_name + ' ' + activeUser.last_name}}</div>\r\n            </div>\r\n            <div class=\"right\">\r\n                <!--                <div class=\"remove\"><i class=\"fas fa-trash\"></i></div>-->\r\n                <!--                <div class=\"ml-auto more-btn\">-->\r\n                <!--                    <button class=\"dotes\" mat-icon-button [matMenuTriggerFor]=\"menu\" [disableRipple]=\"true\">-->\r\n                <!--                        <i class=\"fas fa-ellipsis-v\"></i>-->\r\n                <!--                    </button>-->\r\n                <!--                    <mat-menu #menu=\"matMenu\">-->\r\n                <!--                        <button mat-menu-item>Unread</button>-->\r\n                <!--                        <button mat-menu-item>Block</button>-->\r\n                <!--                    </mat-menu>-->\r\n                <!--                </div>-->\r\n            </div>\r\n        </div>\r\n\r\n        <ul class=\"chat-history\" id=\"direct-messages\" #directMessagesList>\r\n            <ng-container *ngFor=\"let msg of selectedUserMessages?.messages\">\r\n\r\n                <li class=\"data-list\"><span>{{msg.key|getDateText}}</span></li>\r\n                <ng-container *ngFor=\"let m of msg.value;let ind = index\">\r\n                    <li class=\"message-container\" [ngClass]=\"isOwnMessage(m.from_user)? 'my-message' : 'other-message'\">\r\n                        <div class=\"message-data mb-0 pl-0 d-flex justify-content-between align-items-center\">\r\n                            <div class=\"d-flex align-items-center\">\r\n                                <div class=\"img\">\r\n                                    <img class=\"avatar\" [src]=\"m.from_user.avatar|getImgPath: 'user_avatars'\">\r\n                                </div>\r\n                                <div class=\"name\">{{m.from_user.first_name + ' ' + m.from_user.last_name}}</div>\r\n                            </div>\r\n                            <div class=\"date\">{{m.created_at | date: 'HH:mm' }}</div>\r\n                        </div>\r\n                        <div class=\"message\" [innerHTML]=\"m.message\">\r\n\r\n                        </div>\r\n                        <div class=\"seen\" *ngIf=\"m.seen && m.to_id!==authUser.id\">\r\n                            <img class=\"seen-avatar\" [matTooltip]=\"getSeenTooltip(m)\"\r\n                                 [src]=\"m.to_user.avatar|getImgPath: 'user_avatars'\">\r\n                        </div>\r\n                    </li>\r\n                </ng-container>\r\n            </ng-container>\r\n        </ul>\r\n\r\n        <ng-container *ngIf=\"activeUser\">\r\n            <small class=\"text-center font-italic d-block\">{{typingText}}</small>\r\n            <div class=\"chat-message\" [class.disabled]=\"ifContactBlocked(activeUser)\">\r\n                <form [formGroup]=\"chatForm\" class=\"chat-form\">\r\n                    <textarea cdkTextareaAutosize rows=\"4\" class=\"flex-1 mx-3\" formControlName=\"message\"\r\n                              [placeholder]=\"getChatInputPlaceholder(activeUser)\"\r\n                              (keyup)=\"setTyping()\" (focus)=\"setSeen()\"\r\n                              (keyup.enter)=\"sendMessage($event)\">\r\n                    </textarea>\r\n                </form>\r\n                <div class=\"icons\" [hidden]=\"isProduction\">\r\n                    <a href=\"\"><img src=\"assets/img/gif-24px.svg\" alt=\"\"></a>\r\n                    <a href=\"\"><img src=\"assets/img/mood-24px.svg\" alt=\"\"></a>\r\n                    <a href=\"\"><img src=\"assets/img/send-24px.svg\" alt=\"\"></a>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport IsResponsive from '@core/helpers/is-responsive';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {ChatService} from '@core/services/chat.service';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport {UsersService} from '@core/services/users.service';\r\nimport {ConfirmationDialogComponent} from '@core/components/modals/confirmation-dialog/confirmation-dialog.component';\r\nimport {Subscription} from 'rxjs';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {ShowChatGroupMembersComponent} from '@core/components/modals/show-chat-group-members/show-chat-group-members.component';\r\nimport {SocketIoService} from '@core/services/socket-io.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {GroupByPipe} from '@shared/pipes/group-by.pipe';\r\nimport * as moment from 'moment';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {FixTextLineBreaksPipe} from '@shared/pipes/fix-text-line-breaks.pipe';\r\nimport {environment} from \"@env\";\r\n\r\n@Component({\r\n    selector: 'app-group-chat',\r\n    templateUrl: './group-chat.component.html',\r\n    styleUrls: ['./group-chat.component.scss']\r\n})\r\nexport class GroupChatComponent implements OnInit, OnDestroy {\r\n\r\n    groupChatForm: FormGroup;\r\n    groupChatDetailsForm: FormGroup;\r\n\r\n    showGroupChatForm = false;\r\n    showMembersInput = false;\r\n\r\n    selectedGroup;\r\n\r\n    userContacts = [];\r\n    groupMembers = [];\r\n    socketGroupsUsers = [];\r\n    inputGroupMembers = [];\r\n    filteredContacts = [];\r\n\r\n    memberCtrl = new FormControl();\r\n\r\n    subscriptions: Subscription[] = [];\r\n\r\n    typingText = {group: null, text: null};\r\n\r\n    readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n\r\n    @Input() authUser;\r\n\r\n    chatForm: FormGroup;\r\n\r\n    @ViewChild('chipsInput') chipsInput: ElementRef<HTMLInputElement>;\r\n    @ViewChild('groupMessagesList') private messagesList: ElementRef;\r\n\r\n    @Output() groupRemoved = new EventEmitter();\r\n\r\n\r\n    selectedGroupMessages = [];\r\n    selectedRawMessages = [];\r\n\r\n    groupsMessages = [];\r\n\r\n    haveGroupJoinInvitation = false;\r\n    isProduction = environment.production;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private chatService: ChatService,\r\n        private usersService: UsersService,\r\n        private socketService: SocketIoService,\r\n        private subject: SubjectService,\r\n        private toastr: ToastrService,\r\n        private dialog: MatDialog,\r\n        private groupBy: GroupByPipe,\r\n        private fixLineBreaks: FixTextLineBreaksPipe\r\n    ) {\r\n        this.subscriptions.push(this.memberCtrl.valueChanges.subscribe(search => {\r\n            if (search) {\r\n                this.filteredContacts = this.userContacts.filter(fc => {\r\n                    const fullNameLowerCased = (fc.first_name + ' ' + fc.last_name).toLowerCase();\r\n                    if (fullNameLowerCased.includes(search)) {\r\n                        return !this.groupMembers.find(gm => gm.name.toLowerCase() === fullNameLowerCased);\r\n                    }\r\n                    return false;\r\n                });\r\n            }\r\n        }));\r\n    }\r\n\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.initGroupChatForms();\r\n        this.initForm();\r\n        this.getGroupsMessages();\r\n        this.addUserToSocket();\r\n\r\n        this.getUserContacts();\r\n        this.getGroupJoinInvitation();\r\n        this.getChatNotifications();\r\n        this.getMessagesFromSocket();\r\n\r\n        this.getTyping();\r\n        this.getSeen();\r\n    }\r\n\r\n    initGroupChatForms() {\r\n        this.groupChatForm = this.fb.group({\r\n            creator_id: [this.authUser.id],\r\n            name: ['', Validators.required],\r\n            username: [this.authUser.username]\r\n        });\r\n\r\n\r\n        this.groupChatDetailsForm = this.fb.group({\r\n            group_id: [''],\r\n            member_ids: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    initForm() {\r\n        this.chatForm = this.fb.group({\r\n            from: [this.authUser.username],\r\n            from_id: [this.authUser.id],\r\n            group_id: [this.selectedGroup?.id],\r\n            avatar: [this.authUser?.avatar],\r\n            from_user: [this.authUser],\r\n            to_id: [null],\r\n            to_user: [null],\r\n            to_group: [this.selectedGroup],\r\n            message: ['', Validators.required],\r\n            personal: [1]\r\n        });\r\n    }\r\n\r\n    addUserToSocket() {\r\n        this.socketService.addNewUser({...this.authUser, group: true});\r\n    }\r\n\r\n    getUserContacts() {\r\n        this.subscriptions.push(this.usersService.getUserContacts({\r\n            user_id: this.authUser.id,\r\n            blocked: 0\r\n        }).subscribe(dt => {\r\n            this.userContacts = dt;\r\n        }));\r\n    }\r\n\r\n    getGroupsMessages(selectedGroupBefore = null) {\r\n        this.subscriptions.push(this.chatService.getGroupsMessages({\r\n            user_id: this.authUser.id,\r\n            blocked: 0\r\n        }).subscribe(dt => {\r\n            this.groupsMessages = dt;\r\n\r\n\r\n            this.selectedGroup = dt.find(d => d.name === selectedGroupBefore) || dt[0];\r\n            this.selectedGroupMessages = this.groupBy.transform(this.selectedGroup?.chat_group_messages, 'created_at');\r\n            if (this.selectedGroup) {\r\n                if (this.selectedGroup?.chat_group_messages.length > 0) {\r\n                    this.scrollMsgsToBottom();\r\n                }\r\n                this.groupChatDetailsForm.patchValue({group_id: this.selectedGroup.id});\r\n                this.chatForm.patchValue({group_id: this.selectedGroup.id});\r\n                this.groupMembers = this.selectedGroup?.chat_group_members;\r\n                // this.getGroupMessages();\r\n                // console.log(this.groupMembers)\r\n            }\r\n        }));\r\n    }\r\n\r\n    makeGroupActive(group) {\r\n        this.selectedGroup = group;\r\n        this.groupChatDetailsForm.patchValue({group_id: this.selectedGroup.id});\r\n        this.chatForm.patchValue({group_id: this.selectedGroup.id});\r\n        this.selectedGroupMessages = this.groupBy.transform(group.chat_group_messages, 'created_at');\r\n        this.typingText.group = group;\r\n        this.getTypingTextStatus({group: group.name, message: ''});\r\n        this.getGroupMembers();\r\n    }\r\n\r\n    addGroup() {\r\n        if (this.groupChatForm.valid) {\r\n            this.subscriptions.push(this.chatService.addGroup(this.groupChatForm.value).subscribe(dt => {\r\n                this.selectedGroup = dt.find(d => this.groupChatForm.value.name === d.name)\r\n                this.getGroupsMessages(this.selectedGroup);\r\n                this.socketService.setNewGroup(this.groupChatForm.value);\r\n                this.groupChatForm.patchValue({name: ''});\r\n            }));\r\n        }\r\n\r\n    }\r\n\r\n    changeAvatar(e) {\r\n        // this.selectedGroup.avatar = e.target.files[0].name;\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('avatar', file.name);\r\n        formData.append('group_id', this.selectedGroup.id);\r\n        formData.append('member_id', this.authUser.id);\r\n        formData.append('group_avatar_file', file);\r\n        // console.log({avatar: e.target.files[0].name})\r\n        this.subscriptions.push(this.chatService.changeGroupAvatar(formData).subscribe(dt => {\r\n            this.groupsMessages = dt;\r\n            this.selectedGroup = this.groupsMessages.find(group => this.selectedGroup.id === group.id);\r\n        }));\r\n    }\r\n\r\n    removeInputMember(member) {\r\n        const index = this.inputGroupMembers.indexOf(member);\r\n\r\n        if (index >= 0) {\r\n            this.inputGroupMembers.splice(index, 1);\r\n            this.groupChatDetailsForm.patchValue({member_ids: this.inputGroupMembers});\r\n        }\r\n    }\r\n\r\n    removeSavedMember(member_id) {\r\n        this.subscriptions.push(this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed) {\r\n                this.chatService.removeGroupMember({group_id: this.selectedGroup.id, member_id}).subscribe(dt => {\r\n                    this.groupMembers = dt?.chat_group_members;\r\n                });\r\n            }\r\n        }));\r\n\r\n    }\r\n\r\n    removeGroup() {\r\n        this.subscriptions.push(this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed) {\r\n                this.chatService.removeGroup({group_id: this.selectedGroup.id}).subscribe(dt => {\r\n                    this.socketService.removeGroup({group: this.selectedGroup.name, username: this.authUser.username});\r\n                    this.groupsMessages = dt;\r\n                    this.selectedGroup = null;\r\n                });\r\n            }\r\n        }));\r\n    }\r\n\r\n\r\n    autoCompleteMemberSelected(e) {\r\n        const value = e.option.value;\r\n\r\n        if (!this.inputGroupMembers.find(gm => gm.id === value)) {\r\n            this.inputGroupMembers.push(e.option.value);\r\n            this.groupChatDetailsForm.patchValue({member_ids: this.inputGroupMembers});\r\n        }\r\n\r\n        this.chipsInput.nativeElement.value = '';\r\n        this.memberCtrl.setValue('');\r\n    }\r\n\r\n    addMember(e) {\r\n\r\n        this.chipsInput.nativeElement.value = '';\r\n        this.memberCtrl.setValue('');\r\n\r\n        console.log(this.groupChatDetailsForm.value, this.selectedGroup)\r\n\r\n        this.subscriptions.push(this.chatService.addGroupMembers(this.groupChatDetailsForm.value).subscribe(dt => {\r\n            this.groupMembers = dt?.chat_group_members;\r\n            this.socketService.inviteToNewGroup({members: this.inputGroupMembers, group_id: this.selectedGroup.id});\r\n            this.inputGroupMembers = [];\r\n        }));\r\n    }\r\n\r\n    leaveGroup() {\r\n        this.subscriptions.push(this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed) {\r\n                this.chatService.leaveGroup({\r\n                    member_id: this.authUser.id,\r\n                    group_id: this.selectedGroup.id\r\n                }).subscribe(dt => {\r\n                    this.groupsMessages = dt;\r\n                    this.socketService.leaveGroup({group: this.selectedGroup.name, username: this.authUser.username});\r\n                    this.selectedGroup = null;\r\n                });\r\n            }\r\n        }));\r\n    }\r\n\r\n    openAllMembersModal() {\r\n        this.subscriptions.push(this.dialog.open(ShowChatGroupMembersComponent, {\r\n            width: '300px',\r\n            height: '400px'\r\n        }).afterClosed().subscribe(dt => {\r\n\r\n        }));\r\n    }\r\n\r\n    ifConfirmedToJoinTheGroup(group) {\r\n        return group?.chat_group_members.find(member => member.id === this.authUser.id && member.chat_groups_members.confirmed);\r\n    }\r\n\r\n    getGroupJoinInvitation() {\r\n        this.subscriptions.push(this.socketService.inviteToGroupSent().subscribe((data: any) => {\r\n            this.chatService.getChatGroups({user_id: this.authUser.id}).subscribe(dt => {\r\n\r\n                this.groupsMessages = dt;\r\n                this.selectedGroup = this.groupsMessages.find(group => data.group_id === group.id);\r\n                this.haveGroupJoinInvitation = true;\r\n                console.log(this.selectedGroup)\r\n            });\r\n        }));\r\n    }\r\n\r\n    acceptGroupJoin() {\r\n        this.subscriptions.push(\r\n            this.chatService.acceptGroupJoin({\r\n                group_id: this.selectedGroup.id,\r\n                member_id: this.authUser.id\r\n            }).subscribe(dt => {\r\n                this.groupsMessages = dt;\r\n                this.selectedGroup = this.groupsMessages.find(group => this.selectedGroup.id === group.id);\r\n                console.log(this.selectedGroup)\r\n                this.haveGroupJoinInvitation = false;\r\n                this.socketService.acceptJoinToGroup({\r\n                    group: this.selectedGroup.name,\r\n                    username: this.authUser.username\r\n                });\r\n            })\r\n        );\r\n    }\r\n\r\n    declineGroupJoin() {\r\n        this.subscriptions.push(\r\n            this.chatService.declineGroupJoin({\r\n                group_id: this.selectedGroup.id,\r\n                member_id: this.authUser.id\r\n            }).subscribe(dt => {\r\n                this.groupsMessages = dt;\r\n                this.socketService.declineJoinToGroup({\r\n                    group: this.selectedGroup?.name,\r\n                    username: this.authUser.username\r\n                });\r\n                this.selectedGroup = this.groupsMessages.find(group => this.selectedGroup.id === group.id);\r\n            })\r\n        );\r\n    }\r\n\r\n    getChatNotifications() {\r\n        this.subscriptions.push(this.socketService.getChatNotifications().subscribe((data: any) => {\r\n            this.socketGroupsUsers = data.groupsUsers;\r\n            // console.log(this.socketGroupsUsers)\r\n            if (data.groupRemoved) {\r\n                this.getGroupsMessages();\r\n                // this.selectedGroup = data.username !== this.authUser.username ? null : this.groupsMessages[this.groups.length - 1];\r\n            } else if (data.groupCreated) {\r\n                this.selectedGroup = this.groupsMessages.find(g => g.name === data.group);\r\n                if (this.selectedGroup) {\r\n                    this.groupChatDetailsForm.patchValue({group_id: this.selectedGroup.id});\r\n                    this.groupMembers = this.selectedGroup?.chat_group_members;\r\n                }\r\n            } else if (!data.joiningChat) {\r\n                // if (data.username !== this.authUser.username) {\r\n                this.toastr.info(data.msg);\r\n                if (data.acceptingJoinGroup || data.decliningJoinGroup || data.leavingGroup) {\r\n\r\n                    this.selectedGroup = this.groupsMessages.find(g => g.name === data.group);\r\n                    if (this.selectedGroup) {\r\n                        this.getGroupMembers();\r\n                        // this.getGroupMessages();\r\n                    }\r\n                }\r\n\r\n                this.groupMembers = this.selectedGroup?.chat_group_members;\r\n                // }\r\n            }\r\n        }));\r\n    }\r\n\r\n    getGroupMembers() {\r\n        this.subscriptions.push(this.chatService.getGroupMembers({group_id: this.selectedGroup.id}).subscribe(dt => {\r\n            this.groupMembers = dt?.chat_group_members;\r\n\r\n        }));\r\n    }\r\n\r\n    getUserCurrentStatus(groupMember) {\r\n        // console.log(groupMember)\r\n        const groupName = this.groupsMessages.find(gm => gm.id === groupMember?.chat_groups_members?.group_id)?.name;\r\n        if (this.socketGroupsUsers && groupName === this.selectedGroup?.name) {\r\n            return !!this.socketGroupsUsers.find(sGroupUser => sGroupUser.group === groupName && groupMember.username === sGroupUser.username);\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    sendMessage(e) {\r\n        this.chatForm.patchValue({message: this.fixLineBreaks.transform(e.target.value)});\r\n\r\n        if (e.keyCode === 13 && !e.shiftKey && this.chatForm.value.message.trim() !== '') {\r\n            if (this.chatForm.valid) {\r\n                const data = {...this.chatForm.value, group: this.selectedGroup.name};\r\n\r\n\r\n                this.subscriptions.push(this.chatService.saveGroupMessage(data).subscribe(dt => {\r\n                    // this.selectedUserMessages.messages = this.groupBy.transform(dt[0].messages, 'created_at');\r\n                    // this.selectedUserMessages.user = dt[0].user;\r\n\r\n                    this.socketService.sendMessage(data);\r\n                    this.scrollMsgsToBottom();\r\n                    // console.log(this.selectedUserMessages);\r\n                }));\r\n                this.chatForm.patchValue({message: ''});\r\n            }\r\n        }\r\n    }\r\n\r\n    scrollMsgsToBottom() {\r\n\r\n        try {\r\n            // console.log(this.messagesList.nativeElement, this.messagesList.nativeElement.scrollHeight)\r\n            this.messagesList.nativeElement.scrollTop = this.messagesList.nativeElement.scrollHeight;\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    // getGroupMessages() {\r\n    //     this.subscriptions.push(this.chatService.getGroupChatMessages({\r\n    //         group_id: this.selectedGroup?.id,\r\n    //         group: 1\r\n    //     }).subscribe(dt => {\r\n    //         this.selectedRawMessages = dt;\r\n    //         this.selectedGroupMessages = this.groupBy.transform(dt, 'created_at');\r\n    //\r\n    //     }));\r\n    // }\r\n\r\n    getMessagesFromSocket() {\r\n        this.subscriptions.push(this.socketService.onNewMessage().subscribe((dt: any) => {\r\n            if (dt.group) {\r\n\r\n                console.log('new message group chat!!!');\r\n                // this.groupRemoved.emit({});\r\n                this.getGroupsMessages(this.selectedGroup.name);\r\n                // this.selectedGroupMessages = this.groupBy.transform(dt, 'created_at');\r\n                this.typingText = {group: null, text: null};\r\n                // this.getUsersMessages();\r\n            }\r\n\r\n        }));\r\n    }\r\n\r\n\r\n    getMessageClass(user) {\r\n        this.scrollMsgsToBottom();\r\n        return user.id === this.authUser.id ? 'my-message' : 'other-message';\r\n    }\r\n\r\n    getSeen() {\r\n\r\n        this.subscriptions.push(this.socketService.getSeen().subscribe((dt: any) => {\r\n            // console.log('get seen', dt)\r\n            // console.log(this.selectedGroup)\r\n            this.getGroupsMessages(this.selectedGroup.name);\r\n        }));\r\n    }\r\n\r\n    setSeen() {\r\n        // console.log(this.selectedGroupMessages)\r\n        // console.log(this.groupsMessages)\r\n        const messages = this.selectedGroup?.chat_group_messages;\r\n        const lastMessage = messages[messages.length - 1];\r\n        const isOwnMessage = lastMessage?.from_id === this.authUser.id;\r\n        // console.log('set seen')\r\n        // console.log(isOwnMessage)\r\n        // console.log(lastMessage)\r\n        // console.log(this.selectedGroup)\r\n        this.scrollMsgsToBottom();\r\n        if (!isOwnMessage) {\r\n            this.socketService.setSeen({\r\n                message_id: lastMessage?.id,\r\n                from_id: this.chatForm.value.from_id,\r\n                to_id: this.chatForm.value.to_id,\r\n                from_user: this.chatForm.value.from_user,\r\n                group: this.selectedGroup.name,\r\n                group_id: this.selectedGroup.id,\r\n                seen: 1,\r\n                seen_at: moment().format('YYYY-MM-DD, h:mm:ss a')\r\n            });\r\n        }\r\n    }\r\n\r\n    getSeenTooltip(message) {\r\n        const seenDate = message.group_chat_messages_seen.created_at;\r\n        const thisWeekDate = moment(seenDate).isSame(new Date(), 'week');\r\n        const seenDateFormatted = moment(seenDate).format(thisWeekDate ? 'ddd HH:mm' : 'MMM DD, YYYY HH:mm');\r\n\r\n        return `${message.first_name} ${message.last_name} at ${seenDateFormatted}`;\r\n    }\r\n\r\n    getTyping() {\r\n        this.socketService.getTyping().subscribe((dt: any) => {\r\n            console.log(dt.group, this.selectedGroup?.name)\r\n            this.getTypingTextStatus(dt);\r\n\r\n        });\r\n    }\r\n\r\n    setTyping() {\r\n        this.socketService.setTyping({\r\n            from_user: this.chatForm.value.from_user,\r\n            group: this.selectedGroup.name,\r\n            message: this.chatForm.value.message\r\n        });\r\n    }\r\n\r\n    getTypingTextStatus(dt) {\r\n        const sameGroupTyping = dt.from_user?.id !== this.authUser.id && dt.group === this.selectedGroup.name && dt.message;\r\n        this.typingText = {\r\n            group: sameGroupTyping ? this.selectedGroup?.name === dt.group : null,\r\n            text: sameGroupTyping ? `${dt.from_user.username} is typing...` : null\r\n        };\r\n    }\r\n\r\n    isChatUsersListSize() {\r\n        return IsResponsive.isChatUsersListSize();\r\n    }\r\n\r\n    isSeenByAuthUser(messages) {\r\n        const f = messages.filter(message => {\r\n            let found = false;\r\n            if (message.from_id !== this.authUser.id) {\r\n                found = !message.seen_by.find(sb => sb.id === this.authUser.id);\r\n            }\r\n            return found;\r\n        });\r\n        return f.length;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n}\r\n","<div class=\"chat-wrap\">\r\n\r\n    <div class=\"people-groups-container\" [hidden]=\"isChatUsersListSize()\"\r\n         [class.responsive-list]=\"isChatUsersListSize()\">\r\n        <div id=\"groups-list\" class=\"list-wrap\">\r\n            <button class=\"create-group-chat\" [hidden]=\"showGroupChatForm\" (click)=\"showGroupChatForm = true\"><img\r\n                src=\"assets/img/noun_create.png\" alt=\"\"> Create new group\r\n            </button>\r\n            <form [formGroup]=\"groupChatForm\" [hidden]=\"!showGroupChatForm\" id=\"group-chat-form\">\r\n                <input formControlName=\"name\" placeholder=\"Group name\">\r\n                <button mat-icon-button (click)=\"addGroup()\">\r\n                    <mat-icon>done</mat-icon>\r\n                </button>\r\n                <button mat-icon-button (click)=\"showGroupChatForm = false\">\r\n                    <mat-icon>close</mat-icon>\r\n                </button>\r\n            </form>\r\n            <ul class=\"list\">\r\n                <li class=\"list-chat-group\" [class.active]=\"group.id===selectedGroup?.id\"\r\n                    *ngFor=\"let group of groupsMessages\"\r\n                    [class.unconfirmed]=\"!ifConfirmedToJoinTheGroup(group)\"\r\n                    (click)=\"makeGroupActive(group)\">\r\n                    <div class=\"left\">\r\n                        <img class=\"img\" [src]=\"group.avatar|getImgPath:'group_avatars'\">\r\n                        <div class=\"text\">\r\n                            <div class=\"name\">{{group.name}}</div>\r\n                            <span>{{group.chat_group_messages[group.chat_group_messages.length - 1]?.message| fixLineBreaks:' '}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"right\">\r\n                        <button class=\"seen-circle\" [hidden]=\"!isSeenByAuthUser(group.chat_group_messages)\">\r\n                            <strong>{{isSeenByAuthUser(group.chat_group_messages)}}</strong>\r\n                        </button>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"chat\" [hidden]=\"!selectedGroup\">\r\n        <div class=\"chat-top\">\r\n            <form [formGroup]=\"groupChatDetailsForm\"\r\n                  [hidden]=\"!selectedGroup || !ifConfirmedToJoinTheGroup(selectedGroup)\">\r\n                <div class=\"chat-about\">\r\n                    <div class=\"left\">\r\n                        <label for=\"group-avatar-input\">\r\n                            <img class=\"img\" [src]=\"selectedGroup?.avatar|getImgPath:'group_avatars'\">\r\n                        </label>\r\n                        <input id=\"group-avatar-input\" type=\"file\" [hidden]=\"true\" (change)=\"changeAvatar($event)\">\r\n                        <div class=\"group-name\">{{selectedGroup?.name}}</div>\r\n\r\n                    </div>\r\n                    <div class=\"center\">\r\n                        <div class=\"member-add\" [hidden]=\"!showMembersInput\">\r\n                            <mat-form-field>\r\n                                <mat-chip-list #tagList aria-label=\"Fruit selection\" formControlName=\"member_ids\">\r\n                                    <mat-chip *ngFor=\"let member of inputGroupMembers\"\r\n                                              (removed)=\"removeInputMember(member)\">\r\n                                        {{member.first_name + ' ' + member.last_name}}\r\n                                        <mat-icon matChipRemove>cancel</mat-icon>\r\n                                    </mat-chip>\r\n\r\n                                    <input type=\"text\" #chipsInput\r\n                                           placeholder=\"Member name from your contacts\"\r\n                                           matInput\r\n                                           maxlength=\"10\"\r\n                                           [formControl]=\"memberCtrl\"\r\n                                           [matChipInputFor]=\"tagList\"\r\n                                           [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                                           [matAutocomplete]=\"auto\">\r\n                                </mat-chip-list>\r\n                                <mat-autocomplete #auto=\"matAutocomplete\"\r\n                                                  (optionSelected)=\"autoCompleteMemberSelected($event)\">\r\n\r\n                                    <!--                            <mat-optgroup *ngFor=\"let contact of userContacts\" [label]=\"group.name\">-->\r\n                                    <mat-option *ngFor=\"let contact of filteredContacts\" [value]=\"contact\">\r\n                                        {{contact.first_name + ' ' + contact.last_name}}\r\n                                    </mat-option>\r\n                                    <!--                            </mat-optgroup>-->\r\n\r\n\r\n                                </mat-autocomplete>\r\n\r\n                                <mat-hint align=\"end\">Please press 'Enter' after the name</mat-hint>\r\n\r\n                            </mat-form-field>\r\n                            <button (click)=\"addMember($event)\">Add</button>\r\n                        </div>\r\n                        <div class=\"members-list\" [hidden]=\"showMembersInput\">\r\n                            <ul *ngIf=\"groupMembers?.length > 0\">\r\n                                <li class=\"group-member\" *ngFor=\"let m of groupMembers\"\r\n                                    [class.pending]=\"!m.chat_groups_members.confirmed\">\r\n                                    <img class=\"avatar\" [matTooltip]=\"m.name\"\r\n                                         [src]=\"m.avatar|getImgPath: 'user_avatars'\">\r\n                                    <mat-icon *ngIf=\"m.id !== selectedGroup?.creator_id\"\r\n                                              (click)=\"removeSavedMember(m.id)\">cancel\r\n                                    </mat-icon>\r\n                                    <div class=\"status\" [ngClass]=\"getUserCurrentStatus(m) ? 'online':'offline'\"></div>\r\n                                </li>\r\n                            </ul>\r\n                            <a id=\"show-more-members\" (click)=\"openAllMembersModal()\">\r\n                                Show more\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"right\">\r\n                        <button mat-icon-button [disableRipple]=\"true\" (click)=\"showMembersInput = !showMembersInput\">\r\n                            <mat-icon>people</mat-icon>\r\n                        </button>\r\n                        <div class=\"remove\" (click)=\"removeGroup()\" *ngIf=\"authUser.id === selectedGroup?.creator_id\">\r\n                            <a><i class=\"fas fa-trash\"></i></a>\r\n                        </div>\r\n                        <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"dotes\" [disableRipple]=\"true\">\r\n                            <i class=\"fas fa-ellipsis-v\"></i>\r\n                        </button>\r\n                        <mat-menu #menu=\"matMenu\">\r\n                            <button mat-menu-item (click)=\"showMembersInput = !showMembersInput\">\r\n                                Add members\r\n                            </button>\r\n                            <button mat-menu-item (click)=\"leaveGroup()\"\r\n                                    *ngIf=\"authUser.id !== selectedGroup?.creator_id\">\r\n                                Leave group\r\n                            </button>\r\n                        </mat-menu>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <div class=\"confirm-joining-group\" [hidden]=\"!selectedGroup || ifConfirmedToJoinTheGroup(selectedGroup)\">\r\n                <p>Please accept or decline joining to the <strong>{{selectedGroup?.name}}</strong> group</p>\r\n                <div class=\"actions\">\r\n                    <button class=\"accept-btn\" (click)=\"acceptGroupJoin()\">Accept</button>\r\n                    <button class=\"decline-btn\" (click)=\"declineGroupJoin()\">Decline</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <ul class=\"chat-history\" id=\"group-messages\" #groupMessagesList>\r\n            <div [hidden]=\"selectedGroupMessages?.length === 0\">\r\n                <div *ngFor=\"let msg of selectedGroupMessages\">\r\n\r\n                    <li class=\"data-list\"><span>{{msg.key|getDateText}}</span></li>\r\n                    <ng-container *ngFor=\"let m of msg.value;let ind = index\">\r\n                        <li class=\"message-container\" [ngClass]=\"getMessageClass(m.from_user)\">\r\n                            <div class=\"message-data mb-0 pl-0 d-flex justify-content-between align-items-center\">\r\n                                <div class=\"d-flex align-items-center\">\r\n                                    <div class=\"img\">\r\n                                        <img class=\"avatar\" [src]=\"m.from_user.avatar|getImgPath: 'user_avatars'\">\r\n                                    </div>\r\n                                    <div class=\"name\">{{m.from_user.first_name + ' ' + m.from_user.last_name}}</div>\r\n                                </div>\r\n                                <div class=\"date\">{{m.created_at | date: 'HH:mm' }}</div>\r\n                            </div>\r\n                            <div class=\"message\" [innerHTML]=\"m.message\">\r\n<!--                                {{m.message}}-->\r\n                            </div>\r\n                            <div class=\"seen\">\r\n                                <ng-container *ngFor=\"let seen of m.seen_by\">\r\n                                    <img class=\"seen-avatar\"\r\n                                         [matTooltip]=\"getSeenTooltip(seen)\"\r\n                                         [src]=\"seen.avatar|getImgPath: 'user_avatars'\">\r\n                                </ng-container>\r\n                            </div>\r\n                        </li>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n        </ul>\r\n\r\n        <small class=\"text-center font-italic d-block\" *ngIf=\"typingText.text\">{{typingText.text}}</small>\r\n        <div class=\"chat-message\" [hidden]=\"!selectedGroup\">\r\n            <form [formGroup]=\"chatForm\" class=\"chat-form\">\r\n                <textarea cdkTextareaAutosize class=\"flex-1 mx-3\" formControlName=\"message\" placeholder=\"Type your message\"\r\n                       (keyup)=\"setTyping()\" (focus)=\"setSeen()\"\r\n                       (keyup.enter)=\"sendMessage($event)\">\r\n                </textarea>\r\n            </form>\r\n            <div class=\"icons\" [hidden]=\"isProduction\">\r\n                <a href=\"\"><img src=\"assets/img/gif-24px.svg\" alt=\"\"></a>\r\n                <a href=\"\"><img src=\"assets/img/mood-24px.svg\" alt=\"\"></a>\r\n                <a href=\"\"><img src=\"assets/img/send-24px.svg\" alt=\"\"></a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ChatService} from '@core/services/chat.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {SocketIoService} from '@core/services/socket-io.service';\r\n\r\nimport {DatePipe} from '@angular/common';\r\nimport {GroupByPipe} from '@shared/pipes/group-by.pipe';\r\nimport {Subscription} from 'rxjs';\r\nimport {SubjectService} from '@core/services/subject.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-show-messages',\r\n    templateUrl: './show-messages.component.html',\r\n    styleUrls: ['./show-messages.component.scss']\r\n})\r\nexport class ShowMessagesComponent implements OnInit {\r\n    activeTab = 'direct';\r\n    authUser;\r\n\r\n    groupsMessages = [];\r\n    groupsLoaded = false;\r\n    subscriptions: Subscription[] = [];\r\n    newMessagesCountInGroups = 0;\r\n    newMessagesCountInDirect = 0;\r\n\r\n    constructor(\r\n        private chatService: ChatService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private socketService: SocketIoService,\r\n        private subject: SubjectService,\r\n        private datePipe: DatePipe,\r\n        private groupBy: GroupByPipe,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.authUser = this.getAuthUser.transform();\r\n        this.getGroupsMessages();\r\n    }\r\n\r\n\r\n    changeTab(tab) {\r\n        this.activeTab = tab;\r\n    }\r\n\r\n    getGroupsMessages() {\r\n        this.subscriptions.push(this.chatService.getGroupsMessages({\r\n            user_id: this.authUser.id,\r\n            blocked: 0\r\n        }).subscribe(dt => {\r\n            this.groupsMessages = dt;\r\n            this.groupsLoaded = true;\r\n            const newMessagesSource = dt.filter(fm => fm.new_messages_count > 0);\r\n            console.log(newMessagesSource)\r\n            this.newMessagesCountInGroups = newMessagesSource.length;\r\n            this.subject.setNewMessagesSourceData({source: newMessagesSource, type: 'group'});\r\n        }));\r\n    }\r\n\r\n\r\n}\r\n","<ng-container *ngIf=\"authUser\">\r\n    <app-user-tags></app-user-tags>\r\n    <div>\r\n        <div class=\"tab-wrap\">\r\n            <button class=\"tab direct-tab\" [matBadge]=\"newMessagesCountInDirect.toString()\" matBadgePosition=\"before\"\r\n                    [matBadgeHidden]=\"activeTab==='direct' || newMessagesCountInDirect===0 \"\r\n                    [class.active]=\"activeTab=='direct'\" (click)=\"changeTab('direct')\">Chat\r\n            </button>\r\n            <button class=\"tab group-tab\" [matBadge]=\"newMessagesCountInGroups.toString()\"\r\n                    [matBadgeHidden]=\"activeTab==='group' || newMessagesCountInGroups===0 \"\r\n                    [class.active]=\"activeTab==='group'\"\r\n                    (click)=\"changeTab('group')\">Group Chat\r\n            </button>\r\n        </div>\r\n        <app-direct-chat *ngIf=\"activeTab==='direct' && authUser\" [authUser]=\"authUser\"\r\n                         (newMessagesCountReceived)=\"newMessagesCountInDirect = $event\"></app-direct-chat>\r\n        <app-group-chat *ngIf=\"activeTab=='group' && authUser\" [authUser]=\"authUser\"></app-group-chat>\r\n\r\n    </div>\r\n</ng-container>\r\n"],"sourceRoot":"webpack:///"}