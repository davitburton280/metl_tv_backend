{"version":3,"sources":["webpack:///src/app/core/components/modals/img-edit-cropper/img-edit-cropper.component.ts","webpack:///src/app/core/components/modals/img-edit-cropper/img-edit-cropper.component.html","webpack:///src/app/core/components/modals/upload-file/upload-file.component.ts","webpack:///src/app/core/components/modals/upload-file/upload-file.component.html","webpack:///node_modules/cropperjs/dist/cropper.js"],"names":["ImgEditCropperComponent","dialogRef","_userInfoService","data","title","imageSrc","this","shape","file","_getAuthInfo","imgSrcFile","_userInfo","subscribe","authUser","console","log","reader","FileReader","onload","e","target","result","toString","readAsDataURL","avatarImgLoad","cropperImgLoad","cropper","imageElement","nativeElement","zoomable","scalable","viewMode","aspectRatio","crop","canvas","getCroppedCanvas","cropperImage","toDataURL","saveAvatarImg","saveCropperImg","minWidth","minHeight","maxWidth","maxHeight","toBlob","blob","close","Date","now","closedModal","loadImage","saveImg","UploadFileComponent","postsServices","uploadFile","showUploadImg","percentProgressBar","fileName","typeFile","files","showProgressBar","apiURL","type","countUploadFile","post","obj","name","cover_img","src","includes","push","event","i","fl","index","duration","audio","Audio","length","ArrayBuffer","addEventListener","progressPercent","srcImg","Number","loaded","total","toFixed","id","group_id","description","fd","FormData","forEach","elem","append","dt","path","editPosts","filter","saveFile","module","exports","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread2","arguments","source","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_typeof","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","value","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","iter","from","o","minLen","n","call","slice","test","_unsupportedIterableToArray","len","arr2","IS_BROWSER","window","document","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","dragMode","initialAspectRatio","NaN","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","zoom","isNaN","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","error","isFunction","toArray","callback","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","addClass","classList","add","className","trim","indexOf","removeClass","remove","replace","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","getData","dataset","getAttribute","setData","setAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","removeEventListener","removeListener","handler","split","listeners","addListener","_handler","_element$listeners","_len2","_key2","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","transform","join","WebkitTransform","msTransform","getPointer","_ref2","endOnly","pageX","pageY","end","endX","endY","startX","startY","getAdjustedSizes","_ref4","height","width","isValidWidth","isValidHeight","adjustedWidth","getSourceCanvas","image","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","_ref8$maxHeight","_ref8$minWidth","_ref8$minHeight","createElement","context","getContext","maxSizes","minSizes","min","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","PI","scale","drawImage","map","param","floor","fromCharCode","String","REGEXP_DATA_URL_HEAD","render","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","containerData","offsetWidth","offsetHeight","imageData","rotated","abs","canvasWidth","canvasHeight","canvasData","limited","limitCanvas","oldLeft","oldTop","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","_ref5","degree","arc","sinArc","sin","cosArc","cos","newWidth","newHeight","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","alt","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","removeAttribute","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","ratio","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","ratioX","ratioY","getCanvasData","getCropBoxData","setCanvasData","setCropBoxData","setDragMode","dragBox","contains","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","pointerType","ctrlKey","action","pointers","changedTouches","touch","identifier","pointerId","originalEvent","cropping","change","offset","right","bottom","renderable","shiftKey","pointer","range","x","y","check","side","move","pointers2","maxRatio","pointer2","x1","y1","x2","y2","z1","sqrt","p","methods","reset","initialImageData","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","count","_ref3","rotateTo","_scaleX","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","HTMLCanvasElement","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","setAspectRatio","mode","croppable","AnotherCropper","Cropper","tagName","Error","reloading","sizing","init","protoProps","staticProps","read","base64","binary","atob","arrayBuffer","uint8","Uint8Array","charCodeAt","clone","xhr","XMLHttpRequest","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","response","onloadend","open","responseType","withCredentials","send","orientation","dataView","DataView","littleEndian","app1Start","ifdStart","getUint8","byteLength","tiffOffset","start","str","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","mimeType","chunks","subarray","btoa","_parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","isIOSWebKit","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild"],"mappings":"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","file":"x","sourcesContent":["import {AfterViewInit, Component, ElementRef, Inject, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport Cropper from 'cropperjs';\r\nimport {CurrentUserData} from '@core/interfaces';\r\nimport {UserInfoService} from '@core/services/user-info.service';\r\n\r\n@Component({\r\n    selector: 'app-img-edit-cropper',\r\n    templateUrl: './img-edit-cropper.component.html',\r\n    styleUrls: ['./img-edit-cropper.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ImgEditCropperComponent implements OnInit, AfterViewInit {\r\n\r\n    title = '';\r\n\r\n    imageSrc = '';\r\n    cropperImage;\r\n    authUser: CurrentUserData;\r\n    @ViewChild('image', {static: false})\r\n    public imageElement: ElementRef;\r\n    private cropper: Cropper;\r\n    file;\r\n    shape;\r\n\r\n\r\n    public constructor(\r\n        public dialogRef: MatDialogRef<ImgEditCropperComponent>,\r\n        private _userInfoService: UserInfoService,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        // private getAuthUser: GetAuthUserPipe,\r\n    ) {\r\n        this.title = this.data.title;\r\n        this.shape = this.data.shape;\r\n        this.file = this.data.file;\r\n        this._getAuthInfo();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.imgSrcFile(this.file);\r\n    }\r\n\r\n    private _getAuthInfo() {\r\n        this._userInfoService._userInfo.subscribe((data) => {\r\n            this.authUser = data;\r\n            console.log(this.authUser, 'Img Edit cropper');\r\n        });\r\n    }\r\n\r\n    imgSrcFile(file) {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            this.imageSrc = e.target.result.toString();\r\n        };\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    public ngAfterViewInit() {\r\n\r\n    }\r\n\r\n    loadImage() {\r\n        if (this.shape === 'circle') {\r\n            this.avatarImgLoad();\r\n        }\r\n        if (this.shape === 'square') {\r\n            this.cropperImgLoad();\r\n        }\r\n    }\r\n\r\n    cropperImgLoad() {\r\n        this.cropper = new Cropper(this.imageElement.nativeElement, {\r\n            zoomable: false,\r\n            scalable: false,\r\n            viewMode: 2,\r\n            aspectRatio: 1200 / 300,\r\n            crop: () => {\r\n                const canvas = this.cropper.getCroppedCanvas();\r\n                this.cropperImage = canvas.toDataURL('image/png');\r\n            }\r\n        });\r\n    }\r\n\r\n    avatarImgLoad() {\r\n        this.cropper = new Cropper(this.imageElement.nativeElement, {\r\n            zoomable: false,\r\n            scalable: false,\r\n            viewMode: 2,\r\n            aspectRatio: 400 / 400,\r\n            crop: () => {\r\n                const canvas = this.cropper.getCroppedCanvas();\r\n                this.cropperImage = canvas.toDataURL('image/png');\r\n            }\r\n        });\r\n    }\r\n\r\n    saveImg() {\r\n        if (this.shape === 'circle') {\r\n            this.saveAvatarImg();\r\n        }\r\n        if (this.shape === 'square') {\r\n            this.saveCropperImg();\r\n        }\r\n    }\r\n\r\n    saveCropperImg() {\r\n        this.cropper.getCroppedCanvas({\r\n            minWidth: 720,\r\n            minHeight: 300,\r\n            maxWidth: 720,\r\n            maxHeight: 300,\r\n        }).toBlob((blob) => {\r\n            console.log(blob);\r\n            this.dialogRef.close({blob, shape: 'square'});\r\n        });\r\n    }\r\n\r\n    saveAvatarImg() {\r\n        this.cropper.getCroppedCanvas({\r\n            minWidth: 400,\r\n            minHeight: 400,\r\n            maxWidth: 400,\r\n            maxHeight: 400,\r\n        }).toBlob((blob) => {\r\n            console.log(blob);\r\n            blob['name'] = Date.now() + '.png';\r\n            this.dialogRef.close({blob, shape: 'circle'});\r\n        }, 'image/png');\r\n    }\r\n\r\n\r\n    closedModal() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n}\r\n","<div class=\"imageCropper\">\r\n    <div class=\"header\">\r\n        <h1>{{title}}</h1>\r\n        <mat-icon class=\"iconClosedModal\" (click)=\"closedModal()\">close</mat-icon>\r\n    </div>\r\n\r\n    <div class=\"img-container\" [ngClass]=\"{'circle': shape === 'circle'}\">\r\n        <img #image [src]=\"imageSrc\" (load)=\"loadImage()\" crossorigin alt=\"\">\r\n    </div>\r\n\r\n    <div class=\"img-save-button\">\r\n        <button (click)=\"saveImg()\">Save Image</button>\r\n    </div>\r\n\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { API_URL } from '@core/constants/global';\r\nimport { PostsService } from '@core/services/posts.service';\r\nimport { VideoService } from '@core/services/video.service';\r\n\r\n@Component({\r\n  selector: 'app-upload-file',\r\n  templateUrl: './upload-file.component.html',\r\n  styleUrls: ['./upload-file.component.scss']\r\n})\r\nexport class UploadFileComponent implements OnInit {\r\n\r\n    title = 'Upload File';\r\n\r\n    srcImg;\r\n    showUploadImg = false;\r\n    percentProgressBar = 0;\r\n    fileName = [];\r\n    typeFile = [];\r\n    countUploadFile;\r\n    files = [];\r\n    type;\r\n    showProgressBar = true;\r\n    apiURL = API_URL;\r\n\r\n  constructor(\r\n      public dialogRef: MatDialogRef<UploadFileComponent>,\r\n      @Inject(MAT_DIALOG_DATA) public data: any,\r\n      private postsServices: PostsService,\r\n      private uploadFile: VideoService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n      console.log(this.data);\r\n      this.type = this.data.type;\r\n      this.countUploadFile = this.data.countUploadFile;\r\n      console.log(this.type);\r\n      console.log(this.countUploadFile);\r\n      if (this.data.post) {\r\n          this.title = 'Edit Post';\r\n          this.showProgressBar = false;\r\n          const post = this.data.post;\r\n          const obj = {\r\n              name: post.cover_img,\r\n              type: '',\r\n              src: ''\r\n          };\r\n          if (post.cover_img.includes('image')) {\r\n              obj.type = 'image';\r\n              obj.src = this.apiURL + 'uploads/' + obj.type + 's/' + post.cover_img;\r\n          }\r\n          if (post.cover_img.includes('video')) {\r\n              obj.type = 'video';\r\n              obj.src = this.apiURL + 'uploads/' + obj.type + 's/' + post.cover_img;\r\n          }\r\n          this.files.push(obj);\r\n          this.showUploadImg = true;\r\n          console.log(this.files);\r\n      }\r\n  }\r\n\r\n\r\n    videoUpload(event): any {\r\n        this.showProgressBar = true;\r\n        this.files = [];\r\n        this.percentProgressBar = 0;\r\n        this.showUploadImg = true;\r\n        for (let i = 0; i < event.target.files.length; i++) {\r\n            const fl = event.target.files[i];\r\n            const obj = {\r\n                index: i,\r\n                file: fl,\r\n                name: fl.name,\r\n                type: fl.type,\r\n                src: '',\r\n                duration: null\r\n            };\r\n            this.fileName.push(fl.name);\r\n            this.typeFile.push(fl.type);\r\n            this.files.push(obj);\r\n            if (fl.type.includes('video')) {\r\n                if (this.type === 'image') {\r\n                    this.dialogRef.close('Upload images');\r\n                }\r\n                // tslint:disable-next-line:prefer-for-of\r\n                const audio = new Audio();\r\n                const reader = new FileReader();\r\n                reader.onload = (e) => {\r\n                    const data = e.target.result.toString().length;\r\n                    const bytes = new ArrayBuffer(data);\r\n                    audio.src = e.target.result.toString();\r\n                    audio.addEventListener('loadedmetadata', () => {\r\n                        console.log(audio.duration);\r\n                        this.files[i].duration = audio.duration;\r\n                        // @ts-ignore\r\n                        // this.fd.append('video', obj);\r\n                    }, false);\r\n                    this.progressPercent(e);\r\n                };\r\n                reader.readAsDataURL(fl);\r\n            }\r\n            console.log(fl.type.includes('image'));\r\n            if (fl.type.includes('image')) {\r\n                const reader = new FileReader();\r\n                reader.onload = (e) => {\r\n                    this.srcImg = e.target.result.toString();\r\n                    this.files[i].src = e.target.result.toString();\r\n                    // @ts-ignore\r\n                    // this.fd.append('image', obj);\r\n                    this.progressPercent(e);\r\n                };\r\n                reader.readAsDataURL(fl);\r\n            }\r\n        }\r\n        console.log(this.files);\r\n    }\r\n\r\n    progressPercent(e) {\r\n        const loaded = e.loaded;\r\n        const total = e.total;\r\n        this.percentProgressBar = Number(((loaded / total) * 100).toFixed());\r\n    }\r\n\r\n    saveFile() {\r\n        if (this.data.post) {\r\n            if (this.files[0]?.file === undefined) {\r\n                return this.dialogRef.close('not edit');\r\n            }\r\n            console.log(this.files);\r\n            console.log(this.data.post);\r\n            const obj = {\r\n                id: this.data.post.id,\r\n                group_id: this.data.post.group_id,\r\n                description: this.data.post.description,\r\n                cover_img: this.data.post.cover_img\r\n            };\r\n            const fd = new FormData();\r\n            let type = '';\r\n            this.files.forEach((elem) => {\r\n                if (elem.type.includes('image')) {\r\n                    fd.append('image', elem.file);\r\n                    type = 'image';\r\n                }\r\n                if (elem.type.includes('video')) {\r\n                    fd.append('video', elem.file);\r\n                    type = 'video';\r\n                }\r\n                fd.append('belonging', 'post_img');\r\n                fd.append('duration', elem.duration);\r\n            });\r\n            this.uploadFile.uploadFile(fd, type).subscribe((dt) => {\r\n                console.log(dt);\r\n                obj.cover_img = dt.path;\r\n                this.postsServices.editPosts(obj).subscribe((data) => {\r\n                    console.log(data);\r\n                });\r\n            });\r\n            return this.dialogRef.close();\r\n        }\r\n        this.dialogRef.close(this.files);\r\n    }\r\n\r\n    canselFile(file, i) {\r\n        this.files = this.files.filter((elem) => elem.index !== this.files[i].index);\r\n        console.log(this.files);\r\n    }\r\n\r\n    closedModal() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n}\r\n","<div class=\"uploadModal\">\r\n    <div class=\"header\">\r\n        <h1>{{title}}</h1>\r\n        <mat-icon class=\"iconClosedModal\" (click)=\"closedModal()\">close</mat-icon>\r\n    </div>\r\n    <div *ngIf=\"(countUploadFile === 'oneFile')\" class=\"inputFile\">\r\n        <button class=\"buttonUpload\" (click)=\"uploadFile.click()\">\r\n            <mat-icon>save_alt</mat-icon>\r\n            <span>Upload</span>\r\n        </button>\r\n        <input type=\"file\" hidden #uploadFile (change)=\"videoUpload($event)\">\r\n    </div>\r\n    <div *ngIf=\"!(countUploadFile === 'oneFile')\" class=\"inputFile\">\r\n        <button class=\"buttonUpload\" (click)=\"uploadFile.click()\">\r\n            <mat-icon>save_alt</mat-icon>\r\n            <span>Upload</span>\r\n        </button>\r\n        <input type=\"file\" hidden multiple #uploadFile (change)=\"videoUpload($event)\">\r\n    </div>\r\n    <div *ngFor=\"let file of files; let i = index\">\r\n        <div *ngIf=\"showUploadImg\" class=\"progressFile\">\r\n            <div class=\"imgAndName\">\r\n                <div class=\"img\">\r\n                    <mat-icon *ngIf=\"file.type.includes('video')\">movie</mat-icon>\r\n                    <img *ngIf=\"file.type.includes('image')\" [src]=\"file.src\" alt=\"\">\r\n                </div>\r\n                <div class=\"name\">{{file.name}}</div>\r\n            </div>\r\n            <div class=\"progressBar\" *ngIf=\"showProgressBar\">\r\n                {{percentProgressBar}}%<mat-progress-bar class=\"matProgressBar\" mode=\"determinate\" [value]=\"percentProgressBar\"></mat-progress-bar>\r\n            </div>\r\n            <div class=\"cancel\" *ngIf=\"showProgressBar\">\r\n                <a>Cancel</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"uploadedFile\">\r\n        <div class=\"headUploaded\">Uploaded Files</div>\r\n        <div *ngFor=\"let file of files; let i=index\">\r\n            <div *ngIf=\"percentProgressBar === 100 || showUploadImg\" class=\"listUploaded\">\r\n                <div class=\"uploadedFileIconName\">\r\n                    <div class=\"icon\">\r\n                        <mat-icon *ngIf=\"file.type.includes('video')\">movie</mat-icon>\r\n                        <img *ngIf=\"file.type.includes('image')\" [src]=\"file.src\" alt=\"\">\r\n                    </div>\r\n                    <div class=\"uploadedFileName\">{{file.name}}</div>\r\n                </div>\r\n                <div class=\"closedUploadedFile\"  (click)=\"canselFile(file, i)\">\r\n                    <mat-icon>close</mat-icon>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"button\">\r\n        <button class=\"canselButton\" (click)=\"closedModal()\">Cancel</button>\r\n        <button class=\"saveButton\" (click)=\"saveFile()\">Save</button>\r\n    </div>\r\n</div>\r\n","/*!\n * Cropper.js v1.5.12\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2021-06-12T08:00:17.411Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Cropper = factory());\n}(this, (function () { 'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n\n      if (enumerableOnly) {\n        symbols = symbols.filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n      }\n\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER && WINDOW.document.documentElement ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n  // Inspired by the default width and height of a canvas element.\n\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: MIN_CONTAINER_WIDTH,\n    minContainerHeight: MIN_CONTAINER_HEIGHT,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = _objectSpread2({}, pointers);\n\n    var maxRatio = 0;\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n\n        if (Math.abs(ratio) > Math.abs(maxRatio)) {\n          maxRatio = ratio;\n        }\n      });\n    });\n    return maxRatio;\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : _objectSpread2({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      var minWidth = Number(options.minContainerWidth);\n      var minHeight = Number(options.minContainerHeight);\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, minWidth >= 0 ? minWidth : MIN_CONTAINER_WIDTH),\n        height: Math.max(container.offsetHeight, minHeight >= 0 ? minHeight : MIN_CONTAINER_HEIGHT)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      canvasData.left = (containerData.width - canvasData.width) / 2;\n      canvasData.top = (containerData.height - canvasData.height) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n          crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        img.alt = alt;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      if (this.disabled) {\n        return;\n      }\n\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var ratioX = container.offsetWidth / containerData.width;\n      var ratioY = container.offsetHeight / containerData.height;\n      var ratio = Math.abs(ratioX - 1) > Math.abs(ratioY - 1) ? ratioX : ratioY; // Resize when width changed or height changed\n\n      if (ratio !== 1) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // Handle mouse event and pointer event and ignore touch event\n      || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && ( // No primary button (Usually the left button)\n      isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey)) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper = /*#__PURE__*/function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"https://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Detect the mime type of the image directly if it is a Data URL\n\n\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n\n          return;\n        } // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        } // The third parameter is required for avoiding side-effect (#682)\n\n\n        xhr.open('GET', url, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin = element.crossOrigin;\n        var crossOriginUrl = url;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          } // Bust cache when there is not a \"crossOrigin\" property (#519)\n\n\n          crossOriginUrl = addTimestamp(url);\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.initialImageData = assign({}, _this2.imageData);\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Most modern browsers (excepts iOS WebKit)\n\n\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n})));\n"]}