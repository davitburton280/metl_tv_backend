{"version":3,"sources":["./src/app/playlists/playlists-routing.module.ts","./src/app/playlists/playlists.module.ts","./src/app/playlists/single-playlist/playlist-info-form/playlist-info-form.component.ts","./src/app/playlists/single-playlist/playlist-info-form/playlist-info-form.component.html","./src/app/playlists/single-playlist/playlist-videos/playlist-videos.component.ts","./src/app/playlists/single-playlist/playlist-videos/playlist-videos.component.html","./src/app/playlists/single-playlist/single-playlist.component.ts","./src/app/playlists/single-playlist/single-playlist.component.html"],"names":[],"mappings":"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","file":"playlists-playlists-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {SinglePlaylistComponent} from '@app/playlists/single-playlist/single-playlist.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'single/:id',\r\n        component: SinglePlaylistComponent,\r\n        data: {\r\n            title: 'Edit Playlist'\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PlaylistsRoutingModule { }\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {PlaylistsRoutingModule} from './playlists-routing.module';\r\nimport {SinglePlaylistComponent} from './single-playlist/single-playlist.component';\r\nimport {SharedModule} from '@shared/shared.module';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport { PlaylistInfoFormComponent } from './single-playlist/playlist-info-form/playlist-info-form.component';\r\nimport { PlaylistVideosComponent } from './single-playlist/playlist-videos/playlist-videos.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [SinglePlaylistComponent, PlaylistInfoFormComponent, PlaylistVideosComponent],\r\n    imports: [\r\n        CommonModule,\r\n        PlaylistsRoutingModule,\r\n        DragDropModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class PlaylistsModule {\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {PlaylistsService} from '@core/services/playlists.service';\r\nimport {AddVideoToPlaylistDialogComponent} from '@core/components/modals/add-video-to-playlist-dialog/add-video-to-playlist-dialog.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {Router} from '@angular/router';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\n\r\n@Component({\r\n    selector: 'app-playlist-info-form',\r\n    templateUrl: './playlist-info-form.component.html',\r\n    styleUrls: ['./playlist-info-form.component.scss']\r\n})\r\nexport class PlaylistInfoFormComponent implements OnInit {\r\n    playlistInfoForm: FormGroup;\r\n    apiUrl = API_URL;\r\n    editMode = false;\r\n    authUser;\r\n\r\n    @Input('playlist') playlist;\r\n    @Output('refreshPlaylist') refreshPlaylist = new EventEmitter();\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private playlistsService: PlaylistsService,\r\n        private dialog: MatDialog,\r\n        private toastr: ToastrService,\r\n        public router: Router,\r\n        private getAuthUser: GetAuthUserPipe\r\n    ) {\r\n        this.playlistInfoForm = this.fb.group({\r\n            id: [''],\r\n            name: ['', Validators.required],\r\n            description: [''],\r\n            privacy: ['']\r\n        });\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    openVideosModal() {\r\n        this.dialog.open(AddVideoToPlaylistDialogComponent, {data: {playlist: this.playlist}}).afterClosed().subscribe(dt => {\r\n            this.refreshPlaylist.emit();\r\n        });\r\n    }\r\n\r\n    updatePrivacy(value, playlist) {\r\n        console.log(+value)\r\n        playlist.privacy = +value;\r\n        this.playlistInfoForm.patchValue({privacy: +value});\r\n        this.playlistsService.updatePrivacy({privacy: value, id: playlist.id}).subscribe(dt => {\r\n            this.toastr.success('Playlist privacy is updated successfully');\r\n        });\r\n\r\n    }\r\n\r\n    editPlaylistInfo(playlist) {\r\n        this.editMode = true;\r\n        this.playlistInfoForm.patchValue(playlist);\r\n    }\r\n\r\n    savePlaylistInfoChanges() {\r\n        if (this.playlistInfoForm.valid) {\r\n            this.playlistsService.updatePlaylistInfo(this.playlistInfoForm.value).subscribe((dt) => {\r\n                this.editMode = false;\r\n                this.playlist = dt;\r\n            });\r\n        }\r\n    }\r\n\r\n    openPlaylistPage(playlist) {\r\n        const route = 'videos/play';\r\n        const params = {id: playlist.videos?.[0]?.id, playlist_id: playlist.id};\r\n        this.router.navigate([route], {queryParams: params});\r\n    }\r\n\r\n    backToPlaylists() {\r\n        const route = 'channels/show';\r\n        const params = {tab: 'playlists', username: this.authUser.username};\r\n        this.router.navigate([route], {queryParams: params});\r\n    }\r\n\r\n}\r\n","<div class=\"playlist\">\r\n    <img [src]=\"playlist.thumbnail|getImgPath\">\r\n    <button class=\"btn play-all\" *ngIf=\"playlist.videos?.length!==0\" (click)=\"openPlaylistPage(playlist)\">\r\n        <span class=\"material-icons\">play_arrow</span>\r\n        Play All\r\n    </button>\r\n\r\n    <div class=\"info\">\r\n        <ng-container *ngIf=\"!editMode\">\r\n            <h3>\r\n                <span>{{playlist.name}}</span>\r\n                <span class=\"material-icons\" (click)=\"editPlaylistInfo(playlist)\">create</span>\r\n            </h3>\r\n            <p>{{playlist.description}}</p>\r\n            <h3>{{playlist.videos?.length}} videos</h3>\r\n            <h3 *ngIf=\"!editMode\">Last updated on {{playlist.updated_at|date: 'd MMM, yyyy'}}</h3>\r\n            <div class=\"select\" id=\"privacy-select\">\r\n                <mat-icon>visibility_{{+playlist.privacy ? 'off' : 'on'}}</mat-icon>\r\n                <select (change)=\"updatePrivacy($event.target.value, playlist)\">\r\n                    <option [value]=\"1\" [selected]=\"playlist.privacy\">Private</option>\r\n                    <option [value]=\"0\" [selected]=\"!playlist.privacy\">Public</option>\r\n                </select>\r\n            </div>\r\n        </ng-container>\r\n        <form [formGroup]=\"playlistInfoForm\" id=\"playlist-info-form\" *ngIf=\"editMode\">\r\n            <input formControlName=\"name\">\r\n            <span class=\"error\" *ngIf=\"playlistInfoForm.get('name').hasError('required')\">\r\n                Playlist name is required\r\n            </span>\r\n            <textarea formControlName=\"description\"></textarea>\r\n            <button class=\"btn cancel\" (click)=\"editMode=!editMode\">Cancel</button>\r\n            <button class=\"btn save-playlist-changes\" (click)=\"savePlaylistInfoChanges()\">Save\r\n            </button>\r\n        </form>\r\n    </div>\r\n\r\n    <button class=\"btn back\" (click)=\"backToPlaylists()\">Back</button>\r\n    <button class=\"btn add-video\" *ngIf=\"!editMode\" (click)=\"openVideosModal()\">Add Video</button>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {moveItemInArray} from '@core/helpers/move-item-in-array';\r\nimport {ConfirmationDialogComponent} from '@core/components/modals/confirmation-dialog/confirmation-dialog.component';\r\nimport {AddVideoToAnotherPlaylistComponent} from '@core/components/modals/add-video-to-another-playlist/add-video-to-another-playlist.component';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {PlaylistsService} from '@core/services/playlists.service';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {VideoService} from '@core/services/video.service';\r\n\r\n@Component({\r\n    selector: 'app-playlist-videos',\r\n    templateUrl: './playlist-videos.component.html',\r\n    styleUrls: ['./playlist-videos.component.scss']\r\n})\r\nexport class PlaylistVideosComponent implements OnInit {\r\n\r\n    apiUrl = API_URL;\r\n    authUser;\r\n\r\n\r\n    @Input('playlist') playlist;\r\n    @Output('refreshPlaylist') refreshPlaylist = new EventEmitter();\r\n\r\n    constructor(\r\n        public router: Router,\r\n        private route: ActivatedRoute,\r\n        private playlistsService: PlaylistsService,\r\n        private videoService: VideoService,\r\n        private dialog: MatDialog,\r\n        private getAuthUser: GetAuthUserPipe\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    openPlaylistPage(video, playlist) {\r\n        this.router.navigate(['videos/play'], {queryParams: {id: video.id, playlist_id: playlist.id}});\r\n    }\r\n\r\n    dragDropped(e, video) {\r\n        // console.log(e)\r\n        // console.log(channel)\r\n        this.playlist.videos = moveItemInArray(this.playlist.videos, e.previousIndex, e.currentIndex);\r\n        // console.log(this.playlist)\r\n        const sendData = {\r\n            rows: JSON.stringify(this.playlist),\r\n            playlist_id: this.playlist.id,\r\n            // user_id: this.authUser.id\r\n        };\r\n        this.playlistsService.updateVideoPosition(sendData).subscribe(dt => {\r\n        });\r\n    }\r\n\r\n    changePlaylistThumbnail(playlistId, thumbnail) {\r\n        const params = {playlist_id: playlistId, ...{thumbnail}};\r\n        this.playlistsService.changePlaylistThumbnail(params).subscribe(dt => {\r\n            this.playlist = dt;\r\n            this.refreshPlaylist.emit();\r\n        });\r\n    }\r\n\r\n    removeVideoFromPlaylist(playlistId, videoId) {\r\n        this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed) {\r\n                this.playlistsService.removeVideoFromPlaylist({\r\n                    playlist_id: playlistId,\r\n                    video_id: videoId\r\n                }).subscribe(dt => {\r\n                    this.playlist = dt;\r\n                    this.refreshPlaylist.emit();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    addToAnotherPlaylist(video) {\r\n        this.playlistsService.get({channel_id: this.authUser?.channel?.id}).subscribe(dt => {\r\n            this.dialog.open(AddVideoToAnotherPlaylistComponent, {\r\n                width: '500px',\r\n                data: {video_id: video.id, playlists: dt}\r\n            }).afterClosed().subscribe(result => {\r\n                this.refreshPlaylist.emit();\r\n            });\r\n        });\r\n    }\r\n\r\n    updatePrivacy(video, privacy) {\r\n        this.videoService.updatePrivacy({\r\n            video_id: video.id,\r\n            privacy: privacy === 'Public' ? 'Private' : 'Public'\r\n        }).subscribe(dt => {\r\n            video.privacy = dt;\r\n        });\r\n    }\r\n\r\n    async getVideosByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n}\r\n","<div class=\"playlist\" cdkDropList>\r\n    <div class=\"playlist-item\" cdkDrag [cdkDragPreviewClass]=\"'video-container'\"\r\n         (cdkDragDropped)=\"dragDropped($event, video)\"\r\n         *ngFor=\"let video of playlist.videos\">\r\n        <div class=\"video-container\">\r\n            <div class=\"img\">\r\n                <img [src]=\"video.thumbnail|getImgPath\"\r\n                     (click)=\"openPlaylistPage(video, playlist)\">\r\n                <div class=\"update-privacy\" (click)=\"updatePrivacy(video, video.privacy.name)\"\r\n                     [ngClass]=\"video.privacy.name !== 'Public'  ? 'red':'green'\">\r\n                    <mat-icon>visibility_{{video.privacy.name !== 'Public' ? 'off' : 'on'}}</mat-icon>\r\n                </div>\r\n                <span class=\"duration\">{{video.duration}}</span>\r\n            </div>\r\n\r\n            <div class=\"details\">\r\n                <div class=\"title\">\r\n                    <h4 class=\"\">{{video.name}}</h4>\r\n                    <div class=\"dotes\">\r\n                        <button mat-icon-button [matMenuTriggerFor]=\"menu\"\r\n                                aria-label=\"Example icon-button with a menu\">\r\n                            <mat-icon>more_vert</mat-icon>\r\n                        </button>\r\n                        <mat-menu #menu=\"matMenu\">\r\n                            <button mat-menu-item (click)=\"addToAnotherPlaylist(video)\">\r\n                                <mat-icon>playlist_add</mat-icon>\r\n                                <span>Add to another playlist</span>\r\n                            </button>\r\n                            <!--                                        <button mat-menu-item>-->\r\n                            <!--                                            <mat-icon>vertical_align_top</mat-icon>-->\r\n                            <!--                                            <span>Move to top</span>-->\r\n                            <!--                                        </button>-->\r\n                            <!--                                        <button mat-menu-item>-->\r\n                            <!--                                            <mat-icon>vertical_align_bottom</mat-icon>-->\r\n                            <!--                                            <span>Move to bottom</span>-->\r\n                            <!--                                        </button>-->\r\n                            <button mat-menu-item\r\n                                    (click)=\"changePlaylistThumbnail(playlist.id, video.thumbnail)\">\r\n                                <mat-icon>insert_photo</mat-icon>\r\n                                <span>Set as playlist thumbnail</span>\r\n                            </button>\r\n                            <button mat-menu-item (click)=\"updatePrivacy(video, video.privacy.name)\">\r\n                                <mat-icon>visibility_{{video.privacy.name !== 'Public' ? 'on' : 'off'}}</mat-icon>\r\n                                <span>Make {{video.privacy.name !== 'Private' ? 'private' : 'public'}}</span>\r\n                            </button>\r\n                            <button mat-menu-item (click)=\"removeVideoFromPlaylist(playlist.id, video.id)\">\r\n                                <mat-icon>delete</mat-icon>\r\n                                <span>Remove from playlist</span>\r\n                            </button>\r\n\r\n                        </mat-menu>\r\n                    </div>\r\n                </div>\r\n                <div class=\"shortened-details\">\r\n                    <span class=\"channel-name\">{{video.channel.name}}</span>\r\n                    <span class=\"dot\">&middot;</span>\r\n                    <span class=\"watchers-count\">\r\n                        {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\r\n                    </span>\r\n                    <span class=\"dot\">&middot;</span>\r\n                    <span class=\"upload-time\">{{video.created_at|dateFromNow}}</span>\r\n                </div>\r\n                <div class=\"video-details-2nd-row\">\r\n                    <p class=\"shortened-description\">{{video.description}}</p>\r\n                    <div class=\"tags\">\r\n                        <ul>\r\n                            <li *ngFor=\"let tag of video?.tags\" (click)=\"getVideosByTag(tag.name)\">\r\n                                <span>{{tag.name}}</span>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {PlaylistsService} from '@core/services/playlists.service';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AddVideoToPlaylistDialogComponent} from '@core/components/modals/add-video-to-playlist-dialog/add-video-to-playlist-dialog.component';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {moveItemInArray} from '@core/helpers/move-item-in-array';\r\nimport {ConfirmationDialogComponent} from '@core/components/modals/confirmation-dialog/confirmation-dialog.component';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {AddVideoToAnotherPlaylistComponent} from '@core/components/modals/add-video-to-another-playlist/add-video-to-another-playlist.component';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\n\r\n@Component({\r\n    selector: 'app-single-playlist',\r\n    templateUrl: './single-playlist.component.html',\r\n    styleUrls: ['./single-playlist.component.scss']\r\n})\r\nexport class SinglePlaylistComponent implements OnInit {\r\n    playlist;\r\n    apiUrl = API_URL;\r\n    authUser;\r\n\r\n    constructor(\r\n        public router: Router,\r\n        private route: ActivatedRoute,\r\n        private playlistsService: PlaylistsService,\r\n        private dialog: MatDialog,\r\n        private getAuthUser: GetAuthUserPipe\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getPlaylistDetails();\r\n    }\r\n\r\n\r\n\r\n\r\n    getPlaylistDetails() {\r\n\r\n        const playlistId = this.route.snapshot?.params?.id;\r\n\r\n        if (playlistId) {\r\n            this.playlistsService.getById({playlist_id: playlistId, user_id: this.authUser}).subscribe(dt => {\r\n                this.playlist = dt;\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","<div class=\"single-playlist\" *ngIf=\"playlist\">\r\n    <h2>Edit Playlist</h2>\r\n\r\n    <div class=\"inner-wrap\">\r\n        <div class=\"left\">\r\n            <app-playlist-info-form [playlist]=\"playlist\" (refreshPlaylist)=\"getPlaylistDetails()\">\r\n            </app-playlist-info-form>\r\n        </div>\r\n\r\n        <div class=\"right\">\r\n            <app-playlist-videos [playlist]=\"playlist\" (refreshPlaylist)=\"getPlaylistDetails()\"></app-playlist-videos>\r\n        </div>\r\n    </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}