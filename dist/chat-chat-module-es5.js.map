{"version":3,"sources":["webpack:///src/app/chat/chat-routing.module.ts","webpack:///src/app/chat/chat.module.ts","webpack:///src/app/chat/show-chatrooms/show-chatrooms.component.ts","webpack:///src/app/chat/show-chatrooms/show-chatrooms.component.html","webpack:///src/app/chat/show-messages/direct-chat/direct-chat.component.ts","webpack:///src/app/chat/show-messages/direct-chat/direct-chat.component.html","webpack:///src/app/chat/show-messages/group-chat/group-chat.component.ts","webpack:///src/app/chat/show-messages/group-chat/group-chat.component.html","webpack:///src/app/chat/show-messages/show-messages.component.ts","webpack:///src/app/chat/show-messages/show-messages.component.html"],"names":["routes","path","component","data","title","ChatRoutingModule","forChild","imports","exports","ChatModule","declarations","ShowChatroomsComponent","selector","templateUrl","styleUrls","DirectChatComponent","chatService","getAuthUser","socketService","usersService","toastr","subject","datePipe","groupBy","fb","getElegantDate","usersMessages","filteredUsersMessages","selectedUserMessages","messages","user","rawMessages","connection_id","showBlockedUsers","onlineUsers","blockedUsers","newMessageSources","subscriptions","isProduction","production","newMessagesCountReceived","getOnlineUsers","getMessagesFromSocket","getUsersMessages","initForm","getTyping","getSeen","getChatNotifications","getBlockUnblockUser","addNewUser","authUser","group","getConnectedUsers","username","usersOnlineFeedback","subscribe","dt","console","log","push","userOnlineFeedback","length","includes","users","chatForm","from","from_id","id","to_id","activeUser","avatar","from_user","to_user","message","required","personal","isChatUsersListSize","getDirectMessages","user_id","blocked","newMessagesSource","filter","d","unseens","emit","users_connections","is_blocked","fm","setNewMessagesSourceData","source","type","selectedMessages","find","m","transform","users_messages","patchValue","onNewMessage","typingText","lastMsg","userMessages","JSON","parse","stringify","seen","setSeen","show","activeUserMessages","makeUserActive","e","keyCode","shiftKey","value","trim","valid","saveDirectMessage","sendMessage","scrollMsgsToBottom","messagesList","nativeElement","scrollTop","scrollHeight","err","msg","setTyping","first_name","isOwnMessage","message_id","seen_at","format","lastReceivedMessages","reverse","some","params","message_ids","map","unreadLastMessages","block","contact_username","blockUser","blockUnblockUser","error","seenDate","last_name","ifContactBlocked","forEach","s","unsubscribe","GroupChatComponent","dialog","fixLineBreaks","showGroupChatForm","showMembersInput","userContacts","groupMembers","socketGroupsUsers","inputGroupMembers","filteredContacts","memberCtrl","text","separatorKeysCodes","groupRemoved","selectedGroupMessages","selectedRawMessages","groupsMessages","haveGroupJoinInvitation","valueChanges","search","fc","fullNameLowerCased","toLowerCase","gm","name","initGroupChatForms","getGroupsMessages","addUserToSocket","getUserContacts","getGroupJoinInvitation","groupChatForm","creator_id","groupChatDetailsForm","group_id","member_ids","selectedGroup","to_group","selectedGroupBefore","chat_group_messages","chat_group_members","getTypingTextStatus","getGroupMembers","addGroup","setNewGroup","file","target","files","formData","FormData","append","changeGroupAvatar","member","index","indexOf","splice","member_id","open","afterClosed","confirmed","removeGroupMember","removeGroup","option","chipsInput","setValue","addGroupMembers","inviteToNewGroup","members","leaveGroup","width","height","chat_groups_members","inviteToGroupSent","getChatGroups","acceptGroupJoin","acceptJoinToGroup","declineGroupJoin","declineJoinToGroup","groupsUsers","groupCreated","g","joiningChat","info","acceptingJoinGroup","decliningJoinGroup","leavingGroup","groupMember","groupName","sGroupUser","saveGroupMessage","lastMessage","group_chat_messages_seen","created_at","thisWeekDate","isSame","Date","seenDateFormatted","sameGroupTyping","f","found","seen_by","sb","changeAvatar","autoCompleteMemberSelected","addMember","openAllMembersModal","ShowMessagesComponent","activeTab","groupsLoaded","newMessagesCountInGroups","newMessagesCountInDirect","tab","new_messages_count"],"mappings":"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","file":"chat-chat-module-es5.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {ShowChatroomsComponent} from '@app/chat/show-chatrooms/show-chatrooms.component';\r\nimport {ShowMessagesComponent} from '@app/chat/show-messages/show-messages.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'rooms',\r\n        component: ShowChatroomsComponent,\r\n        data: {\r\n            title: 'Chat rooms',\r\n        }\r\n    },\r\n    {\r\n        path: 'messages',\r\n        component: ShowMessagesComponent,\r\n        data: {\r\n            title: 'Chat',\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ChatRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {ChatRoutingModule} from './chat-routing.module';\r\nimport {ShowChatroomsComponent} from './show-chatrooms/show-chatrooms.component';\r\nimport {ShowMessagesComponent} from './show-messages/show-messages.component';\r\nimport {SharedModule} from '@shared/shared.module';\r\nimport { DirectChatComponent } from './show-messages/direct-chat/direct-chat.component';\r\nimport { GroupChatComponent } from './show-messages/group-chat/group-chat.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [ShowChatroomsComponent, ShowMessagesComponent, DirectChatComponent, GroupChatComponent],\r\n    imports: [\r\n        CommonModule,\r\n        ChatRoutingModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class ChatModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-show-chatrooms',\r\n  templateUrl: './show-chatrooms.component.html',\r\n  styleUrls: ['./show-chatrooms.component.scss']\r\n})\r\nexport class ShowChatroomsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"chatrooms-list\">\r\n    <h1>Chat Rooms</h1>\r\n\r\n    <div class=\"create-post\">\r\n        <div class=\"img\">\r\n            <img src=\"assets/img/item-4.png\" alt=\"\">\r\n            <span>Create Post</span>\r\n        </div>\r\n        <div class=\"select\">\r\n            <select name=\"\" id=\"\">\r\n                <option value=\"\">Choose community</option>\r\n                <option value=\"\">option</option>\r\n            </select>\r\n        </div>\r\n\r\n        <div class=\"input\">\r\n            <input placeholder=\"Title\" type=\"text\">\r\n        </div>\r\n\r\n        <label class=\"add-photo\">\r\n            <input type=\"file\">\r\n            <span class=\"material-icons\">image</span>\r\n            Add Photo or Video\r\n        </label>\r\n\r\n        <div class=\"btn\">\r\n            <button class=\"post\">Post</button>\r\n        </div>\r\n    </div>\r\n\r\n    <ul class=\"categories\">\r\n        <li><a class=\"active\"><span class=\"material-icons\">whatshot</span>Hot</a></li>\r\n        <li><a><span class=\"material-icons\">new_releases</span>New</a></li>\r\n        <li><a><span class=\"material-icons\">trending_up</span>Top</a></li>\r\n        <li><a><span class=\"material-icons\">new_releases</span>Best of the week</a></li>\r\n    </ul>\r\n\r\n    <div class=\"search\">\r\n        <input placeholder=\"Search\" type=\"text\">\r\n        <span class=\"material-icons\">search</span>\r\n    </div>\r\n\r\n    <div class=\"chatrooms-items\">\r\n        <div class=\"item\">\r\n            <div class=\"posted\">\r\n                <p>Posted by<span>u/alotasalad</span></p>\r\n                <p>4 minutes ago</p>\r\n            </div>\r\n\r\n            <div class=\"info\">\r\n                <div class=\"left-wrap\">\r\n                    <div class=\"voting-container\">\r\n                        <button class=\"vote-up-btn active\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                        <div class=\"vote-count\">50k</div>\r\n                        <button class=\"vote-down-btn\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-wrap\">\r\n                    <p>This is my friends loss but to make matters even worse he borrowed the money from his Nigerian\r\n                        boss and yolod everything on fds otw up and down did I forget to mention that 4K in the the\r\n                        account right now is also his bosses money 💰</p>\r\n\r\n                    <img src=\"assets/img/jp-valeryunsplash.png\" alt=\"\">\r\n\r\n                    <div class=\"post-menu\">\r\n                        <div class=\"menu\">\r\n                            <a href=\"\"><span class=\"material-icons\">chat_bubble</span>Comments</a>\r\n                            <a href=\"\"><span class=\"material-icons\">share</span>Share</a>\r\n                        </div>\r\n                        <div class=\"dotes\"><span class=\"material-icons\">more_vert</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"item\">\r\n            <div class=\"posted\">\r\n                <p>Posted by<span>u/alotasalad</span></p>\r\n                <p>4 minutes ago</p>\r\n            </div>\r\n\r\n            <div class=\"info\">\r\n                <div class=\"left-wrap\">\r\n                    <div class=\"voting-container\">\r\n                        <button class=\"vote-up-btn active\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                        <div class=\"vote-count\">50k</div>\r\n                        <button class=\"vote-down-btn\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-wrap\">\r\n                    <p>This is my friends loss but to make matters even worse he borrowed the money from his Nigerian\r\n                        boss and yolod everything on fds otw up and down did I forget to mention that 4K in the the\r\n                        account right now is also his bosses money 💰</p>\r\n\r\n                    <img src=\"assets/img/jp-valeryunsplash.png\" alt=\"\">\r\n\r\n                    <div class=\"post-menu\">\r\n                        <div class=\"menu\">\r\n                            <a href=\"\"><span class=\"material-icons\">chat_bubble</span>Comments</a>\r\n                            <a href=\"\"><span class=\"material-icons\">share</span>Share</a>\r\n                        </div>\r\n                        <div class=\"dotes\"><span class=\"material-icons\">more_vert</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"item\">\r\n            <div class=\"posted\">\r\n                <p>Posted by<span>u/alotasalad</span></p>\r\n                <p>4 minutes ago</p>\r\n            </div>\r\n\r\n            <div class=\"info\">\r\n                <div class=\"left-wrap\">\r\n                    <div class=\"voting-container\">\r\n                        <button class=\"vote-up-btn active\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                        <div class=\"vote-count\">50k</div>\r\n                        <button class=\"vote-down-btn\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-wrap\">\r\n                    <p>This is my friends loss but to make matters even worse he borrowed the money from his Nigerian\r\n                        boss and yolod everything on fds otw up and down did I forget to mention that 4K in the the\r\n                        account right now is also his bosses money 💰</p>\r\n\r\n                    <img src=\"assets/img/jp-valeryunsplash.png\" alt=\"\">\r\n\r\n                    <div class=\"post-menu\">\r\n                        <div class=\"menu\">\r\n                            <a href=\"\"><span class=\"material-icons\">chat_bubble</span>Comments</a>\r\n                            <a href=\"\"><span class=\"material-icons\">share</span>Share</a>\r\n                        </div>\r\n                        <div class=\"dotes\"><span class=\"material-icons\">more_vert</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"item\">\r\n            <div class=\"posted\">\r\n                <p>Posted by<span>u/alotasalad</span></p>\r\n                <p>4 minutes ago</p>\r\n            </div>\r\n\r\n            <div class=\"info\">\r\n                <div class=\"left-wrap\">\r\n                    <div class=\"voting-container\">\r\n                        <button class=\"vote-up-btn active\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                        <div class=\"vote-count\">50k</div>\r\n                        <button class=\"vote-down-btn\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-wrap\">\r\n                    <p>This is my friends loss but to make matters even worse he borrowed the money from his Nigerian\r\n                        boss and yolod everything on fds otw up and down did I forget to mention that 4K in the the\r\n                        account right now is also his bosses money 💰</p>\r\n\r\n                    <img src=\"assets/img/jp-valeryunsplash.png\" alt=\"\">\r\n\r\n                    <div class=\"post-menu\">\r\n                        <div class=\"menu\">\r\n                            <a href=\"\"><span class=\"material-icons\">chat_bubble</span>Comments</a>\r\n                            <a href=\"\"><span class=\"material-icons\">share</span>Share</a>\r\n                        </div>\r\n                        <div class=\"dotes\"><span class=\"material-icons\">more_vert</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {\r\n    AfterViewChecked,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef, EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit, Output,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport IsResponsive from '@core/helpers/is-responsive';\r\nimport * as moment from 'moment';\r\nimport {ChatService} from '@core/services/chat.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {SocketIoService} from '@core/services/socket-io.service';\r\nimport {DatePipe} from '@angular/common';\r\nimport {GroupByPipe} from '@shared/pipes/group-by.pipe';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {UsersService} from '@core/services/users.service';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {GetElegantDatePipe} from \"@shared/pipes/get-elegant-date.pipe\";\r\nimport {environment} from \"@env\";\r\n\r\n@Component({\r\n    selector: 'app-direct-chat',\r\n    templateUrl: './direct-chat.component.html',\r\n    styleUrls: ['./direct-chat.component.scss']\r\n})\r\nexport class DirectChatComponent implements OnInit, AfterViewChecked, OnDestroy {\r\n\r\n    @Input() authUser;\r\n\r\n    usersMessages = [];\r\n    filteredUsersMessages = [];\r\n    selectedUserMessages = {messages: [], user: {}, rawMessages: [], connection_id: null};\r\n    activeUser;\r\n\r\n    typingText: string;\r\n\r\n    chatForm: FormGroup;\r\n    showBlockedUsers = false;\r\n\r\n    onlineUsers = [];\r\n    blockedUsers = [];\r\n    newMessageSources = [];\r\n\r\n    subscriptions: Subscription[] = [];\r\n    isProduction = environment.production;\r\n\r\n    @ViewChild('directMessagesList') private messagesList: ElementRef;\r\n    @Output() newMessagesCountReceived = new EventEmitter();\r\n\r\n    constructor(\r\n        private chatService: ChatService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private socketService: SocketIoService,\r\n        private usersService: UsersService,\r\n        private toastr: ToastrService,\r\n        private subject: SubjectService,\r\n        private datePipe: DatePipe,\r\n        private groupBy: GroupByPipe,\r\n        private fb: FormBuilder,\r\n        private getElegantDate: GetElegantDatePipe\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        // this.addUserToSocket();\r\n        this.getOnlineUsers();\r\n        this.getMessagesFromSocket();\r\n        this.getUsersMessages();\r\n        this.initForm();\r\n        this.getTyping();\r\n        this.getSeen();\r\n        this.getChatNotifications();\r\n        this.getBlockUnblockUser();\r\n    }\r\n\r\n    addUserToSocket() {\r\n        this.socketService.addNewUser({...this.authUser, group: false});\r\n    }\r\n\r\n    getOnlineUsers() {\r\n        this.socketService.getConnectedUsers({username: this.authUser.username});\r\n        this.socketService.usersOnlineFeedback().subscribe((dt: any) => {\r\n            console.log(dt)\r\n            this.onlineUsers = dt;\r\n        });\r\n\r\n        this.subscriptions.push(this.socketService.userOnlineFeedback().subscribe((dt: any) => {\r\n            console.log(this.onlineUsers)\r\n            this.onlineUsers = dt;\r\n        }));\r\n    }\r\n\r\n    getUserCurrentStatus(username) {\r\n        return this.onlineUsers.length === 0 || this.onlineUsers.includes(username);\r\n    }\r\n\r\n    getChatNotifications() {\r\n        this.subscriptions.push(this.socketService.getChatNotifications().subscribe((data: any) => {\r\n            this.onlineUsers = data.users;\r\n        }));\r\n    }\r\n\r\n    initForm() {\r\n        this.chatForm = this.fb.group({\r\n            from: [this.authUser.username],\r\n            from_id: [this.authUser.id],\r\n            connection_id: [this.selectedUserMessages?.connection_id],\r\n            to_id: [this.activeUser?.id],\r\n            avatar: [this.authUser?.avatar],\r\n            from_user: [this.authUser],\r\n            to_user: [null],\r\n            message: ['', Validators.required],\r\n            personal: [1]\r\n        });\r\n    }\r\n\r\n    isOwnMessage(user) {\r\n        return user.id === this.authUser.id;\r\n    }\r\n\r\n    isChatUsersListSize() {\r\n        return IsResponsive.isChatUsersListSize();\r\n    }\r\n\r\n    getUsersMessages() {\r\n        this.selectedUserMessages.messages = [];\r\n        this.subscriptions.push(this.chatService.getDirectMessages({\r\n            user_id: this.authUser.id,\r\n            blocked: 0\r\n        }).subscribe(dt => {\r\n            this.usersMessages = dt;\r\n            const newMessagesSource = dt.filter(d => d.unseens > 0);\r\n            this.newMessagesCountReceived.emit(newMessagesSource.length);\r\n            this.blockedUsers = dt.filter(d => d.users_connections[0].is_blocked === 1);\r\n            this.filteredUsersMessages = dt.filter(d => !!d.users_connections[0].is_blocked === this.showBlockedUsers);\r\n            console.log(this.blockedUsers)\r\n            this.newMessageSources = this.filteredUsersMessages.filter(fm => fm.unseens);\r\n            this.subject.setNewMessagesSourceData({source: this.newMessageSources, type: 'direct'});\r\n            this.activeUser = this.activeUser || this.filteredUsersMessages[0];\r\n            // connection_id: this.filteredUsersMessages[0].users_connections[0].id\r\n            // console.log(this.activeUser)\r\n\r\n            const selectedMessages = this.filteredUsersMessages.find(m => m.id === this.activeUser?.id);\r\n            this.selectedUserMessages.user = selectedMessages;\r\n            this.selectedUserMessages.connection_id = selectedMessages?.users_connections[0].id;\r\n            this.selectedUserMessages.messages = this.groupBy.transform(selectedMessages?.users_connections[0].users_messages, 'created_at');\r\n            this.selectedUserMessages.rawMessages = selectedMessages?.users_connections[0].users_messages;\r\n            this.chatForm.patchValue({\r\n                to_id: this.activeUser?.id,\r\n                to_user: this.activeUser,\r\n                connection_id: this.activeUser?.users_connections?.[0].id\r\n            });\r\n            // console.log(this.chatForm.value)\r\n        }));\r\n    }\r\n\r\n    getMessagesFromSocket() {\r\n        this.subscriptions.push(this.socketService.onNewMessage().subscribe((dt: any) => {\r\n            console.log('new message direct chat!!!')\r\n            this.typingText = null;\r\n            this.getUsersMessages();\r\n\r\n        }));\r\n    }\r\n\r\n    makeUserActive(user, lastMsg) {\r\n        this.activeUser = user;\r\n        this.selectedUserMessages = {messages: [], user: {}, rawMessages: [], connection_id: null};\r\n        if (user) {\r\n            this.chatForm.patchValue({\r\n                to_id: user.id,\r\n                to_user: this.activeUser,\r\n                connection_id: this.activeUser.users_connections[0].id\r\n            });\r\n            const userMessages = JSON.parse(JSON.stringify(this.filteredUsersMessages.find(m => m.id === user.id)));\r\n            this.selectedUserMessages = userMessages;\r\n            this.selectedUserMessages.connection_id = userMessages?.users_connections[0].id;\r\n            this.selectedUserMessages.messages = this.groupBy.transform(userMessages?.users_connections[0].users_messages, 'created_at');\r\n            this.selectedUserMessages.rawMessages = userMessages?.users_connections[0].users_messages;\r\n            if (!lastMsg?.seen) {\r\n                this.setSeen();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    toggleBlockedUsers(show) {\r\n        this.showBlockedUsers = show;\r\n        this.filteredUsersMessages = this.usersMessages.filter(d => {\r\n            return !!d.users_connections?.[0].is_blocked === this.showBlockedUsers;\r\n        });\r\n        this.activeUser = this.filteredUsersMessages[0];\r\n        if (this.activeUser) {\r\n            const activeUserMessages = this.activeUser?.users_connections[0]?.users_messages;\r\n            this.makeUserActive(this.activeUser, activeUserMessages[activeUserMessages.length - 1]);\r\n        }\r\n\r\n    }\r\n\r\n    sendMessage(e) {\r\n        if (e.keyCode === 13 && !e.shiftKey && this.chatForm.value.message.trim() !== '') {\r\n            if (this.chatForm.valid) {\r\n                const data = {...this.chatForm.value};\r\n\r\n\r\n                this.subscriptions.push(this.chatService.saveDirectMessage(data).subscribe(dt => {\r\n                    this.usersMessages = dt;\r\n                    this.filteredUsersMessages = dt.filter(d => !!d.users_connections[0].is_blocked === this.showBlockedUsers);\r\n                    const selectedMessages = this.filteredUsersMessages.find(m => m.id === this.activeUser?.id);\r\n                    this.selectedUserMessages.user = selectedMessages;\r\n                    this.selectedUserMessages.connection_id = selectedMessages?.users_connections[0].id;\r\n                    console.log(selectedMessages?.users_connections)\r\n                    this.selectedUserMessages.messages = this.groupBy.transform(selectedMessages?.users_connections[0].users_messages, 'created_at');\r\n                    this.selectedUserMessages.rawMessages = selectedMessages?.users_connections[0].users_messages;\r\n\r\n                    this.socketService.sendMessage(data);\r\n                    this.scrollMsgsToBottom();\r\n                    console.log(this.selectedUserMessages);\r\n                }));\r\n                this.chatForm.patchValue({message: ''});\r\n            }\r\n        }\r\n    }\r\n\r\n    scrollMsgsToBottom() {\r\n        try {\r\n            this.messagesList.nativeElement.scrollTop = this.messagesList.nativeElement.scrollHeight;\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n    setTyping(msg = null) {\r\n        this.socketService.setTyping({\r\n            from_user: this.chatForm.value.from_user,\r\n            to_user: this.chatForm.value.to_user,\r\n            message: this.chatForm.value.message\r\n        });\r\n    }\r\n\r\n    getTyping() {\r\n        this.subscriptions.push(this.socketService.getTyping().subscribe((dt: any) => {\r\n            console.log(dt.from_user.id, this.authUser.id, this.activeUser);\r\n            if (dt.from_user.id !== this.authUser.id && this.activeUser.id === dt.from_user.id) {\r\n                this.typingText = dt.message ? `${dt.from_user.first_name} is typing...` : null;\r\n            }\r\n        }));\r\n    }\r\n\r\n    setSeen() {\r\n        const userMessages = this.selectedUserMessages.rawMessages;\r\n        if (userMessages.length > 0) {\r\n            const isOwnMessage = userMessages[userMessages.length - 1]?.from_id === this.authUser.id;\r\n            console.log('set seen', isOwnMessage)\r\n            this.scrollMsgsToBottom();\r\n            if (!isOwnMessage) {\r\n                this.socketService.setSeen({\r\n                    message_id: userMessages[userMessages.length - 1].id,\r\n                    from_id: this.chatForm.value.from_id,\r\n                    to_id: this.chatForm.value.to_id,\r\n                    from_user: this.chatForm.value.from_user,\r\n                    to_user: this.chatForm.value.to_user,\r\n                    connection_id: this.chatForm.value.connection_id,\r\n                    seen: 1,\r\n                    seen_at: moment().format('YYYY-MM-DD, h:mm:ss a')\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    getSeen() {\r\n\r\n        this.subscriptions.push(this.socketService.getSeen().subscribe((dt: any) => {\r\n            this.selectedUserMessages.messages = [];\r\n            console.log('get seen', dt)\r\n            this.getUsersMessages();\r\n        }));\r\n    }\r\n\r\n    unreadLastMessages(usersMessages) {\r\n        const messages = usersMessages.users_connections[0]?.users_messages;\r\n        const lastReceivedMessages = [];\r\n\r\n        messages.reverse().some((message) => {\r\n            if (message.from_id !== this.authUser.id) {\r\n                lastReceivedMessages.push(message);\r\n            }\r\n            return message.from_id === this.authUser.id;\r\n        });\r\n\r\n        const params = {\r\n            message_ids: lastReceivedMessages.map(m => m.id),\r\n            to_user: usersMessages.username,\r\n            from_user: this.authUser.username\r\n        };\r\n\r\n        if (params.message_ids.length > 0) {\r\n            this.socketService.unreadLastMessages(params);\r\n        }\r\n    }\r\n\r\n    blockUser(user) {\r\n        const params = {\r\n            connection_id: user.users_connections?.[0].id,\r\n            user: this.authUser,\r\n            block: +!this.showBlockedUsers,\r\n            contact_username: user.username\r\n        };\r\n\r\n        this.subscriptions.push(this.usersService.blockUser(params).subscribe(dt => {\r\n            this.activeUser = null;\r\n            this.getUsersMessages();\r\n            this.socketService.blockUnblockUser(params);\r\n        }));\r\n    }\r\n\r\n    getBlockUnblockUser() {\r\n        this.subscriptions.push(this.socketService.getBlockUnblockUser().subscribe((dt: any) => {\r\n            // this.selectedUserMessages.messages = [];\r\n            console.log('get block/unblock', dt)\r\n            this.toastr.error(`${dt.user.username} blocked the connection between you two`)\r\n            this.activeUser = null;\r\n            this.getUsersMessages();\r\n        }));\r\n    }\r\n\r\n    getSeenTooltip(message) {\r\n        const user = message.to_user;\r\n        // const thisWeekDate = moment(message.seen_at).isSame(new Date(), 'week');\r\n        // const seenDate = moment(message.seen_at).format(thisWeekDate ? 'ddd HH:mm' : 'MMM DD, YYYY HH:mm');\r\n        const seenDate = this.getElegantDate.transform(message.seen_at);\r\n\r\n        return `${user.first_name} ${user.last_name} at ${seenDate}`;\r\n    }\r\n\r\n    checkIfLastMessageSeen(lastMsg) {\r\n        return lastMsg?.seen === 0 && lastMsg?.from_id !== this.authUser.id;\r\n    }\r\n\r\n    getUserLastMessage(messages) {\r\n        return messages[messages.length - 1];\r\n    }\r\n\r\n    getChatInputPlaceholder(activeUser) {\r\n        return !this.ifContactBlocked(activeUser) ? 'Type your message' : 'Since the contact is blocked you will no longer be able to send messages to this user';\r\n    }\r\n\r\n    ifUnreadShown(lastMsg, user) {\r\n        return lastMsg?.from_id !== this.authUser.id && !user.users_connections[0].is_blocked;\r\n    }\r\n\r\n    ifMoreActionsShown(lastMsg, user) {\r\n        return !user.users_connections[0].is_blocked && (!lastMsg || lastMsg?.from_id === this.authUser.id || lastMsg?.seen === 1);\r\n    }\r\n\r\n    ifContactBlocked(user) {\r\n        return user.users_connections?.[0].is_blocked;\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n        this.scrollMsgsToBottom();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.setTyping(null);\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n\r\n}\r\n","<div class=\"chat-wrap\">\r\n    <div class=\"people-groups-container\" [hidden]=\"isChatUsersListSize() && activeUser\"\r\n         [class.responsive-list]=\"isChatUsersListSize()\">\r\n        <div id=\"people-list\" class=\"list-wrap\">\r\n            <div class=\"top-actions\">\r\n                <div id=\"back-to-active-users\">\r\n                    <button *ngIf=\"showBlockedUsers\" (click)=\"toggleBlockedUsers(false)\">\r\n                        <mat-icon>arrow_backward</mat-icon>\r\n                        <span>Active contacts</span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"three-dot-actions\" *ngIf=\"filteredUsersMessages.length > 0 || blockedUsers.length > 0\">\r\n\r\n                    <button [matMenuTriggerFor]=\"menu\" class=\"show-actions\">\r\n                        <i class=\"fas fa-ellipsis-h\"></i>\r\n                    </button>\r\n\r\n                    <mat-menu #menu=\"matMenu\">\r\n                        <button\r\n                            mat-menu-item [class.active]=\"!showBlockedUsers\" (click)=\"toggleBlockedUsers(false)\"\r\n                                [disableRipple]=\"true\">\r\n                            <i class=\"fas fa-users\"></i>\r\n                            Active users\r\n                        </button>\r\n                        <button mat-menu-item [class.active]=\"showBlockedUsers\" (click)=\"toggleBlockedUsers(true)\"\r\n                                [disableRipple]=\"true\">\r\n                            <i class=\"fa fa-users-slash\"></i>\r\n                            Blocked users\r\n                        </button>\r\n                    </mat-menu>\r\n                </div>\r\n            </div>\r\n            <ul class=\"list align-items-center\">\r\n                <li *ngFor=\"let userMessages of filteredUsersMessages\"\r\n                    [class.active]=\"activeUser?.id === userMessages.id\">\r\n\r\n                    <ng-container\r\n                        [ngTemplateOutlet]=\"itemTemplate\"\r\n                        [ngTemplateOutletContext]=\"{user: userMessages, lastMsg: getUserLastMessage(userMessages?.users_connections[0]?.users_messages)}\">\r\n                    </ng-container>\r\n\r\n                    <ng-template #itemTemplate let-user=\"user\" let-lastMsg=\"lastMsg\">\r\n                        <div class=\"d-flex user-last-msg align-items-center justify-content-between\">\r\n                            <div class=\"left-group\" (click)=\"makeUserActive(user, lastMsg)\">\r\n\r\n                                <div class=\"img user-avatar\" [class.blocked]=\"ifContactBlocked(user)\">\r\n                                    <img class=\"avatar\" [src]=\"user.avatar|getImgPath: 'user_avatars'\">\r\n                                    <div class=\"status\" [hidden]=\"onlineUsers.length === 0\"\r\n                                         [ngClass]=\"getUserCurrentStatus(user.username) ? 'online':'offline'\"></div>\r\n                                </div>\r\n                                <div class=\"text\">\r\n                                    <div class=\"name\">{{user.first_name + ' ' + user.last_name}}</div>\r\n                                    <div class=\"d-flex align-items-center\" *ngIf=\"lastMsg\">\r\n                                        <div>\r\n                                            <span class=\"latest-message\">{{lastMsg.message|fixLineBreaks}}</span>\r\n                                        </div>\r\n                                        <div>\r\n                                            <span\r\n                                                class=\"ml-4 latest-msg-date\">{{lastMsg.created_at | dateFromNow}}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"ml-auto more-btn\">\r\n                                <ng-container *ngIf=\"ifMoreActionsShown(lastMsg, user)\">\r\n                                    <button mat-icon-button class=\"more-actions-btn\" [matMenuTriggerFor]=\"menu\"\r\n                                            [disableRipple]=\"true\">\r\n                                        <i class=\"fas fa-ellipsis-v\"></i>\r\n                                    </button>\r\n                                    <mat-menu #menu=\"matMenu\">\r\n                                        <button mat-menu-item *ngIf=\"ifUnreadShown(lastMsg, user) \"\r\n                                                (click)=\"unreadLastMessages(user)\">\r\n                                            Unread\r\n                                        </button>\r\n                                        <button mat-menu-item *ngIf=\"!showBlockedUsers\" (click)=\"blockUser(user)\">\r\n                                            Block\r\n                                        </button>\r\n<!--                                        <button mat-menu-item *ngIf=\"showBlockedUsers\" (click)=\"blockUser(user)\">-->\r\n<!--                                            Unblock-->\r\n<!--                                        </button>-->\r\n                                    </mat-menu>\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"checkIfLastMessageSeen(lastMsg)\">\r\n                                    <button class=\"seen-circle\">\r\n                                        <strong>{{userMessages?.unseens}}</strong>\r\n                                    </button>\r\n                                </ng-container>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div class=\"chat\" [hidden]=\"(isChatUsersListSize() && !activeUser)\">\r\n        <div class=\"chat-about\" *ngIf=\"activeUser\" [class.blocked]=\"ifContactBlocked(activeUser)\">\r\n            <div class=\"left\">\r\n                <button mat-icon-button *ngIf=\"isChatUsersListSize()\" (click)=\"activeUser = null;\">\r\n                    <mat-icon>arrow_back</mat-icon>\r\n                </button>\r\n                <div class=\"img\">\r\n                    <img class=\"avatar\" [src]=\"activeUser.avatar|getImgPath: 'user_avatars'\">\r\n                </div>\r\n                <div class=\"name\">{{activeUser.first_name + ' ' + activeUser.last_name}}</div>\r\n            </div>\r\n            <div class=\"right\">\r\n                <!--                <div class=\"remove\"><i class=\"fas fa-trash\"></i></div>-->\r\n                <!--                <div class=\"ml-auto more-btn\">-->\r\n                <!--                    <button class=\"dotes\" mat-icon-button [matMenuTriggerFor]=\"menu\" [disableRipple]=\"true\">-->\r\n                <!--                        <i class=\"fas fa-ellipsis-v\"></i>-->\r\n                <!--                    </button>-->\r\n                <!--                    <mat-menu #menu=\"matMenu\">-->\r\n                <!--                        <button mat-menu-item>Unread</button>-->\r\n                <!--                        <button mat-menu-item>Block</button>-->\r\n                <!--                    </mat-menu>-->\r\n                <!--                </div>-->\r\n            </div>\r\n        </div>\r\n\r\n        <ul class=\"chat-history\" id=\"direct-messages\" #directMessagesList>\r\n            <ng-container *ngFor=\"let msg of selectedUserMessages?.messages\">\r\n\r\n                <li class=\"data-list\"><span>{{msg.key|getDateText}}</span></li>\r\n                <ng-container *ngFor=\"let m of msg.value;let ind = index\">\r\n                    <li class=\"message-container\" [ngClass]=\"isOwnMessage(m.from_user)? 'my-message' : 'other-message'\">\r\n                        <div class=\"message-data mb-0 pl-0 d-flex justify-content-between align-items-center\">\r\n                            <div class=\"d-flex align-items-center\">\r\n                                <div class=\"img\">\r\n                                    <img class=\"avatar\" [src]=\"m.from_user.avatar|getImgPath: 'user_avatars'\">\r\n                                </div>\r\n                                <div class=\"name\">{{m.from_user.first_name + ' ' + m.from_user.last_name}}</div>\r\n                            </div>\r\n                            <div class=\"date\">{{m.created_at | date: 'HH:mm' }}</div>\r\n                        </div>\r\n                        <div class=\"message\" [innerHTML]=\"m.message\">\r\n\r\n                        </div>\r\n                        <div class=\"seen\" *ngIf=\"m.seen && m.to_id!==authUser.id\">\r\n                            <img class=\"seen-avatar\" [matTooltip]=\"getSeenTooltip(m)\"\r\n                                 [src]=\"m.to_user.avatar|getImgPath: 'user_avatars'\">\r\n                        </div>\r\n                    </li>\r\n                </ng-container>\r\n            </ng-container>\r\n        </ul>\r\n\r\n        <ng-container *ngIf=\"activeUser\">\r\n            <small class=\"text-center font-italic d-block\">{{typingText}}</small>\r\n            <div class=\"chat-message\" [class.disabled]=\"ifContactBlocked(activeUser)\">\r\n                <form [formGroup]=\"chatForm\" class=\"chat-form\">\r\n                    <textarea cdkTextareaAutosize rows=\"4\" class=\"flex-1 mx-3\" formControlName=\"message\"\r\n                              [placeholder]=\"getChatInputPlaceholder(activeUser)\"\r\n                              (keyup)=\"setTyping()\" (focus)=\"setSeen()\"\r\n                              (keyup.enter)=\"sendMessage($event)\">\r\n                    </textarea>\r\n                </form>\r\n                <div class=\"icons\" [hidden]=\"isProduction\">\r\n                    <a href=\"\"><img src=\"assets/img/gif-24px.svg\" alt=\"\"></a>\r\n                    <a href=\"\"><img src=\"assets/img/mood-24px.svg\" alt=\"\"></a>\r\n                    <a href=\"\"><img src=\"assets/img/send-24px.svg\" alt=\"\"></a>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport IsResponsive from '@core/helpers/is-responsive';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {ChatService} from '@core/services/chat.service';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport {UsersService} from '@core/services/users.service';\r\nimport {ConfirmationDialogComponent} from '@core/components/modals/confirmation-dialog/confirmation-dialog.component';\r\nimport {Subscription} from 'rxjs';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {ShowChatGroupMembersComponent} from '@core/components/modals/show-chat-group-members/show-chat-group-members.component';\r\nimport {SocketIoService} from '@core/services/socket-io.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {GroupByPipe} from '@shared/pipes/group-by.pipe';\r\nimport * as moment from 'moment';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {FixTextLineBreaksPipe} from '@shared/pipes/fix-text-line-breaks.pipe';\r\nimport {environment} from \"@env\";\r\n\r\n@Component({\r\n    selector: 'app-group-chat',\r\n    templateUrl: './group-chat.component.html',\r\n    styleUrls: ['./group-chat.component.scss']\r\n})\r\nexport class GroupChatComponent implements OnInit, OnDestroy {\r\n\r\n    groupChatForm: FormGroup;\r\n    groupChatDetailsForm: FormGroup;\r\n\r\n    showGroupChatForm = false;\r\n    showMembersInput = false;\r\n\r\n    selectedGroup;\r\n\r\n    userContacts = [];\r\n    groupMembers = [];\r\n    socketGroupsUsers = [];\r\n    inputGroupMembers = [];\r\n    filteredContacts = [];\r\n\r\n    memberCtrl = new FormControl();\r\n\r\n    subscriptions: Subscription[] = [];\r\n\r\n    typingText = {group: null, text: null};\r\n\r\n    readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n\r\n    @Input() authUser;\r\n\r\n    chatForm: FormGroup;\r\n\r\n    @ViewChild('chipsInput') chipsInput: ElementRef<HTMLInputElement>;\r\n    @ViewChild('groupMessagesList') private messagesList: ElementRef;\r\n\r\n    @Output() groupRemoved = new EventEmitter();\r\n\r\n\r\n    selectedGroupMessages = [];\r\n    selectedRawMessages = [];\r\n\r\n    groupsMessages = [];\r\n\r\n    haveGroupJoinInvitation = false;\r\n    isProduction = environment.production;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private chatService: ChatService,\r\n        private usersService: UsersService,\r\n        private socketService: SocketIoService,\r\n        private subject: SubjectService,\r\n        private toastr: ToastrService,\r\n        private dialog: MatDialog,\r\n        private groupBy: GroupByPipe,\r\n        private fixLineBreaks: FixTextLineBreaksPipe\r\n    ) {\r\n        this.subscriptions.push(this.memberCtrl.valueChanges.subscribe(search => {\r\n            if (search) {\r\n                this.filteredContacts = this.userContacts.filter(fc => {\r\n                    const fullNameLowerCased = (fc.first_name + ' ' + fc.last_name).toLowerCase();\r\n                    if (fullNameLowerCased.includes(search)) {\r\n                        return !this.groupMembers.find(gm => gm.name.toLowerCase() === fullNameLowerCased);\r\n                    }\r\n                    return false;\r\n                });\r\n            }\r\n        }));\r\n    }\r\n\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.initGroupChatForms();\r\n        this.initForm();\r\n        this.getGroupsMessages();\r\n        this.addUserToSocket();\r\n\r\n        this.getUserContacts();\r\n        this.getGroupJoinInvitation();\r\n        this.getChatNotifications();\r\n        this.getMessagesFromSocket();\r\n\r\n        this.getTyping();\r\n        this.getSeen();\r\n    }\r\n\r\n    initGroupChatForms() {\r\n        this.groupChatForm = this.fb.group({\r\n            creator_id: [this.authUser.id],\r\n            name: ['', Validators.required],\r\n            username: [this.authUser.username]\r\n        });\r\n\r\n\r\n        this.groupChatDetailsForm = this.fb.group({\r\n            group_id: [''],\r\n            member_ids: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    initForm() {\r\n        this.chatForm = this.fb.group({\r\n            from: [this.authUser.username],\r\n            from_id: [this.authUser.id],\r\n            group_id: [this.selectedGroup?.id],\r\n            avatar: [this.authUser?.avatar],\r\n            from_user: [this.authUser],\r\n            to_id: [null],\r\n            to_user: [null],\r\n            to_group: [this.selectedGroup],\r\n            message: ['', Validators.required],\r\n            personal: [1]\r\n        });\r\n    }\r\n\r\n    addUserToSocket() {\r\n        this.socketService.addNewUser({...this.authUser, group: true});\r\n    }\r\n\r\n    getUserContacts() {\r\n        this.subscriptions.push(this.usersService.getUserContacts({\r\n            user_id: this.authUser.id,\r\n            blocked: 0\r\n        }).subscribe(dt => {\r\n            this.userContacts = dt;\r\n        }));\r\n    }\r\n\r\n    getGroupsMessages(selectedGroupBefore = null) {\r\n        this.subscriptions.push(this.chatService.getGroupsMessages({\r\n            user_id: this.authUser.id,\r\n            blocked: 0\r\n        }).subscribe(dt => {\r\n            this.groupsMessages = dt;\r\n\r\n\r\n            this.selectedGroup = dt.find(d => d.name === selectedGroupBefore) || dt[0];\r\n            this.selectedGroupMessages = this.groupBy.transform(this.selectedGroup?.chat_group_messages, 'created_at');\r\n            if (this.selectedGroup) {\r\n                if (this.selectedGroup?.chat_group_messages.length > 0) {\r\n                    this.scrollMsgsToBottom();\r\n                }\r\n                this.groupChatDetailsForm.patchValue({group_id: this.selectedGroup.id});\r\n                this.chatForm.patchValue({group_id: this.selectedGroup.id});\r\n                this.groupMembers = this.selectedGroup?.chat_group_members;\r\n                // this.getGroupMessages();\r\n                // console.log(this.groupMembers)\r\n            }\r\n        }));\r\n    }\r\n\r\n    makeGroupActive(group) {\r\n        this.selectedGroup = group;\r\n        this.groupChatDetailsForm.patchValue({group_id: this.selectedGroup.id});\r\n        this.chatForm.patchValue({group_id: this.selectedGroup.id});\r\n        this.selectedGroupMessages = this.groupBy.transform(group.chat_group_messages, 'created_at');\r\n        this.typingText.group = group;\r\n        this.getTypingTextStatus({group: group.name, message: ''});\r\n        this.getGroupMembers();\r\n    }\r\n\r\n    addGroup() {\r\n        if (this.groupChatForm.valid) {\r\n            this.subscriptions.push(this.chatService.addGroup(this.groupChatForm.value).subscribe(dt => {\r\n                this.selectedGroup = dt.find(d => this.groupChatForm.value.name === d.name)\r\n                this.getGroupsMessages(this.selectedGroup);\r\n                this.socketService.setNewGroup(this.groupChatForm.value);\r\n                this.groupChatForm.patchValue({name: ''});\r\n            }));\r\n        }\r\n\r\n    }\r\n\r\n    changeAvatar(e) {\r\n        // this.selectedGroup.avatar = e.target.files[0].name;\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('avatar', file.name);\r\n        formData.append('group_id', this.selectedGroup.id);\r\n        formData.append('member_id', this.authUser.id);\r\n        formData.append('group_avatar_file', file);\r\n        // console.log({avatar: e.target.files[0].name})\r\n        this.subscriptions.push(this.chatService.changeGroupAvatar(formData).subscribe(dt => {\r\n            this.groupsMessages = dt;\r\n            this.selectedGroup = this.groupsMessages.find(group => this.selectedGroup.id === group.id);\r\n        }));\r\n    }\r\n\r\n    removeInputMember(member) {\r\n        const index = this.inputGroupMembers.indexOf(member);\r\n\r\n        if (index >= 0) {\r\n            this.inputGroupMembers.splice(index, 1);\r\n            this.groupChatDetailsForm.patchValue({member_ids: this.inputGroupMembers});\r\n        }\r\n    }\r\n\r\n    removeSavedMember(member_id) {\r\n        this.subscriptions.push(this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed) {\r\n                this.chatService.removeGroupMember({group_id: this.selectedGroup.id, member_id}).subscribe(dt => {\r\n                    this.groupMembers = dt?.chat_group_members;\r\n                });\r\n            }\r\n        }));\r\n\r\n    }\r\n\r\n    removeGroup() {\r\n        this.subscriptions.push(this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed) {\r\n                this.chatService.removeGroup({group_id: this.selectedGroup.id}).subscribe(dt => {\r\n                    this.socketService.removeGroup({group: this.selectedGroup.name, username: this.authUser.username});\r\n                    this.groupsMessages = dt;\r\n                    this.selectedGroup = null;\r\n                });\r\n            }\r\n        }));\r\n    }\r\n\r\n\r\n    autoCompleteMemberSelected(e) {\r\n        const value = e.option.value;\r\n\r\n        if (!this.inputGroupMembers.find(gm => gm.id === value)) {\r\n            this.inputGroupMembers.push(e.option.value);\r\n            this.groupChatDetailsForm.patchValue({member_ids: this.inputGroupMembers});\r\n        }\r\n\r\n        this.chipsInput.nativeElement.value = '';\r\n        this.memberCtrl.setValue('');\r\n    }\r\n\r\n    addMember(e) {\r\n\r\n        this.chipsInput.nativeElement.value = '';\r\n        this.memberCtrl.setValue('');\r\n\r\n        console.log(this.groupChatDetailsForm.value, this.selectedGroup)\r\n\r\n        this.subscriptions.push(this.chatService.addGroupMembers(this.groupChatDetailsForm.value).subscribe(dt => {\r\n            this.groupMembers = dt?.chat_group_members;\r\n            this.socketService.inviteToNewGroup({members: this.inputGroupMembers, group_id: this.selectedGroup.id});\r\n            this.inputGroupMembers = [];\r\n        }));\r\n    }\r\n\r\n    leaveGroup() {\r\n        this.subscriptions.push(this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed) {\r\n                this.chatService.leaveGroup({\r\n                    member_id: this.authUser.id,\r\n                    group_id: this.selectedGroup.id\r\n                }).subscribe(dt => {\r\n                    this.groupsMessages = dt;\r\n                    this.socketService.leaveGroup({group: this.selectedGroup.name, username: this.authUser.username});\r\n                    this.selectedGroup = null;\r\n                });\r\n            }\r\n        }));\r\n    }\r\n\r\n    openAllMembersModal() {\r\n        this.subscriptions.push(this.dialog.open(ShowChatGroupMembersComponent, {\r\n            width: '300px',\r\n            height: '400px'\r\n        }).afterClosed().subscribe(dt => {\r\n\r\n        }));\r\n    }\r\n\r\n    ifConfirmedToJoinTheGroup(group) {\r\n        return group?.chat_group_members.find(member => member.id === this.authUser.id && member.chat_groups_members.confirmed);\r\n    }\r\n\r\n    getGroupJoinInvitation() {\r\n        this.subscriptions.push(this.socketService.inviteToGroupSent().subscribe((data: any) => {\r\n            this.chatService.getChatGroups({user_id: this.authUser.id}).subscribe(dt => {\r\n\r\n                this.groupsMessages = dt;\r\n                this.selectedGroup = this.groupsMessages.find(group => data.group_id === group.id);\r\n                this.haveGroupJoinInvitation = true;\r\n                console.log(this.selectedGroup)\r\n            });\r\n        }));\r\n    }\r\n\r\n    acceptGroupJoin() {\r\n        this.subscriptions.push(\r\n            this.chatService.acceptGroupJoin({\r\n                group_id: this.selectedGroup.id,\r\n                member_id: this.authUser.id\r\n            }).subscribe(dt => {\r\n                this.groupsMessages = dt;\r\n                this.selectedGroup = this.groupsMessages.find(group => this.selectedGroup.id === group.id);\r\n                console.log(this.selectedGroup)\r\n                this.haveGroupJoinInvitation = false;\r\n                this.socketService.acceptJoinToGroup({\r\n                    group: this.selectedGroup.name,\r\n                    username: this.authUser.username\r\n                });\r\n            })\r\n        );\r\n    }\r\n\r\n    declineGroupJoin() {\r\n        this.subscriptions.push(\r\n            this.chatService.declineGroupJoin({\r\n                group_id: this.selectedGroup.id,\r\n                member_id: this.authUser.id\r\n            }).subscribe(dt => {\r\n                this.groupsMessages = dt;\r\n                this.socketService.declineJoinToGroup({\r\n                    group: this.selectedGroup?.name,\r\n                    username: this.authUser.username\r\n                });\r\n                this.selectedGroup = this.groupsMessages.find(group => this.selectedGroup.id === group.id);\r\n            })\r\n        );\r\n    }\r\n\r\n    getChatNotifications() {\r\n        this.subscriptions.push(this.socketService.getChatNotifications().subscribe((data: any) => {\r\n            this.socketGroupsUsers = data.groupsUsers;\r\n            // console.log(this.socketGroupsUsers)\r\n            if (data.groupRemoved) {\r\n                this.getGroupsMessages();\r\n                // this.selectedGroup = data.username !== this.authUser.username ? null : this.groupsMessages[this.groups.length - 1];\r\n            } else if (data.groupCreated) {\r\n                this.selectedGroup = this.groupsMessages.find(g => g.name === data.group);\r\n                if (this.selectedGroup) {\r\n                    this.groupChatDetailsForm.patchValue({group_id: this.selectedGroup.id});\r\n                    this.groupMembers = this.selectedGroup?.chat_group_members;\r\n                }\r\n            } else if (!data.joiningChat) {\r\n                // if (data.username !== this.authUser.username) {\r\n                this.toastr.info(data.msg);\r\n                if (data.acceptingJoinGroup || data.decliningJoinGroup || data.leavingGroup) {\r\n\r\n                    this.selectedGroup = this.groupsMessages.find(g => g.name === data.group);\r\n                    if (this.selectedGroup) {\r\n                        this.getGroupMembers();\r\n                        // this.getGroupMessages();\r\n                    }\r\n                }\r\n\r\n                this.groupMembers = this.selectedGroup?.chat_group_members;\r\n                // }\r\n            }\r\n        }));\r\n    }\r\n\r\n    getGroupMembers() {\r\n        this.subscriptions.push(this.chatService.getGroupMembers({group_id: this.selectedGroup.id}).subscribe(dt => {\r\n            this.groupMembers = dt?.chat_group_members;\r\n\r\n        }));\r\n    }\r\n\r\n    getUserCurrentStatus(groupMember) {\r\n        // console.log(groupMember)\r\n        const groupName = this.groupsMessages.find(gm => gm.id === groupMember?.chat_groups_members?.group_id)?.name;\r\n        if (this.socketGroupsUsers && groupName === this.selectedGroup?.name) {\r\n            return !!this.socketGroupsUsers.find(sGroupUser => sGroupUser.group === groupName && groupMember.username === sGroupUser.username);\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    sendMessage(e) {\r\n        this.chatForm.patchValue({message: this.fixLineBreaks.transform(e.target.value)});\r\n\r\n        if (e.keyCode === 13 && !e.shiftKey && this.chatForm.value.message.trim() !== '') {\r\n            if (this.chatForm.valid) {\r\n                const data = {...this.chatForm.value, group: this.selectedGroup.name};\r\n\r\n\r\n                this.subscriptions.push(this.chatService.saveGroupMessage(data).subscribe(dt => {\r\n                    // this.selectedUserMessages.messages = this.groupBy.transform(dt[0].messages, 'created_at');\r\n                    // this.selectedUserMessages.user = dt[0].user;\r\n\r\n                    this.socketService.sendMessage(data);\r\n                    this.scrollMsgsToBottom();\r\n                    // console.log(this.selectedUserMessages);\r\n                }));\r\n                this.chatForm.patchValue({message: ''});\r\n            }\r\n        }\r\n    }\r\n\r\n    scrollMsgsToBottom() {\r\n\r\n        try {\r\n            // console.log(this.messagesList.nativeElement, this.messagesList.nativeElement.scrollHeight)\r\n            this.messagesList.nativeElement.scrollTop = this.messagesList.nativeElement.scrollHeight;\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    // getGroupMessages() {\r\n    //     this.subscriptions.push(this.chatService.getGroupChatMessages({\r\n    //         group_id: this.selectedGroup?.id,\r\n    //         group: 1\r\n    //     }).subscribe(dt => {\r\n    //         this.selectedRawMessages = dt;\r\n    //         this.selectedGroupMessages = this.groupBy.transform(dt, 'created_at');\r\n    //\r\n    //     }));\r\n    // }\r\n\r\n    getMessagesFromSocket() {\r\n        this.subscriptions.push(this.socketService.onNewMessage().subscribe((dt: any) => {\r\n            if (dt.group) {\r\n\r\n                console.log('new message group chat!!!');\r\n                // this.groupRemoved.emit({});\r\n                this.getGroupsMessages(this.selectedGroup.name);\r\n                // this.selectedGroupMessages = this.groupBy.transform(dt, 'created_at');\r\n                this.typingText = {group: null, text: null};\r\n                // this.getUsersMessages();\r\n            }\r\n\r\n        }));\r\n    }\r\n\r\n\r\n    getMessageClass(user) {\r\n        this.scrollMsgsToBottom();\r\n        return user.id === this.authUser.id ? 'my-message' : 'other-message';\r\n    }\r\n\r\n    getSeen() {\r\n\r\n        this.subscriptions.push(this.socketService.getSeen().subscribe((dt: any) => {\r\n            // console.log('get seen', dt)\r\n            // console.log(this.selectedGroup)\r\n            this.getGroupsMessages(this.selectedGroup.name);\r\n        }));\r\n    }\r\n\r\n    setSeen() {\r\n        // console.log(this.selectedGroupMessages)\r\n        // console.log(this.groupsMessages)\r\n        const messages = this.selectedGroup?.chat_group_messages;\r\n        const lastMessage = messages[messages.length - 1];\r\n        const isOwnMessage = lastMessage?.from_id === this.authUser.id;\r\n        // console.log('set seen')\r\n        // console.log(isOwnMessage)\r\n        // console.log(lastMessage)\r\n        // console.log(this.selectedGroup)\r\n        this.scrollMsgsToBottom();\r\n        if (!isOwnMessage) {\r\n            this.socketService.setSeen({\r\n                message_id: lastMessage?.id,\r\n                from_id: this.chatForm.value.from_id,\r\n                to_id: this.chatForm.value.to_id,\r\n                from_user: this.chatForm.value.from_user,\r\n                group: this.selectedGroup.name,\r\n                group_id: this.selectedGroup.id,\r\n                seen: 1,\r\n                seen_at: moment().format('YYYY-MM-DD, h:mm:ss a')\r\n            });\r\n        }\r\n    }\r\n\r\n    getSeenTooltip(message) {\r\n        const seenDate = message.group_chat_messages_seen.created_at;\r\n        const thisWeekDate = moment(seenDate).isSame(new Date(), 'week');\r\n        const seenDateFormatted = moment(seenDate).format(thisWeekDate ? 'ddd HH:mm' : 'MMM DD, YYYY HH:mm');\r\n\r\n        return `${message.first_name} ${message.last_name} at ${seenDateFormatted}`;\r\n    }\r\n\r\n    getTyping() {\r\n        this.socketService.getTyping().subscribe((dt: any) => {\r\n            console.log(dt.group, this.selectedGroup?.name)\r\n            this.getTypingTextStatus(dt);\r\n\r\n        });\r\n    }\r\n\r\n    setTyping() {\r\n        this.socketService.setTyping({\r\n            from_user: this.chatForm.value.from_user,\r\n            group: this.selectedGroup.name,\r\n            message: this.chatForm.value.message\r\n        });\r\n    }\r\n\r\n    getTypingTextStatus(dt) {\r\n        const sameGroupTyping = dt.from_user?.id !== this.authUser.id && dt.group === this.selectedGroup.name && dt.message;\r\n        this.typingText = {\r\n            group: sameGroupTyping ? this.selectedGroup?.name === dt.group : null,\r\n            text: sameGroupTyping ? `${dt.from_user.username} is typing...` : null\r\n        };\r\n    }\r\n\r\n    isChatUsersListSize() {\r\n        return IsResponsive.isChatUsersListSize();\r\n    }\r\n\r\n    isSeenByAuthUser(messages) {\r\n        const f = messages.filter(message => {\r\n            let found = false;\r\n            if (message.from_id !== this.authUser.id) {\r\n                found = !message.seen_by.find(sb => sb.id === this.authUser.id);\r\n            }\r\n            return found;\r\n        });\r\n        return f.length;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n}\r\n","<div class=\"chat-wrap\">\r\n\r\n    <div class=\"people-groups-container\" [hidden]=\"isChatUsersListSize()\"\r\n         [class.responsive-list]=\"isChatUsersListSize()\">\r\n        <div id=\"groups-list\" class=\"list-wrap\">\r\n            <button class=\"create-group-chat\" [hidden]=\"showGroupChatForm\" (click)=\"showGroupChatForm = true\"><img\r\n                src=\"assets/img/noun_create.png\" alt=\"\"> Create new group\r\n            </button>\r\n            <form [formGroup]=\"groupChatForm\" [hidden]=\"!showGroupChatForm\" id=\"group-chat-form\">\r\n                <input formControlName=\"name\" placeholder=\"Group name\">\r\n                <button mat-icon-button (click)=\"addGroup()\">\r\n                    <mat-icon>done</mat-icon>\r\n                </button>\r\n                <button mat-icon-button (click)=\"showGroupChatForm = false\">\r\n                    <mat-icon>close</mat-icon>\r\n                </button>\r\n            </form>\r\n            <ul class=\"list\">\r\n                <li class=\"list-chat-group\" [class.active]=\"group.id===selectedGroup?.id\"\r\n                    *ngFor=\"let group of groupsMessages\"\r\n                    [class.unconfirmed]=\"!ifConfirmedToJoinTheGroup(group)\"\r\n                    (click)=\"makeGroupActive(group)\">\r\n                    <div class=\"left\">\r\n                        <img class=\"img\" [src]=\"group.avatar|getImgPath:'group_avatars'\">\r\n                        <div class=\"text\">\r\n                            <div class=\"name\">{{group.name}}</div>\r\n                            <span>{{group.chat_group_messages[group.chat_group_messages.length - 1]?.message| fixLineBreaks:' '}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"right\">\r\n                        <button class=\"seen-circle\" [hidden]=\"!isSeenByAuthUser(group.chat_group_messages)\">\r\n                            <strong>{{isSeenByAuthUser(group.chat_group_messages)}}</strong>\r\n                        </button>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"chat\" [hidden]=\"!selectedGroup\">\r\n        <div class=\"chat-top\">\r\n            <form [formGroup]=\"groupChatDetailsForm\"\r\n                  [hidden]=\"!selectedGroup || !ifConfirmedToJoinTheGroup(selectedGroup)\">\r\n                <div class=\"chat-about\">\r\n                    <div class=\"left\">\r\n                        <label for=\"group-avatar-input\">\r\n                            <img class=\"img\" [src]=\"selectedGroup?.avatar|getImgPath:'group_avatars'\">\r\n                        </label>\r\n                        <input id=\"group-avatar-input\" type=\"file\" [hidden]=\"true\" (change)=\"changeAvatar($event)\">\r\n                        <div class=\"group-name\">{{selectedGroup?.name}}</div>\r\n\r\n                    </div>\r\n                    <div class=\"center\">\r\n                        <div class=\"member-add\" [hidden]=\"!showMembersInput\">\r\n                            <mat-form-field>\r\n                                <mat-chip-list #tagList aria-label=\"Fruit selection\" formControlName=\"member_ids\">\r\n                                    <mat-chip *ngFor=\"let member of inputGroupMembers\"\r\n                                              (removed)=\"removeInputMember(member)\">\r\n                                        {{member.first_name + ' ' + member.last_name}}\r\n                                        <mat-icon matChipRemove>cancel</mat-icon>\r\n                                    </mat-chip>\r\n\r\n                                    <input type=\"text\" #chipsInput\r\n                                           placeholder=\"Member name from your contacts\"\r\n                                           matInput\r\n                                           maxlength=\"10\"\r\n                                           [formControl]=\"memberCtrl\"\r\n                                           [matChipInputFor]=\"tagList\"\r\n                                           [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                                           [matAutocomplete]=\"auto\">\r\n                                </mat-chip-list>\r\n                                <mat-autocomplete #auto=\"matAutocomplete\"\r\n                                                  (optionSelected)=\"autoCompleteMemberSelected($event)\">\r\n\r\n                                    <!--                            <mat-optgroup *ngFor=\"let contact of userContacts\" [label]=\"group.name\">-->\r\n                                    <mat-option *ngFor=\"let contact of filteredContacts\" [value]=\"contact\">\r\n                                        {{contact.first_name + ' ' + contact.last_name}}\r\n                                    </mat-option>\r\n                                    <!--                            </mat-optgroup>-->\r\n\r\n\r\n                                </mat-autocomplete>\r\n\r\n                                <mat-hint align=\"end\">Please press 'Enter' after the name</mat-hint>\r\n\r\n                            </mat-form-field>\r\n                            <button (click)=\"addMember($event)\">Add</button>\r\n                        </div>\r\n                        <div class=\"members-list\" [hidden]=\"showMembersInput\">\r\n                            <ul *ngIf=\"groupMembers?.length > 0\">\r\n                                <li class=\"group-member\" *ngFor=\"let m of groupMembers\"\r\n                                    [class.pending]=\"!m.chat_groups_members.confirmed\">\r\n                                    <img class=\"avatar\" [matTooltip]=\"m.name\"\r\n                                         [src]=\"m.avatar|getImgPath: 'user_avatars'\">\r\n                                    <mat-icon *ngIf=\"m.id !== selectedGroup?.creator_id\"\r\n                                              (click)=\"removeSavedMember(m.id)\">cancel\r\n                                    </mat-icon>\r\n                                    <div class=\"status\" [ngClass]=\"getUserCurrentStatus(m) ? 'online':'offline'\"></div>\r\n                                </li>\r\n                            </ul>\r\n                            <a id=\"show-more-members\" (click)=\"openAllMembersModal()\">\r\n                                Show more\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"right\">\r\n                        <button mat-icon-button [disableRipple]=\"true\" (click)=\"showMembersInput = !showMembersInput\">\r\n                            <mat-icon>people</mat-icon>\r\n                        </button>\r\n                        <div class=\"remove\" (click)=\"removeGroup()\" *ngIf=\"authUser.id === selectedGroup?.creator_id\">\r\n                            <a><i class=\"fas fa-trash\"></i></a>\r\n                        </div>\r\n                        <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"dotes\" [disableRipple]=\"true\">\r\n                            <i class=\"fas fa-ellipsis-v\"></i>\r\n                        </button>\r\n                        <mat-menu #menu=\"matMenu\">\r\n                            <button mat-menu-item (click)=\"showMembersInput = !showMembersInput\">\r\n                                Add members\r\n                            </button>\r\n                            <button mat-menu-item (click)=\"leaveGroup()\"\r\n                                    *ngIf=\"authUser.id !== selectedGroup?.creator_id\">\r\n                                Leave group\r\n                            </button>\r\n                        </mat-menu>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <div class=\"confirm-joining-group\" [hidden]=\"!selectedGroup || ifConfirmedToJoinTheGroup(selectedGroup)\">\r\n                <p>Please accept or decline joining to the <strong>{{selectedGroup?.name}}</strong> group</p>\r\n                <div class=\"actions\">\r\n                    <button class=\"accept-btn\" (click)=\"acceptGroupJoin()\">Accept</button>\r\n                    <button class=\"decline-btn\" (click)=\"declineGroupJoin()\">Decline</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <ul class=\"chat-history\" id=\"group-messages\" #groupMessagesList>\r\n            <div [hidden]=\"selectedGroupMessages?.length === 0\">\r\n                <div *ngFor=\"let msg of selectedGroupMessages\">\r\n\r\n                    <li class=\"data-list\"><span>{{msg.key|getDateText}}</span></li>\r\n                    <ng-container *ngFor=\"let m of msg.value;let ind = index\">\r\n                        <li class=\"message-container\" [ngClass]=\"getMessageClass(m.from_user)\">\r\n                            <div class=\"message-data mb-0 pl-0 d-flex justify-content-between align-items-center\">\r\n                                <div class=\"d-flex align-items-center\">\r\n                                    <div class=\"img\">\r\n                                        <img class=\"avatar\" [src]=\"m.from_user.avatar|getImgPath: 'user_avatars'\">\r\n                                    </div>\r\n                                    <div class=\"name\">{{m.from_user.first_name + ' ' + m.from_user.last_name}}</div>\r\n                                </div>\r\n                                <div class=\"date\">{{m.created_at | date: 'HH:mm' }}</div>\r\n                            </div>\r\n                            <div class=\"message\" [innerHTML]=\"m.message\">\r\n<!--                                {{m.message}}-->\r\n                            </div>\r\n                            <div class=\"seen\">\r\n                                <ng-container *ngFor=\"let seen of m.seen_by\">\r\n                                    <img class=\"seen-avatar\"\r\n                                         [matTooltip]=\"getSeenTooltip(seen)\"\r\n                                         [src]=\"seen.avatar|getImgPath: 'user_avatars'\">\r\n                                </ng-container>\r\n                            </div>\r\n                        </li>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n        </ul>\r\n\r\n        <small class=\"text-center font-italic d-block\" *ngIf=\"typingText.text\">{{typingText.text}}</small>\r\n        <div class=\"chat-message\" [hidden]=\"!selectedGroup\">\r\n            <form [formGroup]=\"chatForm\" class=\"chat-form\">\r\n                <textarea cdkTextareaAutosize class=\"flex-1 mx-3\" formControlName=\"message\" placeholder=\"Type your message\"\r\n                       (keyup)=\"setTyping()\" (focus)=\"setSeen()\"\r\n                       (keyup.enter)=\"sendMessage($event)\">\r\n                </textarea>\r\n            </form>\r\n            <div class=\"icons\" [hidden]=\"isProduction\">\r\n                <a href=\"\"><img src=\"assets/img/gif-24px.svg\" alt=\"\"></a>\r\n                <a href=\"\"><img src=\"assets/img/mood-24px.svg\" alt=\"\"></a>\r\n                <a href=\"\"><img src=\"assets/img/send-24px.svg\" alt=\"\"></a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ChatService} from '@core/services/chat.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {SocketIoService} from '@core/services/socket-io.service';\r\n\r\nimport {DatePipe} from '@angular/common';\r\nimport {GroupByPipe} from '@shared/pipes/group-by.pipe';\r\nimport {Subscription} from 'rxjs';\r\nimport {SubjectService} from '@core/services/subject.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-show-messages',\r\n    templateUrl: './show-messages.component.html',\r\n    styleUrls: ['./show-messages.component.scss']\r\n})\r\nexport class ShowMessagesComponent implements OnInit {\r\n    activeTab = 'direct';\r\n    authUser;\r\n\r\n    groupsMessages = [];\r\n    groupsLoaded = false;\r\n    subscriptions: Subscription[] = [];\r\n    newMessagesCountInGroups = 0;\r\n    newMessagesCountInDirect = 0;\r\n\r\n    constructor(\r\n        private chatService: ChatService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private socketService: SocketIoService,\r\n        private subject: SubjectService,\r\n        private datePipe: DatePipe,\r\n        private groupBy: GroupByPipe,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.authUser = this.getAuthUser.transform();\r\n        this.getGroupsMessages();\r\n    }\r\n\r\n\r\n    changeTab(tab) {\r\n        this.activeTab = tab;\r\n    }\r\n\r\n    getGroupsMessages() {\r\n        this.subscriptions.push(this.chatService.getGroupsMessages({\r\n            user_id: this.authUser.id,\r\n            blocked: 0\r\n        }).subscribe(dt => {\r\n            this.groupsMessages = dt;\r\n            this.groupsLoaded = true;\r\n            const newMessagesSource = dt.filter(fm => fm.new_messages_count > 0);\r\n            console.log(newMessagesSource)\r\n            this.newMessagesCountInGroups = newMessagesSource.length;\r\n            this.subject.setNewMessagesSourceData({source: newMessagesSource, type: 'group'});\r\n        }));\r\n    }\r\n\r\n\r\n}\r\n","<ng-container *ngIf=\"authUser\">\r\n    <app-user-tags></app-user-tags>\r\n    <div>\r\n        <div class=\"tab-wrap\">\r\n            <button class=\"tab direct-tab\" [matBadge]=\"newMessagesCountInDirect.toString()\" matBadgePosition=\"before\"\r\n                    [matBadgeHidden]=\"activeTab==='direct' || newMessagesCountInDirect===0 \"\r\n                    [class.active]=\"activeTab=='direct'\" (click)=\"changeTab('direct')\">Chat\r\n            </button>\r\n            <button class=\"tab group-tab\" [matBadge]=\"newMessagesCountInGroups.toString()\"\r\n                    [matBadgeHidden]=\"activeTab==='group' || newMessagesCountInGroups===0 \"\r\n                    [class.active]=\"activeTab==='group'\"\r\n                    (click)=\"changeTab('group')\">Group Chat\r\n            </button>\r\n        </div>\r\n        <app-direct-chat *ngIf=\"activeTab==='direct' && authUser\" [authUser]=\"authUser\"\r\n                         (newMessagesCountReceived)=\"newMessagesCountInDirect = $event\"></app-direct-chat>\r\n        <app-group-chat *ngIf=\"activeTab=='group' && authUser\" [authUser]=\"authUser\"></app-group-chat>\r\n\r\n    </div>\r\n</ng-container>\r\n"]}