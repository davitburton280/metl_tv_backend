{"version":3,"sources":["webpack:///src/app/chat/show-chatrooms/show-chatrooms.component.ts","webpack:///src/app/chat/show-chatrooms/show-chatrooms.component.html","webpack:///src/app/shared/components/chat/group-chat/left-side/group-form/group-form.component.ts","webpack:///src/app/shared/components/chat/group-chat/left-side/group-form/group-form.component.html","webpack:///src/app/shared/components/chat/group-chat/left-side/group-chat-left-side-holder.component.ts","webpack:///src/app/shared/components/chat/group-chat/left-side/group-chat-left-side-holder.component.html","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-avatar-handler/group-avatar-handler.component.ts","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-avatar-handler/group-avatar-handler.component.html","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-chat-actions/group-chat-actions.component.html","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-chat-actions/group-chat-actions.component.ts","webpack:///src/app/core/components/modals/show-chat-group-members/show-chat-group-members.component.html","webpack:///src/app/core/components/modals/show-chat-group-members/show-chat-group-members.component.ts","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-chat-members/members-list/members-list.component.html","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-chat-members/members-list/members-list.component.ts","webpack:///src/app/core/constants/chat.ts","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-chat-members/members-add-form/members-add-form.component.html","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-chat-members/members-add-form/members-add-form.component.ts","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-chat-members/group-chat-members.component.ts","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-chat-members/group-chat-members.component.html","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-chat-top.component.html","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-chat-top.component.ts","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-right-side-holder.component.ts","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-right-side-holder.component.html","webpack:///src/app/chat/show-messages/show-messages.component.html","webpack:///src/app/chat/chat-routing.module.ts","webpack:///src/app/chat/show-messages/show-messages.component.ts","webpack:///src/app/chat/chat.module.ts"],"names":["ShowChatroomsComponent","GroupFormComponent","fb","groupsMessagesStore","showGroupChatForm","this","initForm","groupForm","group","creator_id","authUser","id","name","required","username","valid","setAddGroupFormValue","value","patchValue","shown","addGroup","toggleForm","GroupChatLeftSideHolderComponent","mobileHelper","provide","useClass","GroupAvatarHandlerComponent","chatService","subscriptions","removeAvatarShown","groupsMessages$","subscribe","dt","e","file","target","files","formData","FormData","append","selectedGroup","avatarInput","nativeElement","push","changeGroupAvatar","setGroupsMessages","find","d","forEach","s","unsubscribe","changeAvatar","GroupChatActionsComponent","socketService","dialog","showMembersForm","open","afterClosed","confirmed","removeGroup","group_id","console","log","initiator","leaveGroup","member_id","leaveChatGroup","from_user","group_type","msg","first_name","last_name","ShowChatGroupMembersComponent","getAuthUser","activeTab","transform","getGroupMembers","selectedGroupMessages","chat_group_members","filter","m","chat_groups_members","tab","MembersListComponent","notificationsStore","isEmptyObj","modalMode","onlineMembers","trackGroupChanges","getOnlineMembers","getAcceptedJoinGroup","getDeclinedJoinChatGroup","getRemovedSavedMember","getLeftGroup","getMembersCountDelimiter","onLogout","selectedGroupsMessages$","sGroup","length","member","removeGroupMember","changeGroup","removeFromChatGroup","removeFromChatGroupNotify","data","leftGroups","selectGroup","getConnectedGroupMembers","group_name","membersOnlineFeedback","members","getAcceptedJoinChatGroup","notification","rest","updateNotifications","leaveChatGroupNotify","user","u","groupMember","groupName","groupsMessages","gm","width","height","MembersAddFormComponent","usersService","userContacts","filteredContacts","inputGroupMembers","groupMembers","memberCtrl","separatorKeysCodes","getUserContacts","getContactsFilteredBySearch","groupChatDetailsForm","member_ids","accepted","user_id","blocked","valueChanges","search","fc","fullNameLowerCased","toLowerCase","includes","option","map","chipsInput","setValue","inviteMembers","inviteToNewChatGroup","invited_members","index","indexOf","splice","autoCompleteMemberSelected","GroupChatMembersComponent","groupChatMessagesStore","GroupChatTopComponent","groupMessagesStore","showResponsiveChatBox","GroupChatRightSideHolderComponent","getSelectedGroup","routes","path","component","title","ShowMessagesComponent","usersMessagesStore","subject","datePipe","groupBy","groupsLoaded","newMessagesCountInGroups","newMessagesCountInDirect","getGroupsMessages","newMessagesSource","fm","new_messages_count","setNewMessagesSourceData","source","type","isChatUsersListSize","ChatRoutingModule","forChild","ChatModule"],"mappings":"oMAOO,Y,MAAMA,EAEX,eAEA,a,6CAJWA,I,uBAAAA,EAAsB,wsBCPnC,gBAGI,gBACI,gBACI,gBACA,eAAM,sBAAW,OACrB,OACA,gBACI,mBACI,mBAAiB,2BAAgB,OACjC,oBAAiB,kBAAM,OAC3B,OACJ,OAEA,iBACI,mBACJ,OAEA,mBACI,oBACA,mBAA6B,iBAAK,OAClC,gCACJ,OAEA,kBACI,qBAAqB,gBAAI,OAC7B,OACJ,OAEA,iBACI,cAAI,gBAAkB,mBAA6B,oBAAQ,OAAO,eAAG,OAAI,OACzE,cAAI,aAAG,mBAA6B,wBAAY,OAAO,eAAG,OAAI,OAC9D,cAAI,aAAG,mBAA6B,uBAAW,OAAO,eAAG,OAAI,OAC7D,cAAI,aAAG,mBAA6B,wBAAY,OAAO,4BAAgB,OAAI,OAC/E,OAEA,kBACI,oBACA,mBAA6B,kBAAM,OACvC,OAEA,kBACI,kBACI,kBACI,aAAG,qBAAS,gBAAM,wBAAY,OAAO,OACrC,aAAG,yBAAa,OACpB,OAEA,kBACI,kBACI,kBACI,qBACI,mBAA6B,mBAAO,OACxC,OACA,kBAAwB,eAAG,OAC3B,qBACI,mBAA6B,mBAAO,OACxC,OACJ,OACJ,OACA,kBACI,aAAG,2PAE8C,OAEjD,kBAEA,kBACI,kBACI,gBAAW,mBAA6B,uBAAW,OAAO,oBAAQ,OAClE,gBAAW,mBAA6B,iBAAK,OAAO,iBAAK,OAC7D,OACA,kBAAmB,mBAA6B,qBAAS,OAAO,OACpE,OACJ,OACJ,OACJ,OACA,kBACI,kBACI,aAAG,qBAAS,gBAAM,wBAAY,OAAO,OACrC,aAAG,yBAAa,OACpB,OAEA,kBACI,kBACI,kBACI,qBACI,mBAA6B,mBAAO,OACxC,OACA,kBAAwB,eAAG,OAC3B,sBACI,oBAA6B,oBAAO,OACxC,OACJ,OACJ,OACA,mBACI,cAAG,4PAE8C,OAEjD,mBAEA,mBACI,mBACI,iBAAW,oBAA6B,wBAAW,OAAO,qBAAQ,OAClE,iBAAW,oBAA6B,kBAAK,OAAO,kBAAK,OAC7D,OACA,mBAAmB,oBAA6B,sBAAS,OAAO,OACpE,OACJ,OACJ,OACJ,OACA,mBACI,mBACI,cAAG,sBAAS,iBAAM,yBAAY,OAAO,OACrC,cAAG,0BAAa,OACpB,OAEA,mBACI,mBACI,mBACI,sBACI,oBAA6B,oBAAO,OACxC,OACA,mBAAwB,gBAAG,OAC3B,sBACI,oBAA6B,oBAAO,OACxC,OACJ,OACJ,OACA,mBACI,cAAG,4PAE8C,OAEjD,mBAEA,mBACI,mBACI,iBAAW,oBAA6B,wBAAW,OAAO,qBAAQ,OAClE,iBAAW,oBAA6B,kBAAK,OAAO,kBAAK,OAC7D,OACA,mBAAmB,oBAA6B,sBAAS,OAAO,OACpE,OACJ,OACJ,OACJ,OACA,mBACI,mBACI,cAAG,sBAAS,iBAAM,yBAAY,OAAO,OACrC,cAAG,0BAAa,OACpB,OAEA,mBACI,mBACI,mBACI,sBACI,oBAA6B,oBAAO,OACxC,OACA,mBAAwB,gBAAG,OAC3B,sBACI,oBAA6B,oBAAO,OACxC,OACJ,OACJ,OACA,mBACI,cAAG,4PAE8C,OAEjD,mBAEA,mBACI,mBACI,iBAAW,oBAA6B,wBAAW,OAAO,qBAAQ,OAClE,iBAAW,oBAA6B,kBAAK,OAAO,kBAAK,OAC7D,OACA,mBAAmB,oBAA6B,sBAAS,OAAO,OACpE,OACJ,OACJ,OACJ,OACJ,OACJ,S,g+RDjLO,G,gKEEA,Y,MAAMC,EAMT,YACYC,EACAC,GADA,KAAAD,KACA,KAAAC,sBANZ,KAAAC,mBAAoB,EAUpB,WACIC,KAAKC,WAGT,WACID,KAAKE,UAAYF,KAAKH,GAAGM,MAAM,CAC3BC,WAAY,CAACJ,KAAKK,SAASC,IAC3BC,KAAM,CAAC,GAAI,IAAWC,UACtBC,SAAU,CAACT,KAAKK,SAASI,YAIjC,WACQT,KAAKE,UAAUQ,QACfV,KAAKF,oBAAoBa,qBAAqBX,KAAKE,UAAUU,OAC7DZ,KAAKE,UAAUW,WAAW,CAACN,KAAM,MAIzC,WAAWO,GACPd,KAAKD,kBAAoBe,G,6CAhCpBlB,GAAkB,sB,uBAAlBA,EAAkB,gWCT/B,iBACI,kBACA,mBAAwB,gCAAS,EAAAmB,cAC7B,mBAAU,eAAI,OAClB,OACA,mBAAwB,gCAAS,EAAAC,YAAW,MACxC,mBAAU,gBAAK,OACnB,OACJ,OACA,mBAA+D,gCAAS,EAAAA,YAAW,MAC/E,gBAAiE,+BACrE,Q,MAXM,8BAAuB,+BASK,6C,2rBDA3B,G,gBEAA,Y,MAAMC,EAGT,YACWC,GAAA,KAAAA,eAIX,a,6CARSD,GAAgC,Y,uBAAhCA,EAAgC,4FAF9B,CAAC,CAACE,QAAS,IAAwBC,SAAU,QAAwB,gICPpF,gBAEI,gBACI,2BACJ,OACA,4BACJ,Q,MALK,6DAEmB,oCAEH,sC,iLDId,G,gEECA,Y,MAAMC,EAST,YACYC,EACAxB,GADA,KAAAwB,cACA,KAAAxB,sBAPZ,KAAAyB,cAAgC,GAChC,KAAAC,mBAAoB,EAUpB,WACIxB,KAAKF,oBAAoB2B,gBAAgBC,UAAUC,OAOvD,aAAaC,EAAI,MACb,MAAMC,EAAOD,aAAC,EAADA,EAAGE,OAAOC,MAAM,GAEvBC,EAAW,IAAIC,SACrBD,EAASE,OAAO,UAAUL,aAAI,EAAJA,EAAMtB,OAAQ,IACxCyB,EAASE,OAAO,WAAYlC,KAAKmC,cAAc7B,IAC/C0B,EAASE,OAAO,YAAalC,KAAKK,SAASC,IAEvCuB,EACAG,EAASE,OAAO,oBAAqBL,GAErC7B,KAAKoC,YAAYC,cAAczB,MAAQ,GAG3CZ,KAAKuB,cAAce,KAAKtC,KAAKsB,YAAYiB,kBAAkBP,GAAUN,UAAUC,IAG3E3B,KAAKF,oBAAoB0C,kBAAkBb,GAE3C3B,KAAKmC,cAAgBR,EAAGc,KAAKC,GAAK1C,KAAKmC,cAAc7B,KAAOoC,EAAEpC,OAMtE,cACIN,KAAKuB,cAAcoB,QAAQC,GAAKA,EAAEC,gB,6CAjD7BxB,GAA2B,sB,uBAA3BA,EAA2B,iE,MAAA,K,ybCVxC,gBACI,gBAA+B,0DAAkC,IAAlC,CAAuC,qDAC/B,KAEnC,kBACI,gB,qBACJ,OACA,qBAAmC,gCAAS,EAAAyB,kBACsB,kBAClE,OACJ,OACA,oBAAwE,kCAAU,EAAAA,aAAA,MAAlF,OACA,gBAAwB,SAAuB,OACnD,Q,MAR0C,qGAGxB,8FAG0C,0BAChC,gE,4pCDFrB,G,+EETH,mBAA+C,sEAE3C,cACJ,O,KAHwB,yB,uCAIxB,gBAAoB,gEAChB,YAAG,cAA4B,OACnC,Q,uCAEA,gBAEI,mBACI,eACJ,OACA,2BAII,oBAAsB,+DAClB,wBACJ,OACJ,OACJ,O,wBAX4B,oCAA0B,qBCEnD,Y,MAAMC,EAMT,YACYzB,EACA0B,EACAlD,EACAmD,GAHA,KAAA3B,cACA,KAAA0B,gBACA,KAAAlD,sBACA,KAAAmD,SANZ,KAAA1B,cAAgC,GAUhC,YAIA,oBACIvB,KAAKF,oBAAoBoD,iBAAmBlD,KAAKF,oBAAoBoD,gBAGzE,cACIlD,KAAKuB,cAAce,KAAKtC,KAAKiD,OAAOE,KAAK,KAA6BC,cAAc1B,UAAU2B,IACtFA,GACArD,KAAKsB,YAAYgC,YAAY,CAACC,SAAUvD,KAAKmC,cAAc7B,KAAKoB,UAAUC,IACtE6B,QAAQC,IAAI9B,GACZ3B,KAAKgD,cAAcM,YAAY,CAACnD,MAAOH,KAAKmC,cAAeuB,UAAW1D,KAAKK,WAC3EL,KAAKF,oBAAoB0C,kBAAkBb,GAC3C3B,KAAKmC,cAAgB,UAMrC,aACInC,KAAKuB,cAAce,KAAKtC,KAAKiD,OAAOE,KAAK,KAA6BC,cAAc1B,UAAU2B,IACtFA,GAAarD,KAAKmC,eAClBnC,KAAKsB,YAAYqC,WAAW,CACxBC,UAAW5D,KAAKK,SAASC,GACzBiD,SAAUvD,KAAKmC,cAAc7B,KAC9BoB,UAAUC,IACT6B,QAAQC,IAAI,cAAe9B,EAAI3B,KAAKmC,eACpCnC,KAAKF,oBAAoB0C,kBAAkBb,GAC3C3B,KAAKgD,cAAca,eAAe,CAC9B1D,MAAOH,KAAKmC,cACZ2B,UAAW9D,KAAKK,SAChB0D,WAAY,OACZC,IAAK,WAAWhE,KAAKK,SAAS4D,WAAa,IAAMjE,KAAKK,SAAS6D,2CAA2ClE,KAAKmC,cAAc5B,wBAEjIP,KAAKmC,cAAgB,UAMrC,cACInC,KAAKuB,cAAcoB,QAAQC,GAAKA,EAAEC,gB,6CAzD7BE,GAAyB,0C,uBAAzBA,EAAyB,ikBDbtC,gBACI,yBAIA,sBAIA,sBAcJ,Q,MArBY,6FAGoC,6FAIlB,+F,4YCIvB,G,uCCPC,eACI,cACG,yFAEqB,QAAO,OACnC,O,qCAJwB,uCAAmC,uBAG/B,iB,yBAMxB,aACI,gBACI,gB,qBACA,eAAM,QAA8C,OACxD,OAEA,iBACI,oBACI,eACJ,OAEA,2BAEI,qBACI,gBACA,gBAAM,wBAAY,OACtB,OACA,qBACI,gBACA,gBAAM,sBAAU,OACpB,OACJ,OACJ,OACJ,Q,oCArB4B,2DACd,2CAIE,qC,mDCdrB,Y,MAAMoB,EAMT,YACYrE,EACAsE,GADA,KAAAtE,sBACA,KAAAsE,cAJZ,KAAAC,UAAY,cAQZ,WACIrE,KAAKK,SAAWL,KAAKoE,YAAYE,YACjCtE,KAAKuE,kBAGT,kBACIvE,KAAKmC,cAAgBnC,KAAKF,oBAAoB0E,sBAGlD,uBACI,OAAOxE,KAAKmC,cAAcsC,mBAAmBC,OAAOC,GAAKA,EAAEC,oBAAoBvB,WAGnF,gBAAgBwB,GACZ7E,KAAKqE,UAAYQ,G,6CA1BZV,GAA6B,sB,uBAA7BA,EAA6B,4oBDT1C,gBACI,aACI,iBAAyB,QAAsB,OAAQ,oBAC3D,OAEA,eACI,qBAMJ,OAEA,gBACI,aACI,sBAwBJ,OAGJ,OACJ,Q,MA1CiC,mCAIJ,kCAUb,mD,woFCPT,G,mECCS,sBAAyC,iGAA+B,iBAAM,Q,uCAS1E,eACG,kGAA+B,Q,yBAN1C,QACI,iBACI,eAAM,QAAoC,OAC9C,OACA,iBACI,qBAEJ,OACJ,Q,wCANc,2CAGe,qF,yBAjBjC,eAKI,gBACI,gB,qBAEA,2BACA,gBACJ,OAEA,+BASJ,Q,mCAnBI,+BAA8B,2CAIN,wDAA4C,8CAEtD,8CACU,qEAGV,kC,uCAWtB,oBAA+B,yEAC3B,eACJ,O,wBAF+D,mC,yBAzBnE,gBACI,aACI,sB,gBAsBJ,OACA,yBAGJ,Q,oBAzBY,oGAsBmF,mCCPxF,Y,MAAMW,EAWT,YACY7B,EACA3B,EACA0B,EACAlD,EACAiF,EACAC,GALA,KAAA/B,SACA,KAAA3B,cACA,KAAA0B,gBACA,KAAAlD,sBACA,KAAAiF,qBACA,KAAAC,aAdH,KAAAC,WAAY,EAErB,KAAAC,cAAgB,GAChB,KAAA3D,cAAgC,GAehC,WACIvB,KAAKmF,oBACLnF,KAAKoF,mBACLpF,KAAKqF,uBACLrF,KAAKsF,2BACLtF,KAAKuF,wBACLvF,KAAKwF,eACLxF,KAAKyF,2BACLzF,KAAK0F,WAGT,oBACI1F,KAAKuB,cAAce,KAAKtC,KAAKF,oBAAoB6F,wBAAwBjE,UAAWkE,IAChF5F,KAAKmC,cAAgByD,EAErB5F,KAAKoF,sBAIb,2BACI,OAAOpF,KAAKiF,UAAYjF,KAAKmC,cAAcsC,mBAAmBoB,OC3DpB,ED8D9C,kBAAkBC,GACd9F,KAAKuB,cAAce,KAAKtC,KAAKiD,OAAOE,KAAK,KAA6BC,cAAc1B,UAAU2B,IACtFA,GACArD,KAAKsB,YAAYyE,kBAAkB,CAC/BxC,SAAUvD,KAAKmC,cAAc7B,GAC7BsD,UAAWkC,EAAOxF,KACnBoB,UAAUC,IACT3B,KAAKmC,cAAgBR,EACrB3B,KAAKF,oBAAoBkG,YAAYhG,KAAKmC,eAC1CnC,KAAKgD,cAAciD,oBAAoB,CACnCH,SACAhC,UAAW9D,KAAKK,SAChBF,MAAOH,KAAKmC,cACZ6B,IAAK,WAAWhE,KAAKK,SAAS4D,WAAa,IAAMjE,KAAKK,SAAS6D,uCAAuC4B,EAAO7B,WAAa,IAAM6B,EAAO5B,2DACzHlE,KAAKmC,cAAc5B,6BAOrD,wBACIP,KAAKuB,cAAce,KAAKtC,KAAKgD,cAAckD,4BAA4BxE,UAAWyE,IAC9E,MAAM,MAAChG,EAAK,OAAE2F,EAAM,WAAEM,GAAcD,EAGhCL,EAAOxF,KAAON,KAAKK,SAASC,IAC5BN,KAAKF,oBAAoB0C,kBAAkB4D,GAC3CpG,KAAKF,oBAAoBuG,YAAY,KAGrCrG,KAAKF,oBAAoBkG,YAAY7F,MAOjD,mBAEIH,KAAKgD,cAAcsD,yBAAyB,CACxCC,WAAYvG,KAAKmC,cAAc5B,KAC/BE,SAAUT,KAAKK,SAASI,WAG5BT,KAAKuB,cAAce,KAAKtC,KAAKgD,cAAcwD,wBAAwB9E,UAAWC,IAC1E,MAAM,MAACxB,EAAK,QAAEsG,GAAW9E,EAIrBxB,IAAUH,KAAKmC,cAAc5B,OAC7BP,KAAKkF,cAAgBuB,MAKjC,uBACIzG,KAAKuB,cAAce,KAAKtC,KAAKgD,cAAc0D,2BAA2BhF,UAAWyE,IAC7E,MAAM,aAACQ,EAAY,KAAEC,GAAQT,EAC7B3C,QAAQC,IAAI,2BAA4B0C,GAEpCQ,EAAa7C,UAAUxD,KAAON,KAAKK,SAASC,IAC5CN,KAAK+E,mBAAmB8B,oBAAoBF,GAGhD3G,KAAKF,oBAAoBkG,YAAYY,EAAKzG,UAIlD,2BACIH,KAAKuB,cAAce,KAAKtC,KAAKgD,cAAcsC,2BAA2B5D,UAAWyE,IAC7E,MAAM,MAAChG,EAAK,aAAEwG,GAAgBR,EAC9B3C,QAAQC,IAAI,WAAY0C,GACpBA,EAAKrC,UAAUxD,KAAON,KAAKK,SAASC,GACpCN,KAAKF,oBAAoBuG,YAAY,KAErCrG,KAAK+E,mBAAmB8B,oBAAoBF,GAC5C3G,KAAKF,oBAAoBkG,YAAY7F,OAKjD,eACIH,KAAKuB,cAAce,KAAKtC,KAAKgD,cAAc8D,uBAAuBpF,UAAWyE,IACzE,MAAM,MAAChG,GAASgG,EAChB3C,QAAQC,IAAI0C,GACRA,EAAKrC,UAAUxD,KAAON,KAAKK,SAASC,GACpCN,KAAKF,oBAAoBuG,YAAY,KAErCrG,KAAK+E,mBAAmB8B,oBAAoBV,GAC5CnG,KAAKF,oBAAoBkG,YAAY7F,OAKjD,WACIH,KAAKgD,cAAc0C,WAAWhE,UAAWqF,IACrC/G,KAAKkF,cAAgBlF,KAAKkF,cAAcR,OAAOsC,GAAKA,IAAMD,EAAKtG,YAKvE,qBAAqBwG,G,QACjB,MAAMC,EAAoH,QAA3G,EAAGlH,KAAKF,oBAAoBqH,eAAe1E,KAAK2E,IAAK,MAAC,OAAAA,EAAG9G,MAAuC,QAArC,EAAK2G,aAAW,EAAXA,EAAarC,2BAAmB,eAAErB,mBAAS,eAAEhD,KAC5H,SAAIP,KAAKkF,eAAiBgC,KAAgC,QAAvB,EAAKlH,KAAKmC,qBAAa,eAAE5B,QAC/CP,KAAKkF,cAAczC,KAAKkC,GAAKsC,EAAYxG,WAAakE,IAKvE,sBACI3E,KAAKuB,cAAce,KAAKtC,KAAKiD,OAAOE,KAAK,EAA+B,CACpEkE,MAAO,QACPC,OAAQ,UACTlE,cAAc1B,UAAUC,QAK/B,oBAAoBgD,G,QAChB,OAAO3E,KAAKK,SAASC,MAAyB,QAAvB,EAAKN,KAAKmC,qBAAa,eAAE/B,aACzCuE,EAAErE,MAAyB,QAAvB,EAAKN,KAAKmC,qBAAa,eAAE/B,cAAeJ,KAAKiF,UAG5D,cACIjF,KAAKuB,cAAcoB,QAAQC,GAAKA,EAAEC,gB,6CAzK7BiC,GAAoB,8D,uBAApBA,EAAoB,opBDlBjC,sB,KAA0B,0G,ikFCkBnB,G,0JEdS,sBACU,6FACN,QACA,sBAAwB,iBAAM,OAClC,O,4BAFI,oD,0BAiBJ,wBACI,QACJ,Q,yBAFqD,gBACjD,oDCRb,a,MAAMyC,EAmBT,YACYtE,EACA3B,EACAkG,EACAxE,EACAlD,EACAD,GALA,KAAAoD,SACA,KAAA3B,cACA,KAAAkG,eACA,KAAAxE,gBACA,KAAAlD,sBACA,KAAAD,KAxBZ,KAAA4H,aAAe,GACf,KAAAC,iBAAmB,GAEnB,KAAAC,kBAAoB,GACpB,KAAAC,aAAe,GAEf,KAAArG,cAAgC,GAEhC,KAAAsG,WAAa,IAAI,IACR,KAAAC,mBAA+B,CAAC,IAAO,KAIvC,KAAA7C,WAAY,EAerB,WAGIjF,KAAKC,WAELD,KAAK+H,kBACL/H,KAAKuE,kBACLvE,KAAKgI,8BAGT,WACIhI,KAAKiI,qBAAuBjI,KAAKH,GAAGM,MAAM,CACtCoD,SAAU,CAACvD,KAAKmC,cAAc7B,IAC9B4H,WAAY,CAAC,GAAI,IAAW1H,UAC5B2H,SAAU,CAAC,KAInB,kBACI3E,QAAQC,IAAIzD,KAAKmC,eACjBnC,KAAK4H,aAAe5H,KAAKmC,cAAcsC,mBACvCzE,KAAKF,oBAAoB6F,wBAAwBjE,UAAWC,IACxD3B,KAAKmC,cAAgBR,EACjB3B,KAAKmC,gBACLnC,KAAK4H,aAAe5H,KAAKmC,cAAcsC,mBACvCzE,KAAKiI,qBAAqBpH,WAAW,CAAC0C,SAAUvD,KAAKmC,cAAc7B,QAK/E,kBACIN,KAAKuB,cAAce,KAAKtC,KAAKwH,aAAaO,gBAAgB,CACtDK,QAASpI,KAAKK,SAASC,GACvB+H,QAAS,IACV3G,UAAUC,IACT3B,KAAKyH,aAAe9F,KAI5B,8BACI3B,KAAKuB,cAAce,KAAKtC,KAAK6H,WAAWS,aAAa5G,UAAU6G,IACvDA,IACA/E,QAAQC,IAAIzD,KAAKyH,aAAczH,KAAK4H,cACpC5H,KAAK0H,iBAAmB1H,KAAKyH,aAAa/C,OAAO8D,IAC7C,MAAMC,GAAsBD,EAAGvE,WAAa,IAAMuE,EAAGtE,WAAWwE,cAChE,QAAID,EAAmBE,SAASJ,KACpBvI,KAAK4H,aAAanF,KAAK2E,IAAOA,EAAGnD,WAAa,IAAMmD,EAAGlD,WAAWwE,gBAAkBD,SAQhH,2BAA2B7G,GACvB,MAAMhB,EAAQgB,EAAEgH,OAAOhI,MAElBZ,KAAK2H,kBAAkBlF,KAAK2E,GAAMA,EAAG9G,KAAOM,KAC7CZ,KAAK2H,kBAAkBrF,KAAKV,EAAEgH,OAAOhI,OACrCZ,KAAKiI,qBAAqBpH,WAAW,CAACqH,WAAYlI,KAAK2H,kBAAkBkB,IAAIzB,GAAMA,EAAG9G,OAK1FN,KAAK8I,WAAWzG,cAAczB,MAAQ,GACtCZ,KAAK6H,WAAWkB,SAAS,IAG7B,gBAEI/I,KAAK8I,WAAWzG,cAAczB,MAAQ,GACtCZ,KAAK6H,WAAWkB,SAAS,IACzB/I,KAAKuB,cAAce,KAAKtC,KAAKsB,YAAY0H,cAAchJ,KAAKiI,qBAAqBrH,OAAOc,UAAUC,IAC9F3B,KAAK4H,aAAejG,aAAE,EAAFA,EAAI8C,mBACxBzE,KAAKmC,cAAgBR,EACrB3B,KAAKgD,cAAciG,qBAAqB,CACpCC,gBAAiBlJ,KAAK2H,kBACtB7D,UAAW9D,KAAKK,SAChBF,MAAOH,KAAKmC,cACZ4B,WAAY,OACZC,IAAK,WAAWhE,KAAKK,SAAS4D,WAAa,IAAMjE,KAAKK,SAAS6D,iEAAiElE,KAAKmC,cAAc5B,wBAEvJP,KAAKF,oBAAoBkG,YAAYhG,KAAKmC,eAC1CqB,QAAQC,IAAIzD,KAAKF,oBAAoBqH,gBACrC3D,QAAQC,IAAIzD,KAAKF,oBAAoB0E,uBACrCxE,KAAKF,oBAAoBoD,iBAAkB,EAC3ClD,KAAK2H,kBAAoB,MAIjC,kBAAkB7B,GACd,MAAMqD,EAAQnJ,KAAK2H,kBAAkByB,QAAQtD,GAEzCqD,GAAS,IACTnJ,KAAK2H,kBAAkB0B,OAAOF,EAAO,GACrCnJ,KAAKiI,qBAAqBpH,WAAW,CAACqH,WAAYlI,KAAK2H,kBAAkBkB,IAAIzB,GAAMA,EAAG9G,OAI9F,cACIN,KAAKuB,cAAcoB,QAAQC,GAAKA,EAAEC,gB,6CAjI7B0E,GAAuB,8D,uBAAvBA,EAAuB,6D,MAAA,K,orBDhBpC,iBACI,gBACI,yBACI,4BACI,4BAMA,oBAQJ,OACA,+BACkB,0CAAkB,EAAA+B,2BAAA,MAGhC,+BAMJ,OAEA,uBAAsB,+CAAmC,OAE7D,OACA,qBAAQ,gCAAS,EAAAN,mBAAiB,eAAG,OACzC,OACJ,Q,+BApCyC,+BAAnC,yCAIoB,4CAUH,yCAA0B,oBAA1B,CAA0B,qDAA1B,CAA0B,qBASrB,6C,o4BCPrB,GCRA,S,MAAMO,EAIT,YACWC,GAAA,KAAAA,yBAIX,a,6CATSD,GAAyB,Y,uBAAzBA,EAAyB,+LCRtC,6BACA,kC,MADkB,sCAA+B,sBAA/B,CAA+B,mDAC3B,8CAA+B,sBAA/B,CAA+B,sD,mCDO9C,G,wCENC,mBAAmE,iEAC/D,mBAAU,qBAAU,OACxB,Q,yBAGA,mC,qBAAwB,sCAA+B,wB,0BAN3D,gBACI,0BAGA,qCAEA,0CAEA,mCACJ,Q,oBAR4B,0DAGE,8CAA+B,uBAGjC,gCACA,8CAA+B,wBCKxD,a,MAAME,EAMT,YACYnI,EACA0B,EACA0G,EACA1E,EACD9D,GAJC,KAAAI,cACA,KAAA0B,gBACA,KAAA0G,qBACA,KAAA1E,aACD,KAAA9D,eAPX,KAAAK,cAAgC,GAYhC,YAIA,iBACI,OAAOvB,KAAKgF,WAAWV,UAAUtE,KAAKmC,eAG1C,cAEInC,KAAK0J,mBAAmBC,uBAAwB,EAGpD,cACI3J,KAAKuB,cAAcoB,QAAQC,GAAKA,EAAEC,gB,6CA9B7B4G,GAAqB,oD,uBAArBA,EAAqB,6GAFnB,CAAC,CAACtI,QAAS,IAAwBC,SAAU,QAAwB,kRDZpF,gBACI,uBAUJ,Q,MAXsB,kCACM,uC,qhBCarB,G,iBCLA,a,MAAMwI,EAOT,YAAoB9J,GAAA,KAAAA,sBAJpB,KAAAyB,cAAgC,GAOhC,WACIvB,KAAK6J,mBAGT,mBACI7J,KAAKuB,cAAce,KAAKtC,KAAKF,oBAAoB6F,wBAAwBjE,UAAWC,IAChF3B,KAAKwE,sBAAwB7C,KAIrC,cACI3B,KAAKuB,cAAcoB,QAAQC,GAAKA,EAAEC,gB,6CArB7B+G,GAAiC,Y,uBAAjCA,EAAiC,oOCT9C,gBACI,+BAEA,oCACJ,Q,MAHwB,sDAAuC,uBAElC,oCAAqB,mD,mIDM3C,G,yBESS,2B,qBAAgB,6B,yBAChB,4C,qBAAiC,6B,yBAMrC,qC,qBAA0B,6B,yBAC1B,6C,qBAAkC,6B,wCA1B9C,QACI,wBACA,gBACI,gBAEI,gBACI,mBAG6C,yDAAmB,aAAW,gBAC3E,OACA,mBAGQ,yDAAmB,YAAU,sBACrC,OACJ,OACA,gBACI,mCACA,oDAEJ,OACJ,OAEA,iBACI,6CACA,qDAEJ,OACJ,OACJ,O,uBA5B2B,0EAEd,oFAKW,6CAHuB,uDAAgD,yEAOvE,6CAFsB,uDAAgD,wEAOxC,4CAEL,0CAIjB,6CAC4B,4CAEd,2CCrB9C,MAAME,GAAiB,CACnB,CACIC,KAAM,QACNC,UAAW,EACX7D,KAAM,CACF8D,MAAO,eAGf,CACIF,KAAM,WACNC,UCID,M,MAAME,EAUT,YACY5I,EACA8C,EACApB,EACDmH,EACArK,EACCsK,EACAC,EACAC,EACDpJ,GARC,KAAAI,cACA,KAAA8C,cACA,KAAApB,gBACD,KAAAmH,qBACA,KAAArK,sBACC,KAAAsK,UACA,KAAAC,WACA,KAAAC,UACD,KAAApJ,eAlBX,KAAAmD,UAAY,SAGZ,KAAA8C,eAAiB,GACjB,KAAAoD,cAAe,EACf,KAAAhJ,cAAgC,GAChC,KAAAiJ,yBAA2B,EAC3B,KAAAC,yBAA2B,EAe3B,WACIzK,KAAKK,SAAWL,KAAKoE,YAAYE,YAKrC,UAAUO,GACN7E,KAAKqE,UAAYQ,EAGrB,oBACI7E,KAAKuB,cAAce,KAAKtC,KAAKsB,YAAYoJ,kBAAkB,CACvDtC,QAASpI,KAAKK,SAASC,GACvB+H,QAAS,IACV3G,UAAUC,IACT3B,KAAKmH,eAAiBxF,EACtB3B,KAAKuK,cAAe,EACpB,MAAMI,EAAoBhJ,EAAG+C,OAAOkG,GAAMA,EAAGC,mBAAqB,GAElE7K,KAAKwK,yBAA2BG,EAAkB9E,OAClD7F,KAAKoK,QAAQU,yBAAyB,CAACC,OAAQJ,EAAmBK,KAAM,aAIhF,oBACI,QAAIhL,KAAKkB,aAAa+J,wBACVjL,KAAKmK,mBAAmBR,wBACxB3J,KAAKF,oBAAoB6J,uB,6CAlDhCO,GAAqB,4F,uBAArBA,EAAqB,iDAFnB,CAAC,CAAC/I,QAAS,IAAwBC,SAAU,QAAwB,iWFlBpF,kC,KAAc,yB,soEEoBP,GDHC+E,KAAM,CACF8D,MAAO,UASZ,a,MAAMiB,G,8BAAAA,I,oDAAAA,IAAiB,SAHjB,CAAC,IAAaC,SAASrB,KACtB,O,GAEP,G,iBELA,a,MAAMsB,G,8BAAAA,I,oDAAAA,IAAU,UAHR,GACV,SANQ,CACL,IACA,GACA,S,GAKD","file":"x","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-show-chatrooms',\r\n  templateUrl: './show-chatrooms.component.html',\r\n  styleUrls: ['./show-chatrooms.component.scss']\r\n})\r\nexport class ShowChatroomsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"chatrooms-list\">\r\n<!--    <h1>Chat Rooms</h1>-->\r\n\r\n    <div class=\"create-post\">\r\n        <div class=\"img\">\r\n            <img src=\"assets/img/item-4.png\" alt=\"\">\r\n            <span>Create Post</span>\r\n        </div>\r\n        <div class=\"select\">\r\n            <select name=\"\" id=\"\">\r\n                <option value=\"\">Choose community</option>\r\n                <option value=\"\">option</option>\r\n            </select>\r\n        </div>\r\n\r\n        <div class=\"input\">\r\n            <input placeholder=\"Title\" type=\"text\">\r\n        </div>\r\n\r\n        <label class=\"add-photo\">\r\n            <input type=\"file\">\r\n            <span class=\"material-icons\">image</span>\r\n            Add Photo or Video\r\n        </label>\r\n\r\n        <div class=\"btn\">\r\n            <button class=\"post\">Post</button>\r\n        </div>\r\n    </div>\r\n\r\n    <ul class=\"categories\">\r\n        <li><a class=\"active\"><span class=\"material-icons\">whatshot</span>Hot</a></li>\r\n        <li><a><span class=\"material-icons\">new_releases</span>New</a></li>\r\n        <li><a><span class=\"material-icons\">trending_up</span>Top</a></li>\r\n        <li><a><span class=\"material-icons\">new_releases</span>Best of the week</a></li>\r\n    </ul>\r\n\r\n    <div class=\"search\">\r\n        <input placeholder=\"Search\" type=\"text\">\r\n        <span class=\"material-icons\">search</span>\r\n    </div>\r\n\r\n    <div class=\"chatrooms-items\">\r\n        <div class=\"item\">\r\n            <div class=\"posted\">\r\n                <p>Posted by<span>u/alotasalad</span></p>\r\n                <p>4 minutes ago</p>\r\n            </div>\r\n\r\n            <div class=\"info\">\r\n                <div class=\"left-wrap\">\r\n                    <div class=\"voting-container\">\r\n                        <button class=\"vote-up-btn active\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                        <div class=\"vote-count\">50k</div>\r\n                        <button class=\"vote-down-btn\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-wrap\">\r\n                    <p>This is my friends loss but to make matters even worse he borrowed the money from his Nigerian\r\n                        boss and yolod everything on fds otw up and down did I forget to mention that 4K in the the\r\n                        account right now is also his bosses money 💰</p>\r\n\r\n                    <img src=\"assets/img/jp-valeryunsplash.png\" alt=\"\">\r\n\r\n                    <div class=\"post-menu\">\r\n                        <div class=\"menu\">\r\n                            <a href=\"\"><span class=\"material-icons\">chat_bubble</span>Comments</a>\r\n                            <a href=\"\"><span class=\"material-icons\">share</span>Share</a>\r\n                        </div>\r\n                        <div class=\"dotes\"><span class=\"material-icons\">more_vert</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"item\">\r\n            <div class=\"posted\">\r\n                <p>Posted by<span>u/alotasalad</span></p>\r\n                <p>4 minutes ago</p>\r\n            </div>\r\n\r\n            <div class=\"info\">\r\n                <div class=\"left-wrap\">\r\n                    <div class=\"voting-container\">\r\n                        <button class=\"vote-up-btn active\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                        <div class=\"vote-count\">50k</div>\r\n                        <button class=\"vote-down-btn\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-wrap\">\r\n                    <p>This is my friends loss but to make matters even worse he borrowed the money from his Nigerian\r\n                        boss and yolod everything on fds otw up and down did I forget to mention that 4K in the the\r\n                        account right now is also his bosses money 💰</p>\r\n\r\n                    <img src=\"assets/img/jp-valeryunsplash.png\" alt=\"\">\r\n\r\n                    <div class=\"post-menu\">\r\n                        <div class=\"menu\">\r\n                            <a href=\"\"><span class=\"material-icons\">chat_bubble</span>Comments</a>\r\n                            <a href=\"\"><span class=\"material-icons\">share</span>Share</a>\r\n                        </div>\r\n                        <div class=\"dotes\"><span class=\"material-icons\">more_vert</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"item\">\r\n            <div class=\"posted\">\r\n                <p>Posted by<span>u/alotasalad</span></p>\r\n                <p>4 minutes ago</p>\r\n            </div>\r\n\r\n            <div class=\"info\">\r\n                <div class=\"left-wrap\">\r\n                    <div class=\"voting-container\">\r\n                        <button class=\"vote-up-btn active\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                        <div class=\"vote-count\">50k</div>\r\n                        <button class=\"vote-down-btn\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-wrap\">\r\n                    <p>This is my friends loss but to make matters even worse he borrowed the money from his Nigerian\r\n                        boss and yolod everything on fds otw up and down did I forget to mention that 4K in the the\r\n                        account right now is also his bosses money 💰</p>\r\n\r\n                    <img src=\"assets/img/jp-valeryunsplash.png\" alt=\"\">\r\n\r\n                    <div class=\"post-menu\">\r\n                        <div class=\"menu\">\r\n                            <a href=\"\"><span class=\"material-icons\">chat_bubble</span>Comments</a>\r\n                            <a href=\"\"><span class=\"material-icons\">share</span>Share</a>\r\n                        </div>\r\n                        <div class=\"dotes\"><span class=\"material-icons\">more_vert</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"item\">\r\n            <div class=\"posted\">\r\n                <p>Posted by<span>u/alotasalad</span></p>\r\n                <p>4 minutes ago</p>\r\n            </div>\r\n\r\n            <div class=\"info\">\r\n                <div class=\"left-wrap\">\r\n                    <div class=\"voting-container\">\r\n                        <button class=\"vote-up-btn active\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                        <div class=\"vote-count\">50k</div>\r\n                        <button class=\"vote-down-btn\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-wrap\">\r\n                    <p>This is my friends loss but to make matters even worse he borrowed the money from his Nigerian\r\n                        boss and yolod everything on fds otw up and down did I forget to mention that 4K in the the\r\n                        account right now is also his bosses money 💰</p>\r\n\r\n                    <img src=\"assets/img/jp-valeryunsplash.png\" alt=\"\">\r\n\r\n                    <div class=\"post-menu\">\r\n                        <div class=\"menu\">\r\n                            <a href=\"\"><span class=\"material-icons\">chat_bubble</span>Comments</a>\r\n                            <a href=\"\"><span class=\"material-icons\">share</span>Share</a>\r\n                        </div>\r\n                        <div class=\"dotes\"><span class=\"material-icons\">more_vert</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {GroupsMessagesSubjectService} from '@core/services/stores/groups-messages-subject.service';\r\n\r\n@Component({\r\n    selector: 'app-group-form',\r\n    templateUrl: './group-form.component.html',\r\n    styleUrls: ['./group-form.component.scss']\r\n})\r\nexport class GroupFormComponent implements OnInit {\r\n    groupForm: FormGroup;\r\n    showGroupChatForm = false;\r\n\r\n    @Input() authUser;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private groupsMessagesStore: GroupsMessagesSubjectService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initForm();\r\n    }\r\n\r\n    initForm() {\r\n        this.groupForm = this.fb.group({\r\n            creator_id: [this.authUser.id],\r\n            name: ['', Validators.required],\r\n            username: [this.authUser.username]\r\n        });\r\n    }\r\n\r\n    addGroup() {\r\n        if (this.groupForm.valid) {\r\n            this.groupsMessagesStore.setAddGroupFormValue(this.groupForm.value);\r\n            this.groupForm.patchValue({name: ''});\r\n        }\r\n    }\r\n\r\n    toggleForm(shown: boolean) {\r\n        this.showGroupChatForm = shown;\r\n    }\r\n\r\n}\r\n","<form [formGroup]=\"groupForm\" id=\"group-form\" [hidden]=\"!showGroupChatForm\">\r\n    <input formControlName=\"name\" placeholder=\"Group name\">\r\n    <button mat-icon-button (click)=\"addGroup()\">\r\n        <mat-icon>done</mat-icon>\r\n    </button>\r\n    <button mat-icon-button (click)=\"toggleForm(false)\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</form>\r\n<button class=\"create-group-chat\" [hidden]=\"showGroupChatForm\" (click)=\"toggleForm(true)\">\r\n    <img src=\"assets/img/noun_create.png\" alt=\"show-group-form-btn\"> Create new group\r\n</button>\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport {MobileResponsiveHelper} from '@core/helpers/mobile-responsive-helper';\n\n@Component({\n    selector: 'app-group-chat-left-side-holder',\n    templateUrl: './group-chat-left-side-holder.component.html',\n    styleUrls: ['./group-chat-left-side-holder.component.scss'],\n    providers: [{provide: MobileResponsiveHelper, useClass: MobileResponsiveHelper}]\n})\nexport class GroupChatLeftSideHolderComponent implements OnInit {\n    @Input() authUser;\n\n    constructor(\n        public mobileHelper: MobileResponsiveHelper,\n    ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","<div class=\"people-groups-container\"\n     [class.responsive-list]=\"mobileHelper.isChatUsersListSize()\">\n    <div id=\"group-form-container\">\n        <app-group-form [authUser]=\"authUser\"></app-group-form>\n    </div>\n    <app-groups-list [authUser]=\"authUser\"></app-groups-list>\n</div>\n","import {Component, ElementRef, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {ChatService} from '@core/services/chat.service';\r\nimport {GroupsMessagesSubjectService} from '@core/services/stores/groups-messages-subject.service';\r\n\r\n@Component({\r\n    selector: 'app-group-avatar-handler',\r\n    templateUrl: './group-avatar-handler.component.html',\r\n    styleUrls: ['./group-avatar-handler.component.scss']\r\n})\r\nexport class GroupAvatarHandlerComponent implements OnInit, OnDestroy {\r\n    @Input() authUser;\r\n    @Input() selectedGroup;\r\n\r\n    subscriptions: Subscription[] = [];\r\n    removeAvatarShown = false;\r\n\r\n    @ViewChild('avatarInput') avatarInput: ElementRef;\r\n\r\n    constructor(\r\n        private chatService: ChatService,\r\n        private groupsMessagesStore: GroupsMessagesSubjectService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.groupsMessagesStore.groupsMessages$.subscribe(dt => {\r\n            // console.log('groups changed', dt)\r\n            // this.selectedGroup = this.groupsMessagesStore.selectedGroupMessages || dt[0];\r\n            // console.log(this.groupsMessagesStore.selectedGroupMessages)\r\n        });\r\n    }\r\n\r\n    changeAvatar(e = null) {\r\n        const file = e?.target.files[0];\r\n\r\n        const formData = new FormData();\r\n        formData.append('avatar', file?.name || '');\r\n        formData.append('group_id', this.selectedGroup.id);\r\n        formData.append('member_id', this.authUser.id);\r\n\r\n        if (file) {\r\n            formData.append('group_avatar_file', file);\r\n        } else {\r\n            this.avatarInput.nativeElement.value = '';\r\n        }\r\n\r\n        this.subscriptions.push(this.chatService.changeGroupAvatar(formData).subscribe(dt => {\r\n            // console.log(dt.find(d => this.selectedGroup.id === d.id))\r\n            // this.groupsMessagesStore.changeGroup(dt.find(d => this.selectedGroup.id === d.id));\r\n            this.groupsMessagesStore.setGroupsMessages(dt);\r\n            // console.log(this.groupsMessagesStore.selectedGroupMessages)\r\n            this.selectedGroup = dt.find(d => this.selectedGroup.id === d.id)\r\n            // console.log(this.selectedGroup)\r\n            // this.groupsMessagesStore.selectGroup(this.selectedGroup);\r\n        }));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n\r\n}\r\n","<div class=\"left\">\r\n    <div class=\"group-avatar-wrap\" (mouseenter)=\"removeAvatarShown = true\"\r\n         (mouseleave)=\"removeAvatarShown = false\">\r\n\r\n        <label for=\"group-avatar-input\">\r\n            <img class=\"img group-avatar\" [src]=\"selectedGroup?.avatar|getImgPath:'group_avatars'\">\r\n        </label>\r\n        <mat-icon id=\"remove-group-avatar\" (click)=\"changeAvatar()\"\r\n                  [hidden]=\"!removeAvatarShown || !selectedGroup?.avatar\">cancel\r\n        </mat-icon>\r\n    </div>\r\n    <input id=\"group-avatar-input\" type=\"file\" #avatarInput [hidden]=\"true\" (change)=\"changeAvatar($event)\">\r\n    <div class=\"group-name\">{{selectedGroup?.name}}</div>\r\n</div>\r\n","<div class=\"right\">\r\n    <button mat-icon-button [disableRipple]=\"true\" (click)=\"toggleMembersForm()\"\r\n            *ngIf=\"authUser.id === selectedGroup?.creator_id\">\r\n        <i class=\"fas fa-user-plus\"></i>\r\n    </button>\r\n    <div class=\"remove\" (click)=\"removeGroup()\" *ngIf=\"authUser.id === selectedGroup?.creator_id\">\r\n        <a><i class=\"fas fa-trash\"></i></a>\r\n    </div>\r\n\r\n    <div class=\"more-actions\" *ngIf=\"authUser.id !== selectedGroup?.creator_id\">\r\n\r\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"dotes\" [disableRipple]=\"true\">\r\n            <i class=\"fas fa-ellipsis-v\"></i>\r\n        </button>\r\n        <mat-menu #menu=\"matMenu\">\r\n            <!--        <button mat-menu-item (click)=\"showMembersInput = !showMembersInput\">-->\r\n            <!--            Add members-->\r\n            <!--        </button>-->\r\n            <button mat-menu-item (click)=\"leaveGroup()\">\r\n                Leave group\r\n            </button>\r\n        </mat-menu>\r\n    </div>\r\n</div>\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {ConfirmationDialogComponent} from '@core/components/modals/confirmation-dialog/confirmation-dialog.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {Subscription} from 'rxjs';\r\nimport {ChatService} from '@core/services/chat.service';\r\nimport {SocketIoService} from '@core/services/socket-io.service';\r\nimport {GroupsMessagesSubjectService} from '@core/services/stores/groups-messages-subject.service';\r\n\r\n@Component({\r\n    selector: 'app-group-chat-actions',\r\n    templateUrl: './group-chat-actions.component.html',\r\n    styleUrls: ['./group-chat-actions.component.scss']\r\n})\r\nexport class GroupChatActionsComponent implements OnInit, OnDestroy {\r\n    @Input() authUser;\r\n    @Input() selectedGroup;\r\n\r\n    subscriptions: Subscription[] = [];\r\n\r\n    constructor(\r\n        private chatService: ChatService,\r\n        private socketService: SocketIoService,\r\n        private groupsMessagesStore: GroupsMessagesSubjectService,\r\n        private dialog: MatDialog\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    toggleMembersForm() {\r\n        this.groupsMessagesStore.showMembersForm = !this.groupsMessagesStore.showMembersForm;\r\n    }\r\n\r\n    removeGroup() {\r\n        this.subscriptions.push(this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed) {\r\n                this.chatService.removeGroup({group_id: this.selectedGroup.id}).subscribe(dt => {\r\n                    console.log(dt)\r\n                    this.socketService.removeGroup({group: this.selectedGroup, initiator: this.authUser});\r\n                    this.groupsMessagesStore.setGroupsMessages(dt);\r\n                    this.selectedGroup = null;\r\n                });\r\n            }\r\n        }));\r\n    }\r\n\r\n    leaveGroup() {\r\n        this.subscriptions.push(this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed && this.selectedGroup) {\r\n                this.chatService.leaveGroup({\r\n                    member_id: this.authUser.id,\r\n                    group_id: this.selectedGroup.id,\r\n                }).subscribe(dt => {\r\n                    console.log('leave group', dt, this.selectedGroup)\r\n                    this.groupsMessagesStore.setGroupsMessages(dt);\r\n                    this.socketService.leaveChatGroup({\r\n                        group: this.selectedGroup,\r\n                        from_user: this.authUser,\r\n                        group_type: 'chat',\r\n                        msg: `<strong>${this.authUser.first_name + ' ' + this.authUser.last_name}</strong> has left the <strong>${this.selectedGroup.name}</strong> group`\r\n                    });\r\n                    this.selectedGroup = null;\r\n                });\r\n            }\r\n        }));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n}\r\n","<div class=\"group-members-wrap\">\r\n    <h1>\r\n        <span class=\"group-name\">{{selectedGroup.name}}</span> members\r\n    </h1>\r\n\r\n    <ul class=\"nav nav-tabs\" id=\"member-tabs-list\" role=\"tablist\">\r\n        <li class=\"nav-item\" *ngFor=\"let tab of ['All members','Admins'];\">\r\n            <a class=\"nav-link\" [class.active]=\"tab === activeTab\" id=\"{{tab}}-tab\"\r\n               (click)=\"changeActiveTab(tab)\" data-toggle=\"tab\" role=\"tab\"\r\n               aria-controls=\"pWatch\"\r\n               aria-selected=\"true\">{{tab}}</a>\r\n        </li>\r\n    </ul>\r\n\r\n    <div class=\"members\">\r\n        <ul>\r\n            <li *ngFor=\"let member of getOnlyJoinedMembers()\">\r\n                <div class=\"details\">\r\n                    <img class=\"avatar\" [src]=\"member.avatar|getImgPath: 'user_avatars'\">\r\n                    <span>{{member.first_name + ' ' + member.last_name}}</span>\r\n                </div>\r\n\r\n                <div class=\"actions\">\r\n                    <button [matMenuTriggerFor]=\"menu\" class=\"more-actions-btn\">\r\n                        <i class=\"fas fa-ellipsis-h\"></i>\r\n                    </button>\r\n\r\n                    <mat-menu #menu=\"matMenu\">\r\n\r\n                        <button mat-menu-item id=\"view-profile\">\r\n                            <i class=\"fas fa-times-circle\"></i>\r\n                            <span>View profile</span>\r\n                        </button>\r\n                        <button mat-menu-item id=\"make-admin\">\r\n                            <i class=\"fas fa-times-circle\"></i>\r\n                            <span>Make admin</span>\r\n                        </button>\r\n                    </mat-menu>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n        <!--            <app-group-members-list [selectedGroup]=\"selectedGroup\" [modalMode]=\"true\"-->\r\n        <!--                              [authUser]=\"authUser\"></app-group-members-list>-->\r\n    </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {GroupsMessagesSubjectService} from '@core/services/stores/groups-messages-subject.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\n\r\n@Component({\r\n    selector: 'app-show-chat-group-members',\r\n    templateUrl: './show-chat-group-members.component.html',\r\n    styleUrls: ['./show-chat-group-members.component.scss']\r\n})\r\nexport class ShowChatGroupMembersComponent implements OnInit {\r\n    selectedGroup;\r\n    authUser;\r\n\r\n    activeTab = 'All members';\r\n\r\n    constructor(\r\n        private groupsMessagesStore: GroupsMessagesSubjectService,\r\n        private getAuthUser: GetAuthUserPipe\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.authUser = this.getAuthUser.transform();\r\n        this.getGroupMembers();\r\n    }\r\n\r\n    getGroupMembers() {\r\n        this.selectedGroup = this.groupsMessagesStore.selectedGroupMessages;\r\n    }\r\n\r\n    getOnlyJoinedMembers() {\r\n        return this.selectedGroup.chat_group_members.filter(m => m.chat_groups_members.confirmed);\r\n    }\r\n\r\n    changeActiveTab(tab) {\r\n        this.activeTab = tab;\r\n    }\r\n\r\n}\r\n","<div class=\"members-list\" *ngIf=\"selectedGroup.chat_group_members?.length > 0\">\n    <ul>\n        <li class=\"group-member\"\n            *ngFor=\"let m of selectedGroup.chat_group_members| slice:0: getMembersCountDelimiter(); let i=index\"\n            [class.modal-mode]=\"modalMode\"\n            [class.pending]=\"!m.chat_groups_members.accepted\">\n\n            <div class=\"avatar-status-wrap\">\n                <img class=\"avatar\" [matTooltip]=\"m.first_name+ ' '+m.last_name\"\n                     [src]=\"m.avatar|getImgPath: 'user_avatars'\">\n                <mat-icon *ngIf=\"ifRemoveMemberShown(m)\" (click)=\"removeSavedMember(m)\">cancel</mat-icon>\n                <div class=\"status\" [ngClass]=\"getUserCurrentStatus(m) ? 'online':'offline'\"></div>\n            </div>\n\n            <ng-container *ngIf=\"modalMode\">\n                <div class=\"member-name\">\n                    <span>{{m.first_name + ' ' + m.last_name}}</span>\n                </div>\n                <div class=\"actions\">\n                    <i class=\"fa fa-ban\" *ngIf=\"m.id !== selectedGroup?.creator_id\"\n                       (click)=\"removeSavedMember(m)\"></i>\n                </div>\n            </ng-container>\n        </li>\n    </ul>\n    <button id=\"show-more-members\" (click)=\"openAllMembersModal()\" [name]=\"selectedGroup.name\" *ngIf=\"!modalMode\">\n        <i class=\"fas fa-ellipsis-h\"></i>\n    </button>\n</div>\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {ConfirmationDialogComponent} from '@core/components/modals/confirmation-dialog/confirmation-dialog.component';\r\nimport {Subscription} from 'rxjs';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {ChatService} from '@core/services/chat.service';\r\nimport {ShowChatGroupMembersComponent} from '@core/components/modals/show-chat-group-members/show-chat-group-members.component';\r\nimport {GroupsMessagesSubjectService} from '@core/services/stores/groups-messages-subject.service';\r\nimport {ALLOWED_GROUP_MEMBERS_COUNT_ON_TOP} from '@core/constants/chat';\r\nimport {SocketIoService} from '@core/services/socket-io.service';\r\nimport {NotificationsSubjectStoreService} from '@core/services/stores/notifications-subject-store.service';\r\nimport {User} from '@shared/models/user';\r\nimport {CheckForEmptyObjectPipe} from '@shared/pipes/check-for-empty-object.pipe';\r\n\r\n@Component({\r\n    selector: 'app-members-list',\r\n    templateUrl: './members-list.component.html',\r\n    styleUrls: ['./members-list.component.scss'],\r\n})\r\nexport class MembersListComponent implements OnInit, OnDestroy {\r\n    @Input() selectedGroup;\r\n    @Input() authUser;\r\n    @Input() modalMode = false;\r\n\r\n    onlineMembers = [];\r\n    subscriptions: Subscription[] = [];\r\n\r\n    membersCountLimit;\r\n\r\n\r\n    constructor(\r\n        private dialog: MatDialog,\r\n        private chatService: ChatService,\r\n        private socketService: SocketIoService,\r\n        private groupsMessagesStore: GroupsMessagesSubjectService,\r\n        private notificationsStore: NotificationsSubjectStoreService,\r\n        private isEmptyObj: CheckForEmptyObjectPipe\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.trackGroupChanges();\r\n        this.getOnlineMembers();\r\n        this.getAcceptedJoinGroup();\r\n        this.getDeclinedJoinChatGroup();\r\n        this.getRemovedSavedMember();\r\n        this.getLeftGroup();\r\n        this.getMembersCountDelimiter();\r\n        this.onLogout();\r\n    }\r\n\r\n    trackGroupChanges() {\r\n        this.subscriptions.push(this.groupsMessagesStore.selectedGroupsMessages$.subscribe((sGroup: any) => {\r\n            this.selectedGroup = sGroup;\r\n            // console.log(sGroup)\r\n            this.getOnlineMembers();\r\n        }));\r\n    }\r\n\r\n    getMembersCountDelimiter() {\r\n        return this.modalMode ? this.selectedGroup.chat_group_members.length : ALLOWED_GROUP_MEMBERS_COUNT_ON_TOP;\r\n    }\r\n\r\n    removeSavedMember(member) {\r\n        this.subscriptions.push(this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed) {\r\n                this.chatService.removeGroupMember({\r\n                    group_id: this.selectedGroup.id,\r\n                    member_id: member.id\r\n                }).subscribe(dt => {\r\n                    this.selectedGroup = dt;\r\n                    this.groupsMessagesStore.changeGroup(this.selectedGroup);\r\n                    this.socketService.removeFromChatGroup({\r\n                        member,\r\n                        from_user: this.authUser,\r\n                        group: this.selectedGroup,\r\n                        msg: `<strong>${this.authUser.first_name + ' ' + this.authUser.last_name}</strong> removed  <strong>${member.first_name + ' ' + member.last_name}</strong>\r\n                       from <strong>${this.selectedGroup.name}</strong> group`,\r\n                    });\r\n                });\r\n            }\r\n        }));\r\n    }\r\n\r\n    getRemovedSavedMember() {\r\n        this.subscriptions.push(this.socketService.removeFromChatGroupNotify().subscribe((data: any) => {\r\n            const {group, member, leftGroups} = data;\r\n            // console.log('removed from group', data)\r\n            // this.notificationsStore.updateNotifications(data);\r\n            if (member.id === this.authUser.id) {\r\n                this.groupsMessagesStore.setGroupsMessages(leftGroups);\r\n                this.groupsMessagesStore.selectGroup({});\r\n            } else {\r\n                // console.log(group)\r\n                this.groupsMessagesStore.changeGroup(group);\r\n                // console.log(this.groupsMessagesStore.selectedGroupMessages)\r\n                // console.log(this.groupsMessagesStore.groupsMessages)\r\n            }\r\n        }));\r\n    }\r\n\r\n    getOnlineMembers() {\r\n        // console.log(this.selectedGroup.name)\r\n        this.socketService.getConnectedGroupMembers({\r\n            group_name: this.selectedGroup.name,\r\n            username: this.authUser.username\r\n        });\r\n\r\n        this.subscriptions.push(this.socketService.membersOnlineFeedback().subscribe((dt: any) => {\r\n            const {group, members} = dt;\r\n            // console.log('online members', dt)\r\n            // console.log('selected group', this.selectedGroup.name)\r\n            // console.log('group', group)\r\n            if (group === this.selectedGroup.name) {\r\n                this.onlineMembers = members;\r\n            }\r\n        }));\r\n    }\r\n\r\n    getAcceptedJoinGroup() {\r\n        this.subscriptions.push(this.socketService.getAcceptedJoinChatGroup().subscribe((data: any) => {\r\n            const {notification, rest} = data;\r\n            console.log('accepted in members list', data)\r\n            // console.log(this.notificationsStore.allNotifications)\r\n            if (notification.from_user.id !== this.authUser.id) {\r\n                this.notificationsStore.updateNotifications(notification);\r\n            }\r\n            // console.log(this.notificationsStore.allNotifications)\r\n            this.groupsMessagesStore.changeGroup(rest.group);\r\n        }));\r\n    }\r\n\r\n    getDeclinedJoinChatGroup() {\r\n        this.subscriptions.push(this.socketService.getDeclinedJoinChatGroup().subscribe((data: any) => {\r\n            const {group, notification} = data;\r\n            console.log('declined', data);\r\n            if (data.from_user.id === this.authUser.id) {\r\n                this.groupsMessagesStore.selectGroup({});\r\n            } else {\r\n                this.notificationsStore.updateNotifications(notification);\r\n                this.groupsMessagesStore.changeGroup(group);\r\n            }\r\n        }));\r\n    }\r\n\r\n    getLeftGroup() {\r\n        this.subscriptions.push(this.socketService.leaveChatGroupNotify().subscribe((data: any) => {\r\n            const {group} = data;\r\n            console.log(data)\r\n            if (data.from_user.id === this.authUser.id) {\r\n                this.groupsMessagesStore.selectGroup({});\r\n            } else {\r\n                this.notificationsStore.updateNotifications(data);\r\n                this.groupsMessagesStore.changeGroup(group);\r\n            }\r\n        }));\r\n    }\r\n\r\n    onLogout() {\r\n        this.socketService.onLogout().subscribe((user: User) => {\r\n            this.onlineMembers = this.onlineMembers.filter(u => u !== user.username);\r\n            // console.log('logout', this.onlineMembers)\r\n        });\r\n    }\r\n\r\n    getUserCurrentStatus(groupMember) {\r\n        const groupName = this.groupsMessagesStore.groupsMessages.find(gm => gm.id === groupMember?.chat_groups_members?.group_id)?.name;\r\n        if (this.onlineMembers && groupName === this.selectedGroup?.name) {\r\n            return !!this.onlineMembers.find(m => groupMember.username === m);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    openAllMembersModal() {\r\n        this.subscriptions.push(this.dialog.open(ShowChatGroupMembersComponent, {\r\n            width: '500px',\r\n            height: '600px',\r\n        }).afterClosed().subscribe(dt => {\r\n\r\n        }));\r\n    }\r\n\r\n    ifRemoveMemberShown(m) {\r\n        return this.authUser.id === this.selectedGroup?.creator_id\r\n            && m.id !== this.selectedGroup?.creator_id && !this.modalMode;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n}\r\n","export const ALLOWED_GROUP_MEMBERS_COUNT_ON_TOP = 5;\r\n","<form [formGroup]=\"groupChatDetailsForm\" [class.modal-mode]=\"modalMode\">\n    <div class=\"member-add\">\n        <mat-form-field>\n            <mat-chip-list #tagList aria-label=\"Fruit selection\" formControlName=\"member_ids\">\n                <mat-chip *ngFor=\"let member of inputGroupMembers\"\n                          (removed)=\"removeInputMember(member)\">\n                    {{member.first_name + ' ' + member.last_name}}\n                    <mat-icon matChipRemove>cancel</mat-icon>\n                </mat-chip>\n\n                <input type=\"text\" #chipsInput\n                       placeholder=\"Member name from your contacts\"\n                       matInput\n                       maxlength=\"10\"\n                       [formControl]=\"memberCtrl\"\n                       [matChipInputFor]=\"tagList\"\n                       [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                       [matAutocomplete]=\"auto\">\n            </mat-chip-list>\n            <mat-autocomplete #auto=\"matAutocomplete\"\n                              (optionSelected)=\"autoCompleteMemberSelected($event)\">\n\n                <!--                            <mat-optgroup *ngFor=\"let contact of userContacts\" [label]=\"group.name\">-->\n                <mat-option *ngFor=\"let contact of filteredContacts\" [value]=\"contact\">\n                    {{contact.first_name + ' ' + contact.last_name}}\n                </mat-option>\n                <!--                            </mat-optgroup>-->\n\n\n            </mat-autocomplete>\n\n            <mat-hint align=\"end\">Please press 'Enter' after the name</mat-hint>\n\n        </mat-form-field>\n        <button (click)=\"inviteMembers()\">Add</button>\n    </div>\n</form>\n","import {Component, ElementRef, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {ChatService} from '@core/services/chat.service';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport {UsersService} from '@core/services/users.service';\r\nimport {SocketIoService} from '@core/services/socket-io.service';\r\nimport {GroupsMessagesSubjectService} from '@core/services/stores/groups-messages-subject.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-members-add-form',\r\n    templateUrl: './members-add-form.component.html',\r\n    styleUrls: ['./members-add-form.component.scss']\r\n})\r\nexport class MembersAddFormComponent implements OnInit, OnDestroy {\r\n    userContacts = [];\r\n    filteredContacts = [];\r\n\r\n    inputGroupMembers = [];\r\n    groupMembers = [];\r\n\r\n    subscriptions: Subscription[] = [];\r\n\r\n    memberCtrl = new FormControl();\r\n    readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n\r\n    @Input() selectedGroup;\r\n    @Input() authUser;\r\n    @Input() modalMode = false;\r\n    @ViewChild('chipsInput') chipsInput: ElementRef<HTMLInputElement>;\r\n\r\n    groupChatDetailsForm: FormGroup;\r\n\r\n    constructor(\r\n        private dialog: MatDialog,\r\n        private chatService: ChatService,\r\n        private usersService: UsersService,\r\n        private socketService: SocketIoService,\r\n        private groupsMessagesStore: GroupsMessagesSubjectService,\r\n        private fb: FormBuilder\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n\r\n        this.initForm();\r\n\r\n        this.getUserContacts();\r\n        this.getGroupMembers();\r\n        this.getContactsFilteredBySearch();\r\n    }\r\n\r\n    initForm() {\r\n        this.groupChatDetailsForm = this.fb.group({\r\n            group_id: [this.selectedGroup.id],\r\n            member_ids: ['', Validators.required],\r\n            accepted: [0]\r\n        });\r\n    }\r\n\r\n    getGroupMembers() {\r\n        console.log(this.selectedGroup)\r\n        this.groupMembers = this.selectedGroup.chat_group_members;\r\n        this.groupsMessagesStore.selectedGroupsMessages$.subscribe((dt: any) => {\r\n            this.selectedGroup = dt;\r\n            if (this.selectedGroup) {\r\n                this.groupMembers = this.selectedGroup.chat_group_members;\r\n                this.groupChatDetailsForm.patchValue({group_id: this.selectedGroup.id});\r\n            }\r\n        });\r\n    }\r\n\r\n    getUserContacts() {\r\n        this.subscriptions.push(this.usersService.getUserContacts({\r\n            user_id: this.authUser.id,\r\n            blocked: 0\r\n        }).subscribe(dt => {\r\n            this.userContacts = dt;\r\n        }));\r\n    }\r\n\r\n    getContactsFilteredBySearch() {\r\n        this.subscriptions.push(this.memberCtrl.valueChanges.subscribe(search => {\r\n            if (search) {\r\n                console.log(this.userContacts, this.groupMembers)\r\n                this.filteredContacts = this.userContacts.filter(fc => {\r\n                    const fullNameLowerCased = (fc.first_name + ' ' + fc.last_name).toLowerCase();\r\n                    if (fullNameLowerCased.includes(search)) {\r\n                        return !this.groupMembers.find(gm => (gm.first_name + ' ' + gm.last_name).toLowerCase() === fullNameLowerCased);\r\n                    }\r\n                    return false;\r\n                });\r\n            }\r\n        }));\r\n    }\r\n\r\n    autoCompleteMemberSelected(e) {\r\n        const value = e.option.value;\r\n\r\n        if (!this.inputGroupMembers.find(gm => gm.id === value)) {\r\n            this.inputGroupMembers.push(e.option.value);\r\n            this.groupChatDetailsForm.patchValue({member_ids: this.inputGroupMembers.map(gm => gm.id)});\r\n        }\r\n\r\n        // console.log(this.)\r\n\r\n        this.chipsInput.nativeElement.value = '';\r\n        this.memberCtrl.setValue('');\r\n    }\r\n\r\n    inviteMembers() {\r\n\r\n        this.chipsInput.nativeElement.value = '';\r\n        this.memberCtrl.setValue('');\r\n        this.subscriptions.push(this.chatService.inviteMembers(this.groupChatDetailsForm.value).subscribe(dt => {\r\n            this.groupMembers = dt?.chat_group_members;\r\n            this.selectedGroup = dt;\r\n            this.socketService.inviteToNewChatGroup({\r\n                invited_members: this.inputGroupMembers,\r\n                from_user: this.authUser,\r\n                group: this.selectedGroup,\r\n                group_type: 'chat',\r\n                msg: `<strong>${this.authUser.first_name + ' ' + this.authUser.last_name}</strong> has sent an invitation to join the <strong>${this.selectedGroup.name}</strong> group`,\r\n            });\r\n            this.groupsMessagesStore.changeGroup(this.selectedGroup);\r\n            console.log(this.groupsMessagesStore.groupsMessages)\r\n            console.log(this.groupsMessagesStore.selectedGroupMessages)\r\n            this.groupsMessagesStore.showMembersForm = false;\r\n            this.inputGroupMembers = [];\r\n        }));\r\n    }\r\n\r\n    removeInputMember(member) {\r\n        const index = this.inputGroupMembers.indexOf(member);\r\n\r\n        if (index >= 0) {\r\n            this.inputGroupMembers.splice(index, 1);\r\n            this.groupChatDetailsForm.patchValue({member_ids: this.inputGroupMembers.map(gm => gm.id)});\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport {GroupsMessagesSubjectService} from '@core/services/stores/groups-messages-subject.service';\n\n@Component({\n    selector: 'app-group-chat-members',\n    templateUrl: './group-chat-members.component.html',\n    styleUrls: ['./group-chat-members.component.scss']\n})\nexport class GroupChatMembersComponent implements OnInit {\n    @Input() authUser;\n    @Input() selectedGroup;\n\n    constructor(\n        public groupChatMessagesStore: GroupsMessagesSubjectService\n    ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","<app-members-list [selectedGroup]=\"selectedGroup\" [authUser]=\"authUser\" [hidden]=\"groupChatMessagesStore.showMembersForm\"></app-members-list>\n<app-members-add-form [selectedGroup]=\"selectedGroup\" [authUser]=\"authUser\" [hidden]=\"!groupChatMessagesStore.showMembersForm\"></app-members-add-form>\n","<div class=\"chat-top\" [hidden]=\"isChatTopShown()\">\r\n    <div class=\"chat-about\" *ngIf=\"selectedGroup\">\r\n        <button mat-icon-button *ngIf=\"mobileHelper.isChatUsersListSize()\" (click)=\"backToUsers()\">\r\n            <mat-icon>arrow_back</mat-icon>\r\n        </button>\r\n        <app-group-avatar-handler [selectedGroup]=\"selectedGroup\"\r\n                                  [authUser]=\"authUser\"></app-group-avatar-handler>\r\n        <app-group-chat-members [selectedGroup]=\"selectedGroup\" [authUser]=\"authUser\"\r\n                                *ngIf=\"authUser\"></app-group-chat-members>\r\n        <app-group-chat-actions [selectedGroup]=\"selectedGroup\" [authUser]=\"authUser\"></app-group-chat-actions>\r\n    </div>\r\n</div>\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {ChatService} from '@core/services/chat.service';\r\nimport {SocketIoService} from '@core/services/socket-io.service';\r\nimport {GroupsMessagesSubjectService} from '@core/services/stores/groups-messages-subject.service';\r\nimport {CheckForEmptyObjectPipe} from '@shared/pipes/check-for-empty-object.pipe';\r\nimport {MobileResponsiveHelper} from '@core/helpers/mobile-responsive-helper';\r\n\r\n@Component({\r\n    selector: 'app-group-chat-top',\r\n    templateUrl: './group-chat-top.component.html',\r\n    styleUrls: ['./group-chat-top.component.scss'],\r\n    providers: [{provide: MobileResponsiveHelper, useClass: MobileResponsiveHelper}]\r\n})\r\nexport class GroupChatTopComponent implements OnInit, OnDestroy {\r\n    @Input() authUser;\r\n    @Input() selectedGroup;\r\n\r\n    subscriptions: Subscription[] = [];\r\n\r\n    constructor(\r\n        private chatService: ChatService,\r\n        private socketService: SocketIoService,\r\n        private groupMessagesStore: GroupsMessagesSubjectService,\r\n        private isEmptyObj: CheckForEmptyObjectPipe,\r\n        public mobileHelper: MobileResponsiveHelper,\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    isChatTopShown() {\r\n        return this.isEmptyObj.transform(this.selectedGroup);\r\n    }\r\n\r\n    backToUsers() {\r\n        // this.groupMessagesStore.changeGroup({});\r\n        this.groupMessagesStore.showResponsiveChatBox = false;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n}\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {GroupsMessagesSubjectService} from '@core/services/stores/groups-messages-subject.service';\r\n\r\n@Component({\r\n    selector: 'app-group-chat-right-side-holder',\r\n    templateUrl: './group-chat-right-side-holder.component.html',\r\n    styleUrls: ['./group-chat-right-side-holder.component.scss']\r\n})\r\nexport class GroupChatRightSideHolderComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() authUser;\r\n    subscriptions: Subscription[] = [];\r\n\r\n    selectedGroupMessages;\r\n\r\n    constructor(private groupsMessagesStore: GroupsMessagesSubjectService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getSelectedGroup();\r\n    }\r\n\r\n    getSelectedGroup() {\r\n        this.subscriptions.push(this.groupsMessagesStore.selectedGroupsMessages$.subscribe((dt: any) => {\r\n            this.selectedGroupMessages = dt;\r\n        }));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n}\r\n\r\n","<div class=\"chat-wrap\" [hidden]=\"\">\r\n    <app-group-chat-top [selectedGroup]=\"selectedGroupMessages\"\r\n                        [authUser]=\"authUser\"></app-group-chat-top>\r\n    <app-group-chat-messages [authUser]=\"authUser\" [selectedGroupMessages]=\"selectedGroupMessages\"></app-group-chat-messages>\r\n</div>\r\n","<ng-container *ngIf=\"authUser\">\r\n    <app-user-tags></app-user-tags>\r\n    <div class=\"page-wrap\" [class.responsive-chat-wrap]=\"mobileHelper.isChatUsersListSize()\">\r\n        <div class=\"left-wrap\"\r\n             [hidden]=\"mobileHelper.isChatUsersListSize() && !isRightWrapHidden()\">\r\n            <div class=\"tab-wrap\">\r\n                <button class=\"tab direct-tab\" [matBadge]=\"newMessagesCountInDirect.toString()\"\r\n                        matBadgePosition=\"before\"\r\n                        [matBadgeHidden]=\"activeTab==='direct' || newMessagesCountInDirect===0 \"\r\n                        [class.active]=\"activeTab=='direct'\" (click)=\"changeTab('direct')\">Chat\r\n                </button>\r\n                <button class=\"tab group-tab\" [matBadge]=\"newMessagesCountInGroups.toString()\"\r\n                        [matBadgeHidden]=\"activeTab==='group' || newMessagesCountInGroups===0 \"\r\n                        [class.active]=\"activeTab==='group'\"\r\n                        (click)=\"changeTab('group')\">Group Chat\r\n                </button>\r\n            </div>\r\n            <div class=\"list-wrap\">\r\n                <app-users-list [authUser]=\"authUser\" *ngIf=\"activeTab==='direct'\"></app-users-list>\r\n                <app-group-chat-left-side-holder [authUser]=\"authUser\"\r\n                                                 *ngIf=\"activeTab=='group'\"></app-group-chat-left-side-holder>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"right-wrap\" [hidden]=\"isRightWrapHidden()\">\r\n            <app-direct-chat-messages [authUser]=\"authUser\" *ngIf=\"activeTab==='direct'\"></app-direct-chat-messages>\r\n            <app-group-chat-right-side-holder [authUser]=\"authUser\"\r\n                                              *ngIf=\"activeTab=='group'\"></app-group-chat-right-side-holder>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {ShowChatroomsComponent} from '@app/chat/show-chatrooms/show-chatrooms.component';\r\nimport {ShowMessagesComponent} from '@app/chat/show-messages/show-messages.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'rooms',\r\n        component: ShowChatroomsComponent,\r\n        data: {\r\n            title: 'Chat rooms',\r\n        }\r\n    },\r\n    {\r\n        path: 'messages',\r\n        component: ShowMessagesComponent,\r\n        data: {\r\n            title: 'Chat',\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ChatRoutingModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ChatService} from '@core/services/chat.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {SocketIoService} from '@core/services/socket-io.service';\r\n\r\nimport {DatePipe} from '@angular/common';\r\nimport {GroupByPipe} from '@shared/pipes/group-by.pipe';\r\nimport {Subscription} from 'rxjs';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {MobileResponsiveHelper} from '@core/helpers/mobile-responsive-helper';\r\nimport {UsersMessagesSubjectService} from '@core/services/stores/users-messages-subject.service';\r\nimport {GroupsMessagesSubjectService} from '@core/services/stores/groups-messages-subject.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-show-messages',\r\n    templateUrl: './show-messages.component.html',\r\n    styleUrls: ['./show-messages.component.scss'],\r\n    providers: [{provide: MobileResponsiveHelper, useClass: MobileResponsiveHelper}]\r\n})\r\nexport class ShowMessagesComponent implements OnInit {\r\n    activeTab = 'direct';\r\n    authUser;\r\n\r\n    groupsMessages = [];\r\n    groupsLoaded = false;\r\n    subscriptions: Subscription[] = [];\r\n    newMessagesCountInGroups = 0;\r\n    newMessagesCountInDirect = 0;\r\n\r\n    constructor(\r\n        private chatService: ChatService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private socketService: SocketIoService,\r\n        public usersMessagesStore: UsersMessagesSubjectService,\r\n        public groupsMessagesStore: GroupsMessagesSubjectService,\r\n        private subject: SubjectService,\r\n        private datePipe: DatePipe,\r\n        private groupBy: GroupByPipe,\r\n        public mobileHelper: MobileResponsiveHelper,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.authUser = this.getAuthUser.transform();\r\n        // this.getGroupsMessages();\r\n    }\r\n\r\n\r\n    changeTab(tab) {\r\n        this.activeTab = tab;\r\n    }\r\n\r\n    getGroupsMessages() {\r\n        this.subscriptions.push(this.chatService.getGroupsMessages({\r\n            user_id: this.authUser.id,\r\n            blocked: 0\r\n        }).subscribe(dt => {\r\n            this.groupsMessages = dt;\r\n            this.groupsLoaded = true;\r\n            const newMessagesSource = dt.filter(fm => fm.new_messages_count > 0);\r\n            // console.log(newMessagesSource)\r\n            this.newMessagesCountInGroups = newMessagesSource.length;\r\n            this.subject.setNewMessagesSourceData({source: newMessagesSource, type: 'group'});\r\n        }));\r\n    }\r\n\r\n    isRightWrapHidden() {\r\n        if (this.mobileHelper.isChatUsersListSize()) {\r\n            return !this.usersMessagesStore.showResponsiveChatBox\r\n                && !this.groupsMessagesStore.showResponsiveChatBox;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {ChatRoutingModule} from './chat-routing.module';\r\nimport {ShowChatroomsComponent} from './show-chatrooms/show-chatrooms.component';\r\nimport {ShowMessagesComponent} from './show-messages/show-messages.component';\r\nimport {SharedModule} from '@shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ShowChatroomsComponent,\r\n        ShowMessagesComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        ChatRoutingModule,\r\n        SharedModule\r\n    ],\r\n    providers: [\r\n    ]\r\n})\r\nexport class ChatModule {\r\n}\r\n"]}