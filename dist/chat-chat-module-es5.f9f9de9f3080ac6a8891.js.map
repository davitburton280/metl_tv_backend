{"version":3,"sources":["webpack:///src/app/chat/show-chatrooms/show-chatrooms.component.ts","webpack:///src/app/shared/components/chat/group-chat/left-side/group-form/group-form.component.ts","webpack:///src/app/shared/components/chat/group-chat/left-side/group-chat-left-side-holder.component.ts","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-avatar-handler/group-avatar-handler.component.ts","webpack:///src/app/chat/show-chatrooms/show-chatrooms.component.html","webpack:///src/app/shared/components/chat/group-chat/left-side/group-form/group-form.component.html","webpack:///src/app/shared/components/chat/group-chat/left-side/group-chat-left-side-holder.component.html","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-avatar-handler/group-avatar-handler.component.html","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-chat-actions/group-chat-actions.component.html","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-chat-actions/group-chat-actions.component.ts","webpack:///src/app/core/components/modals/show-chat-group-members/show-chat-group-members.component.html","webpack:///src/app/core/components/modals/show-chat-group-members/show-chat-group-members.component.ts","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-chat-members/members-list/members-list.component.html","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-chat-members/members-list/members-list.component.ts","webpack:///src/app/core/constants/chat.ts","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-chat-members/members-add-form/members-add-form.component.html","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-chat-members/members-add-form/members-add-form.component.ts","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-chat-members/group-chat-members.component.ts","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-chat-members/group-chat-members.component.html","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-chat-top.component.html","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-top/group-chat-top.component.ts","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-right-side-holder.component.ts","webpack:///src/app/shared/components/chat/group-chat/right-side/group-chat-right-side-holder.component.html","webpack:///src/app/chat/show-messages/show-messages.component.html","webpack:///src/app/chat/chat-routing.module.ts","webpack:///src/app/chat/show-messages/show-messages.component.ts","webpack:///src/app/chat/chat.module.ts"],"names":["ShowChatroomsComponent","GroupFormComponent","GroupChatLeftSideHolderComponent","GroupAvatarHandlerComponent","fb","groupsMessagesStore","showGroupChatForm","this","initForm","groupForm","group","creator_id","authUser","id","name","required","username","valid","setAddGroupFormValue","value","patchValue","shown","addGroup","toggleForm","mobileHelper","provide","useClass","chatService","subscriptions","removeAvatarShown","groupsMessages$","subscribe","dt","e","file","target","files","formData","FormData","append","selectedGroup","avatarInput","nativeElement","push","changeGroupAvatar","setGroupsMessages","find","d","forEach","s","unsubscribe","changeAvatar","GroupChatActionsComponent","socketService","dialog","showMembersForm","open","afterClosed","confirmed","removeGroup","group_id","console","log","initiator","leaveGroup","member_id","leaveChatGroup","from_user","group_type","msg","first_name","last_name","ShowChatGroupMembersComponent","_userInfoService","activeTab","_getAuthInfo","getGroupMembers","_userInfo","data","selectedGroupMessages","chat_group_members","filter","m","chat_groups_members","tab","MembersListComponent","notificationsStore","isEmptyObj","modalMode","onlineMembers","trackGroupChanges","getOnlineMembers","getAcceptedJoinGroup","getDeclinedJoinChatGroup","getRemovedSavedMember","getLeftGroup","getMembersCountDelimiter","onLogout","selectedGroupsMessages$","sGroup","length","member","removeGroupMember","changeGroup","removeFromChatGroup","removeFromChatGroupNotify","leftGroups","selectGroup","getConnectedGroupMembers","group_name","membersOnlineFeedback","members","getAcceptedJoinChatGroup","notification","rest","updateNotifications","leaveChatGroupNotify","user","u","groupMember","groupName","groupsMessages","gm","width","height","GroupChatMembersComponent","MembersAddFormComponent","usersService","userContacts","filteredContacts","inputGroupMembers","groupMembers","memberCtrl","separatorKeysCodes","getUserContacts","getContactsFilteredBySearch","groupChatDetailsForm","member_ids","accepted","user_id","blocked","valueChanges","search","fc","fullNameLowerCased","toLowerCase","includes","option","map","chipsInput","setValue","inviteMembers","inviteToNewChatGroup","invited_members","index","indexOf","splice","autoCompleteMemberSelected","groupChatMessagesStore","GroupChatTopComponent","GroupChatRightSideHolderComponent","groupMessagesStore","transform","showResponsiveChatBox","getSelectedGroup","ShowMessagesComponent","ChatRoutingModule","ChatModule","routes","path","component","title","usersMessagesStore","subject","datePipe","groupBy","groupsLoaded","newMessagesCountInGroups","newMessagesCountInDirect","getGroupsMessages","newMessagesSource","fm","new_messages_count","setNewMessagesSourceData","source","type","isChatUsersListSize","forChild"],"mappings":"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","file":"x","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-show-chatrooms',\r\n  templateUrl: './show-chatrooms.component.html',\r\n  styleUrls: ['./show-chatrooms.component.scss']\r\n})\r\nexport class ShowChatroomsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {GroupsMessagesSubjectService} from '@core/services/stores/groups-messages-subject.service';\r\n\r\n@Component({\r\n    selector: 'app-group-form',\r\n    templateUrl: './group-form.component.html',\r\n    styleUrls: ['./group-form.component.scss']\r\n})\r\nexport class GroupFormComponent implements OnInit {\r\n    groupForm: FormGroup;\r\n    showGroupChatForm = false;\r\n\r\n    @Input() authUser;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private groupsMessagesStore: GroupsMessagesSubjectService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initForm();\r\n    }\r\n\r\n    initForm() {\r\n        this.groupForm = this.fb.group({\r\n            creator_id: [this.authUser.id],\r\n            name: ['', Validators.required],\r\n            username: [this.authUser.username]\r\n        });\r\n    }\r\n\r\n    addGroup() {\r\n        if (this.groupForm.valid) {\r\n            this.groupsMessagesStore.setAddGroupFormValue(this.groupForm.value);\r\n            this.groupForm.patchValue({name: ''});\r\n        }\r\n    }\r\n\r\n    toggleForm(shown: boolean) {\r\n        this.showGroupChatForm = shown;\r\n    }\r\n\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {MobileResponsiveHelper} from '@core/helpers/mobile-responsive-helper';\r\n\r\n@Component({\r\n    selector: 'app-group-chat-left-side-holder',\r\n    templateUrl: './group-chat-left-side-holder.component.html',\r\n    styleUrls: ['./group-chat-left-side-holder.component.scss'],\r\n    providers: [{provide: MobileResponsiveHelper, useClass: MobileResponsiveHelper}]\r\n})\r\nexport class GroupChatLeftSideHolderComponent implements OnInit {\r\n    @Input() authUser;\r\n\r\n    constructor(\r\n        public mobileHelper: MobileResponsiveHelper,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n}\r\n","import {Component, ElementRef, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {ChatService} from '@core/services/chat.service';\r\nimport {GroupsMessagesSubjectService} from '@core/services/stores/groups-messages-subject.service';\r\n\r\n@Component({\r\n    selector: 'app-group-avatar-handler',\r\n    templateUrl: './group-avatar-handler.component.html',\r\n    styleUrls: ['./group-avatar-handler.component.scss']\r\n})\r\nexport class GroupAvatarHandlerComponent implements OnInit, OnDestroy {\r\n    @Input() authUser;\r\n    @Input() selectedGroup;\r\n\r\n    subscriptions: Subscription[] = [];\r\n    removeAvatarShown = false;\r\n\r\n    @ViewChild('avatarInput') avatarInput: ElementRef;\r\n\r\n    constructor(\r\n        private chatService: ChatService,\r\n        private groupsMessagesStore: GroupsMessagesSubjectService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.groupsMessagesStore.groupsMessages$.subscribe(dt => {\r\n            // console.log('groups changed', dt)\r\n            // this.selectedGroup = this.groupsMessagesStore.selectedGroupMessages || dt[0];\r\n            // console.log(this.groupsMessagesStore.selectedGroupMessages)\r\n        });\r\n    }\r\n\r\n    changeAvatar(e = null) {\r\n        const file = e?.target.files[0];\r\n\r\n        const formData = new FormData();\r\n        formData.append('avatar', file?.name || '');\r\n        formData.append('group_id', this.selectedGroup.id);\r\n        formData.append('member_id', this.authUser.id);\r\n\r\n        if (file) {\r\n            formData.append('group_avatar_file', file);\r\n        } else {\r\n            this.avatarInput.nativeElement.value = '';\r\n        }\r\n\r\n        this.subscriptions.push(this.chatService.changeGroupAvatar(formData).subscribe(dt => {\r\n            // console.log(dt.find(d => this.selectedGroup.id === d.id))\r\n            // this.groupsMessagesStore.changeGroup(dt.find(d => this.selectedGroup.id === d.id));\r\n            this.groupsMessagesStore.setGroupsMessages(dt);\r\n            // console.log(this.groupsMessagesStore.selectedGroupMessages)\r\n            this.selectedGroup = dt.find(d => this.selectedGroup.id === d.id)\r\n            // console.log(this.selectedGroup)\r\n            // this.groupsMessagesStore.selectGroup(this.selectedGroup);\r\n        }));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n\r\n}\r\n","<div class=\"chatrooms-list\">\r\n<!--    <h1>Chat Rooms</h1>-->\r\n\r\n    <div class=\"create-post\">\r\n        <div class=\"img\">\r\n            <img src=\"assets/img/item-4.png\" alt=\"\">\r\n            <span>Create Post</span>\r\n        </div>\r\n        <div class=\"select\">\r\n            <select name=\"\" id=\"\">\r\n                <option value=\"\">Choose community</option>\r\n                <option value=\"\">option</option>\r\n            </select>\r\n        </div>\r\n\r\n        <div class=\"input\">\r\n            <input placeholder=\"Title\" type=\"text\">\r\n        </div>\r\n\r\n        <label class=\"add-photo\">\r\n            <input type=\"file\">\r\n            <span class=\"material-icons\">image</span>\r\n            Add Photo or Video\r\n        </label>\r\n\r\n        <div class=\"btn\">\r\n            <button class=\"post\">Post</button>\r\n        </div>\r\n    </div>\r\n\r\n    <ul class=\"categories\">\r\n        <li><a class=\"active\"><span class=\"material-icons\">whatshot</span>Hot</a></li>\r\n        <li><a><span class=\"material-icons\">new_releases</span>New</a></li>\r\n        <li><a><span class=\"material-icons\">trending_up</span>Top</a></li>\r\n        <li><a><span class=\"material-icons\">new_releases</span>Best of the week</a></li>\r\n    </ul>\r\n\r\n    <div class=\"search\">\r\n        <input placeholder=\"Search\" type=\"text\">\r\n        <span class=\"material-icons\">search</span>\r\n    </div>\r\n\r\n    <div class=\"chatrooms-items\">\r\n        <div class=\"item\">\r\n            <div class=\"posted\">\r\n                <p>Posted by<span>u/alotasalad</span></p>\r\n                <p>4 minutes ago</p>\r\n            </div>\r\n\r\n            <div class=\"info\">\r\n                <div class=\"left-wrap\">\r\n                    <div class=\"voting-container\">\r\n                        <button class=\"vote-up-btn active\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                        <div class=\"vote-count\">50k</div>\r\n                        <button class=\"vote-down-btn\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-wrap\">\r\n                    <p>This is my friends loss but to make matters even worse he borrowed the money from his Nigerian\r\n                        boss and yolod everything on fds otw up and down did I forget to mention that 4K in the the\r\n                        account right now is also his bosses money 💰</p>\r\n\r\n                    <img src=\"assets/img/jp-valeryunsplash.png\" alt=\"\">\r\n\r\n                    <div class=\"post-menu\">\r\n                        <div class=\"menu\">\r\n                            <a href=\"\"><span class=\"material-icons\">chat_bubble</span>Comments</a>\r\n                            <a href=\"\"><span class=\"material-icons\">share</span>Share</a>\r\n                        </div>\r\n                        <div class=\"dotes\"><span class=\"material-icons\">more_vert</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"item\">\r\n            <div class=\"posted\">\r\n                <p>Posted by<span>u/alotasalad</span></p>\r\n                <p>4 minutes ago</p>\r\n            </div>\r\n\r\n            <div class=\"info\">\r\n                <div class=\"left-wrap\">\r\n                    <div class=\"voting-container\">\r\n                        <button class=\"vote-up-btn active\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                        <div class=\"vote-count\">50k</div>\r\n                        <button class=\"vote-down-btn\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-wrap\">\r\n                    <p>This is my friends loss but to make matters even worse he borrowed the money from his Nigerian\r\n                        boss and yolod everything on fds otw up and down did I forget to mention that 4K in the the\r\n                        account right now is also his bosses money 💰</p>\r\n\r\n                    <img src=\"assets/img/jp-valeryunsplash.png\" alt=\"\">\r\n\r\n                    <div class=\"post-menu\">\r\n                        <div class=\"menu\">\r\n                            <a href=\"\"><span class=\"material-icons\">chat_bubble</span>Comments</a>\r\n                            <a href=\"\"><span class=\"material-icons\">share</span>Share</a>\r\n                        </div>\r\n                        <div class=\"dotes\"><span class=\"material-icons\">more_vert</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"item\">\r\n            <div class=\"posted\">\r\n                <p>Posted by<span>u/alotasalad</span></p>\r\n                <p>4 minutes ago</p>\r\n            </div>\r\n\r\n            <div class=\"info\">\r\n                <div class=\"left-wrap\">\r\n                    <div class=\"voting-container\">\r\n                        <button class=\"vote-up-btn active\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                        <div class=\"vote-count\">50k</div>\r\n                        <button class=\"vote-down-btn\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-wrap\">\r\n                    <p>This is my friends loss but to make matters even worse he borrowed the money from his Nigerian\r\n                        boss and yolod everything on fds otw up and down did I forget to mention that 4K in the the\r\n                        account right now is also his bosses money 💰</p>\r\n\r\n                    <img src=\"assets/img/jp-valeryunsplash.png\" alt=\"\">\r\n\r\n                    <div class=\"post-menu\">\r\n                        <div class=\"menu\">\r\n                            <a href=\"\"><span class=\"material-icons\">chat_bubble</span>Comments</a>\r\n                            <a href=\"\"><span class=\"material-icons\">share</span>Share</a>\r\n                        </div>\r\n                        <div class=\"dotes\"><span class=\"material-icons\">more_vert</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"item\">\r\n            <div class=\"posted\">\r\n                <p>Posted by<span>u/alotasalad</span></p>\r\n                <p>4 minutes ago</p>\r\n            </div>\r\n\r\n            <div class=\"info\">\r\n                <div class=\"left-wrap\">\r\n                    <div class=\"voting-container\">\r\n                        <button class=\"vote-up-btn active\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                        <div class=\"vote-count\">50k</div>\r\n                        <button class=\"vote-down-btn\">\r\n                            <span class=\"material-icons\">forward</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-wrap\">\r\n                    <p>This is my friends loss but to make matters even worse he borrowed the money from his Nigerian\r\n                        boss and yolod everything on fds otw up and down did I forget to mention that 4K in the the\r\n                        account right now is also his bosses money 💰</p>\r\n\r\n                    <img src=\"assets/img/jp-valeryunsplash.png\" alt=\"\">\r\n\r\n                    <div class=\"post-menu\">\r\n                        <div class=\"menu\">\r\n                            <a href=\"\"><span class=\"material-icons\">chat_bubble</span>Comments</a>\r\n                            <a href=\"\"><span class=\"material-icons\">share</span>Share</a>\r\n                        </div>\r\n                        <div class=\"dotes\"><span class=\"material-icons\">more_vert</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","<form [formGroup]=\"groupForm\" id=\"group-form\" [hidden]=\"!showGroupChatForm\">\r\n    <input formControlName=\"name\" placeholder=\"Group name\">\r\n    <button mat-icon-button (click)=\"addGroup()\">\r\n        <mat-icon>done</mat-icon>\r\n    </button>\r\n    <button mat-icon-button (click)=\"toggleForm(false)\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</form>\r\n<button class=\"create-group-chat\" [hidden]=\"showGroupChatForm\" (click)=\"toggleForm(true)\">\r\n    <img src=\"assets/img/noun_create.png\" alt=\"show-group-form-btn\"> Create new group\r\n</button>\r\n","<div class=\"people-groups-container\"\r\n     [class.responsive-list]=\"mobileHelper.isChatUsersListSize()\">\r\n    <div id=\"group-form-container\">\r\n        <app-group-form [authUser]=\"authUser\"></app-group-form>\r\n    </div>\r\n    <app-groups-list [authUser]=\"authUser\"></app-groups-list>\r\n</div>\r\n","<div class=\"left\">\r\n    <div class=\"group-avatar-wrap\" (mouseenter)=\"removeAvatarShown = true\"\r\n         (mouseleave)=\"removeAvatarShown = false\">\r\n\r\n        <label for=\"group-avatar-input\">\r\n            <img class=\"img group-avatar\" [src]=\"selectedGroup?.avatar|getImgPath:'group_avatars'\">\r\n        </label>\r\n        <mat-icon id=\"remove-group-avatar\" (click)=\"changeAvatar()\"\r\n                  [hidden]=\"!removeAvatarShown || !selectedGroup?.avatar\">cancel\r\n        </mat-icon>\r\n    </div>\r\n    <input id=\"group-avatar-input\" type=\"file\" #avatarInput [hidden]=\"true\" (change)=\"changeAvatar($event)\">\r\n    <div class=\"group-name\">{{selectedGroup?.name}}</div>\r\n</div>\r\n","<div class=\"right\">\r\n    <button mat-icon-button [disableRipple]=\"true\" (click)=\"toggleMembersForm()\"\r\n            *ngIf=\"authUser.id === selectedGroup?.creator_id\">\r\n        <i class=\"fas fa-user-plus\"></i>\r\n    </button>\r\n    <div class=\"remove\" (click)=\"removeGroup()\" *ngIf=\"authUser.id === selectedGroup?.creator_id\">\r\n        <a><i class=\"fas fa-trash\"></i></a>\r\n    </div>\r\n\r\n    <div class=\"more-actions\" *ngIf=\"authUser.id !== selectedGroup?.creator_id\">\r\n\r\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" class=\"dotes\" [disableRipple]=\"true\">\r\n            <i class=\"fas fa-ellipsis-v\"></i>\r\n        </button>\r\n        <mat-menu #menu=\"matMenu\">\r\n            <!--        <button mat-menu-item (click)=\"showMembersInput = !showMembersInput\">-->\r\n            <!--            Add members-->\r\n            <!--        </button>-->\r\n            <button mat-menu-item (click)=\"leaveGroup()\">\r\n                Leave group\r\n            </button>\r\n        </mat-menu>\r\n    </div>\r\n</div>\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {ConfirmationDialogComponent} from '@core/components/modals/confirmation-dialog/confirmation-dialog.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {Subscription} from 'rxjs';\r\nimport {ChatService} from '@core/services/chat.service';\r\nimport {SocketIoService} from '@core/services/socket-io.service';\r\nimport {GroupsMessagesSubjectService} from '@core/services/stores/groups-messages-subject.service';\r\n\r\n@Component({\r\n    selector: 'app-group-chat-actions',\r\n    templateUrl: './group-chat-actions.component.html',\r\n    styleUrls: ['./group-chat-actions.component.scss']\r\n})\r\nexport class GroupChatActionsComponent implements OnInit, OnDestroy {\r\n    @Input() authUser;\r\n    @Input() selectedGroup;\r\n\r\n    subscriptions: Subscription[] = [];\r\n\r\n    constructor(\r\n        private chatService: ChatService,\r\n        private socketService: SocketIoService,\r\n        private groupsMessagesStore: GroupsMessagesSubjectService,\r\n        private dialog: MatDialog\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    toggleMembersForm() {\r\n        this.groupsMessagesStore.showMembersForm = !this.groupsMessagesStore.showMembersForm;\r\n    }\r\n\r\n    removeGroup() {\r\n        this.subscriptions.push(this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed) {\r\n                this.chatService.removeGroup({group_id: this.selectedGroup.id}).subscribe(dt => {\r\n                    console.log(dt)\r\n                    this.socketService.removeGroup({group: this.selectedGroup, initiator: this.authUser});\r\n                    this.groupsMessagesStore.setGroupsMessages(dt);\r\n                    this.selectedGroup = null;\r\n                });\r\n            }\r\n        }));\r\n    }\r\n\r\n    leaveGroup() {\r\n        this.subscriptions.push(this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed && this.selectedGroup) {\r\n                this.chatService.leaveGroup({\r\n                    member_id: this.authUser.id,\r\n                    group_id: this.selectedGroup.id,\r\n                }).subscribe(dt => {\r\n                    console.log('leave group', dt, this.selectedGroup)\r\n                    this.groupsMessagesStore.setGroupsMessages(dt);\r\n                    this.socketService.leaveChatGroup({\r\n                        group: this.selectedGroup,\r\n                        from_user: this.authUser,\r\n                        group_type: 'chat',\r\n                        msg: `<strong>${this.authUser.first_name + ' ' + this.authUser.last_name}</strong> has left the <strong>${this.selectedGroup.name}</strong> group`\r\n                    });\r\n                    this.selectedGroup = null;\r\n                });\r\n            }\r\n        }));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n}\r\n","<div class=\"group-members-wrap\">\r\n    <h1>\r\n        <span class=\"group-name\">{{selectedGroup.name}}</span> members\r\n    </h1>\r\n\r\n    <ul class=\"nav nav-tabs\" id=\"member-tabs-list\" role=\"tablist\">\r\n        <li class=\"nav-item\" *ngFor=\"let tab of ['All members','Admins'];\">\r\n            <a class=\"nav-link\" [class.active]=\"tab === activeTab\" id=\"{{tab}}-tab\"\r\n               (click)=\"changeActiveTab(tab)\" data-toggle=\"tab\" role=\"tab\"\r\n               aria-controls=\"pWatch\"\r\n               aria-selected=\"true\">{{tab}}</a>\r\n        </li>\r\n    </ul>\r\n\r\n    <div class=\"members\">\r\n        <ul>\r\n            <li *ngFor=\"let member of getOnlyJoinedMembers()\">\r\n                <div class=\"details\">\r\n                    <img class=\"avatar\" [src]=\"member.avatar|getImgPath: 'images'\">\r\n                    <span>{{member.first_name + ' ' + member.last_name}}</span>\r\n                </div>\r\n\r\n                <div class=\"actions\">\r\n                    <button [matMenuTriggerFor]=\"menu\" class=\"more-actions-btn\">\r\n                        <i class=\"fas fa-ellipsis-h\"></i>\r\n                    </button>\r\n\r\n                    <mat-menu #menu=\"matMenu\">\r\n\r\n                        <button mat-menu-item id=\"view-profile\">\r\n                            <i class=\"fas fa-times-circle\"></i>\r\n                            <span>View profile</span>\r\n                        </button>\r\n                        <button mat-menu-item id=\"make-admin\">\r\n                            <i class=\"fas fa-times-circle\"></i>\r\n                            <span>Make admin</span>\r\n                        </button>\r\n                    </mat-menu>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n        <!--            <app-group-members-list [selectedGroup]=\"selectedGroup\" [modalMode]=\"true\"-->\r\n        <!--                              [authUser]=\"authUser\"></app-group-members-list>-->\r\n    </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {GroupsMessagesSubjectService} from '@core/services/stores/groups-messages-subject.service';\r\nimport {CurrentUserData} from '@core/interfaces';\r\nimport {UserInfoService} from '@core/services/user-info.service';\r\n\r\n@Component({\r\n    selector: 'app-show-chat-group-members',\r\n    templateUrl: './show-chat-group-members.component.html',\r\n    styleUrls: ['./show-chat-group-members.component.scss']\r\n})\r\nexport class ShowChatGroupMembersComponent implements OnInit {\r\n    selectedGroup;\r\n    authUser: CurrentUserData;\r\n\r\n    activeTab = 'All members';\r\n\r\n    constructor(\r\n        private groupsMessagesStore: GroupsMessagesSubjectService,\r\n        // private getAuthUser: GetAuthUserPipe\r\n        private _userInfoService: UserInfoService\r\n    ) {\r\n        this._getAuthInfo();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // this.authUser = this.getAuthUser.transform();\r\n        this.getGroupMembers();\r\n    }\r\n\r\n    private _getAuthInfo() {\r\n        this._userInfoService._userInfo.subscribe((data) => {\r\n            this.authUser = data;\r\n            console.log(this.authUser, 'Show Chat Group members  AUTHUSER DATA');\r\n        });\r\n    }\r\n\r\n    getGroupMembers() {\r\n        this.selectedGroup = this.groupsMessagesStore.selectedGroupMessages;\r\n    }\r\n\r\n    getOnlyJoinedMembers() {\r\n        return this.selectedGroup.chat_group_members.filter(m => m.chat_groups_members.confirmed);\r\n    }\r\n\r\n    changeActiveTab(tab) {\r\n        this.activeTab = tab;\r\n    }\r\n\r\n}\r\n","<div class=\"members-list\" *ngIf=\"selectedGroup.chat_group_members?.length > 0\">\r\n    <ul>\r\n        <li class=\"group-member\"\r\n            *ngFor=\"let m of selectedGroup.chat_group_members| slice:0: getMembersCountDelimiter(); let i=index\"\r\n            [class.modal-mode]=\"modalMode\"\r\n            [class.pending]=\"!m.chat_groups_members.accepted\">\r\n\r\n            <div class=\"avatar-status-wrap\">\r\n                <img class=\"avatar\" [matTooltip]=\"m.first_name+ ' '+m.last_name\"\r\n                     [src]=\"m.avatar|getImgPath: 'images'\">\r\n                <mat-icon *ngIf=\"ifRemoveMemberShown(m)\" (click)=\"removeSavedMember(m)\">cancel</mat-icon>\r\n                <div class=\"status\" [ngClass]=\"getUserCurrentStatus(m) ? 'online':'offline'\"></div>\r\n            </div>\r\n\r\n            <ng-container *ngIf=\"modalMode\">\r\n                <div class=\"member-name\">\r\n                    <span>{{m.first_name + ' ' + m.last_name}}</span>\r\n                </div>\r\n                <div class=\"actions\">\r\n                    <i class=\"fa fa-ban\" *ngIf=\"m.id !== selectedGroup?.creator_id\"\r\n                       (click)=\"removeSavedMember(m)\"></i>\r\n                </div>\r\n            </ng-container>\r\n        </li>\r\n    </ul>\r\n    <button id=\"show-more-members\" (click)=\"openAllMembersModal()\" [name]=\"selectedGroup.name\" *ngIf=\"!modalMode\">\r\n        <i class=\"fas fa-ellipsis-h\"></i>\r\n    </button>\r\n</div>\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {ConfirmationDialogComponent} from '@core/components/modals/confirmation-dialog/confirmation-dialog.component';\r\nimport {Subscription} from 'rxjs';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {ChatService} from '@core/services/chat.service';\r\nimport {ShowChatGroupMembersComponent} from '@core/components/modals/show-chat-group-members/show-chat-group-members.component';\r\nimport {GroupsMessagesSubjectService} from '@core/services/stores/groups-messages-subject.service';\r\nimport {ALLOWED_GROUP_MEMBERS_COUNT_ON_TOP} from '@core/constants/chat';\r\nimport {SocketIoService} from '@core/services/socket-io.service';\r\nimport {NotificationsSubjectStoreService} from '@core/services/stores/notifications-subject-store.service';\r\nimport {User} from '@shared/models/user';\r\nimport {CheckForEmptyObjectPipe} from '@shared/pipes/check-for-empty-object.pipe';\r\n\r\n@Component({\r\n    selector: 'app-members-list',\r\n    templateUrl: './members-list.component.html',\r\n    styleUrls: ['./members-list.component.scss'],\r\n})\r\nexport class MembersListComponent implements OnInit, OnDestroy {\r\n    @Input() selectedGroup;\r\n    @Input() authUser;\r\n    @Input() modalMode = false;\r\n\r\n    onlineMembers = [];\r\n    subscriptions: Subscription[] = [];\r\n\r\n    membersCountLimit;\r\n\r\n\r\n    constructor(\r\n        private dialog: MatDialog,\r\n        private chatService: ChatService,\r\n        private socketService: SocketIoService,\r\n        private groupsMessagesStore: GroupsMessagesSubjectService,\r\n        private notificationsStore: NotificationsSubjectStoreService,\r\n        private isEmptyObj: CheckForEmptyObjectPipe\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.trackGroupChanges();\r\n        this.getOnlineMembers();\r\n        this.getAcceptedJoinGroup();\r\n        this.getDeclinedJoinChatGroup();\r\n        this.getRemovedSavedMember();\r\n        this.getLeftGroup();\r\n        this.getMembersCountDelimiter();\r\n        this.onLogout();\r\n    }\r\n\r\n    trackGroupChanges() {\r\n        this.subscriptions.push(this.groupsMessagesStore.selectedGroupsMessages$.subscribe((sGroup: any) => {\r\n            this.selectedGroup = sGroup;\r\n            // console.log(sGroup)\r\n            this.getOnlineMembers();\r\n        }));\r\n    }\r\n\r\n    getMembersCountDelimiter() {\r\n        return this.modalMode ? this.selectedGroup.chat_group_members.length : ALLOWED_GROUP_MEMBERS_COUNT_ON_TOP;\r\n    }\r\n\r\n    removeSavedMember(member) {\r\n        this.subscriptions.push(this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed) {\r\n                this.chatService.removeGroupMember({\r\n                    group_id: this.selectedGroup.id,\r\n                    member_id: member.id\r\n                }).subscribe(dt => {\r\n                    this.selectedGroup = dt;\r\n                    this.groupsMessagesStore.changeGroup(this.selectedGroup);\r\n                    this.socketService.removeFromChatGroup({\r\n                        member,\r\n                        from_user: this.authUser,\r\n                        group: this.selectedGroup,\r\n                        msg: `<strong>${this.authUser.first_name + ' ' + this.authUser.last_name}</strong> removed  <strong>${member.first_name + ' ' + member.last_name}</strong>\r\n                       from <strong>${this.selectedGroup.name}</strong> group`,\r\n                    });\r\n                });\r\n            }\r\n        }));\r\n    }\r\n\r\n    getRemovedSavedMember() {\r\n        this.subscriptions.push(this.socketService.removeFromChatGroupNotify().subscribe((data: any) => {\r\n            const {group, member, leftGroups} = data;\r\n            // console.log('removed from group', data)\r\n            // this.notificationsStore.updateNotifications(data);\r\n            if (member.id === this.authUser.id) {\r\n                this.groupsMessagesStore.setGroupsMessages(leftGroups);\r\n                this.groupsMessagesStore.selectGroup({});\r\n            } else {\r\n                // console.log(group)\r\n                this.groupsMessagesStore.changeGroup(group);\r\n                // console.log(this.groupsMessagesStore.selectedGroupMessages)\r\n                // console.log(this.groupsMessagesStore.groupsMessages)\r\n            }\r\n        }));\r\n    }\r\n\r\n    getOnlineMembers() {\r\n        // console.log(this.selectedGroup.name)\r\n        this.socketService.getConnectedGroupMembers({\r\n            group_name: this.selectedGroup.name,\r\n            username: this.authUser.username\r\n        });\r\n\r\n        this.subscriptions.push(this.socketService.membersOnlineFeedback().subscribe((dt: any) => {\r\n            const {group, members} = dt;\r\n            // console.log('online members', dt)\r\n            // console.log('selected group', this.selectedGroup.name)\r\n            // console.log('group', group)\r\n            if (group === this.selectedGroup.name) {\r\n                this.onlineMembers = members;\r\n            }\r\n        }));\r\n    }\r\n\r\n    getAcceptedJoinGroup() {\r\n        this.subscriptions.push(this.socketService.getAcceptedJoinChatGroup().subscribe((data: any) => {\r\n            const {notification, rest} = data;\r\n            console.log('accepted in members list', data)\r\n            // console.log(this.notificationsStore.allNotifications)\r\n            if (notification.from_user.id !== this.authUser.id) {\r\n                this.notificationsStore.updateNotifications(notification);\r\n            }\r\n            // console.log(this.notificationsStore.allNotifications)\r\n            this.groupsMessagesStore.changeGroup(rest.group);\r\n        }));\r\n    }\r\n\r\n    getDeclinedJoinChatGroup() {\r\n        this.subscriptions.push(this.socketService.getDeclinedJoinChatGroup().subscribe((data: any) => {\r\n            const {group, notification} = data;\r\n            console.log('declined', data);\r\n            if (data.from_user.id === this.authUser.id) {\r\n                this.groupsMessagesStore.selectGroup({});\r\n            } else {\r\n                this.notificationsStore.updateNotifications(notification);\r\n                this.groupsMessagesStore.changeGroup(group);\r\n            }\r\n        }));\r\n    }\r\n\r\n    getLeftGroup() {\r\n        this.subscriptions.push(this.socketService.leaveChatGroupNotify().subscribe((data: any) => {\r\n            const {group} = data;\r\n            console.log(data)\r\n            if (data.from_user.id === this.authUser.id) {\r\n                this.groupsMessagesStore.selectGroup({});\r\n            } else {\r\n                this.notificationsStore.updateNotifications(data);\r\n                this.groupsMessagesStore.changeGroup(group);\r\n            }\r\n        }));\r\n    }\r\n\r\n    onLogout() {\r\n        this.socketService.onLogout().subscribe((user: User) => {\r\n            this.onlineMembers = this.onlineMembers.filter(u => u !== user.username);\r\n            // console.log('logout', this.onlineMembers)\r\n        });\r\n    }\r\n\r\n    getUserCurrentStatus(groupMember) {\r\n        const groupName = this.groupsMessagesStore.groupsMessages.find(gm => gm.id === groupMember?.chat_groups_members?.group_id)?.name;\r\n        if (this.onlineMembers && groupName === this.selectedGroup?.name) {\r\n            return !!this.onlineMembers.find(m => groupMember.username === m);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    openAllMembersModal() {\r\n        this.subscriptions.push(this.dialog.open(ShowChatGroupMembersComponent, {\r\n            width: '500px',\r\n            height: '600px',\r\n        }).afterClosed().subscribe(dt => {\r\n\r\n        }));\r\n    }\r\n\r\n    ifRemoveMemberShown(m) {\r\n        return this.authUser.id === this.selectedGroup?.creator_id\r\n            && m.id !== this.selectedGroup?.creator_id && !this.modalMode;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n}\r\n","export const ALLOWED_GROUP_MEMBERS_COUNT_ON_TOP = 5;\r\n","<form [formGroup]=\"groupChatDetailsForm\" [class.modal-mode]=\"modalMode\">\r\n    <div class=\"member-add\">\r\n        <mat-form-field>\r\n            <mat-chip-list #tagList aria-label=\"Fruit selection\" formControlName=\"member_ids\">\r\n                <mat-chip *ngFor=\"let member of inputGroupMembers\"\r\n                          (removed)=\"removeInputMember(member)\">\r\n                    {{member.first_name + ' ' + member.last_name}}\r\n                    <mat-icon matChipRemove>cancel</mat-icon>\r\n                </mat-chip>\r\n\r\n                <input type=\"text\" #chipsInput\r\n                       placeholder=\"Member name from your contacts\"\r\n                       matInput\r\n                       maxlength=\"10\"\r\n                       [formControl]=\"memberCtrl\"\r\n                       [matChipInputFor]=\"tagList\"\r\n                       [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                       [matAutocomplete]=\"auto\">\r\n            </mat-chip-list>\r\n            <mat-autocomplete #auto=\"matAutocomplete\"\r\n                              (optionSelected)=\"autoCompleteMemberSelected($event)\">\r\n\r\n                <!--                            <mat-optgroup *ngFor=\"let contact of userContacts\" [label]=\"group.name\">-->\r\n                <mat-option *ngFor=\"let contact of filteredContacts\" [value]=\"contact\">\r\n                    {{contact.first_name + ' ' + contact.last_name}}\r\n                </mat-option>\r\n                <!--                            </mat-optgroup>-->\r\n\r\n\r\n            </mat-autocomplete>\r\n\r\n            <mat-hint align=\"end\">Please press 'Enter' after the name</mat-hint>\r\n\r\n        </mat-form-field>\r\n        <button (click)=\"inviteMembers()\">Add</button>\r\n    </div>\r\n</form>\r\n","import {Component, ElementRef, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {ChatService} from '@core/services/chat.service';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport {UsersService} from '@core/services/users.service';\r\nimport {SocketIoService} from '@core/services/socket-io.service';\r\nimport {GroupsMessagesSubjectService} from '@core/services/stores/groups-messages-subject.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-members-add-form',\r\n    templateUrl: './members-add-form.component.html',\r\n    styleUrls: ['./members-add-form.component.scss']\r\n})\r\nexport class MembersAddFormComponent implements OnInit, OnDestroy {\r\n    userContacts = [];\r\n    filteredContacts = [];\r\n\r\n    inputGroupMembers = [];\r\n    groupMembers = [];\r\n\r\n    subscriptions: Subscription[] = [];\r\n\r\n    memberCtrl = new FormControl();\r\n    readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n\r\n    @Input() selectedGroup;\r\n    @Input() authUser;\r\n    @Input() modalMode = false;\r\n    @ViewChild('chipsInput') chipsInput: ElementRef<HTMLInputElement>;\r\n\r\n    groupChatDetailsForm: FormGroup;\r\n\r\n    constructor(\r\n        private dialog: MatDialog,\r\n        private chatService: ChatService,\r\n        private usersService: UsersService,\r\n        private socketService: SocketIoService,\r\n        private groupsMessagesStore: GroupsMessagesSubjectService,\r\n        private fb: FormBuilder\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n\r\n        this.initForm();\r\n\r\n        this.getUserContacts();\r\n        this.getGroupMembers();\r\n        this.getContactsFilteredBySearch();\r\n    }\r\n\r\n    initForm() {\r\n        this.groupChatDetailsForm = this.fb.group({\r\n            group_id: [this.selectedGroup.id],\r\n            member_ids: ['', Validators.required],\r\n            accepted: [0]\r\n        });\r\n    }\r\n\r\n    getGroupMembers() {\r\n        console.log(this.selectedGroup)\r\n        this.groupMembers = this.selectedGroup.chat_group_members;\r\n        this.groupsMessagesStore.selectedGroupsMessages$.subscribe((dt: any) => {\r\n            this.selectedGroup = dt;\r\n            if (this.selectedGroup) {\r\n                this.groupMembers = this.selectedGroup.chat_group_members;\r\n                this.groupChatDetailsForm.patchValue({group_id: this.selectedGroup.id});\r\n            }\r\n        });\r\n    }\r\n\r\n    getUserContacts() {\r\n        this.subscriptions.push(this.usersService.getUserContacts({\r\n            user_id: this.authUser.id,\r\n            blocked: 0\r\n        }).subscribe(dt => {\r\n            this.userContacts = dt;\r\n        }));\r\n    }\r\n\r\n    getContactsFilteredBySearch() {\r\n        this.subscriptions.push(this.memberCtrl.valueChanges.subscribe(search => {\r\n            if (search) {\r\n                console.log(this.userContacts, this.groupMembers)\r\n                this.filteredContacts = this.userContacts.filter(fc => {\r\n                    const fullNameLowerCased = (fc.first_name + ' ' + fc.last_name).toLowerCase();\r\n                    if (fullNameLowerCased.includes(search)) {\r\n                        return !this.groupMembers.find(gm => (gm.first_name + ' ' + gm.last_name).toLowerCase() === fullNameLowerCased);\r\n                    }\r\n                    return false;\r\n                });\r\n            }\r\n        }));\r\n    }\r\n\r\n    autoCompleteMemberSelected(e) {\r\n        const value = e.option.value;\r\n\r\n        if (!this.inputGroupMembers.find(gm => gm.id === value)) {\r\n            this.inputGroupMembers.push(e.option.value);\r\n            this.groupChatDetailsForm.patchValue({member_ids: this.inputGroupMembers.map(gm => gm.id)});\r\n        }\r\n\r\n        // console.log(this.)\r\n\r\n        this.chipsInput.nativeElement.value = '';\r\n        this.memberCtrl.setValue('');\r\n    }\r\n\r\n    inviteMembers() {\r\n\r\n        this.chipsInput.nativeElement.value = '';\r\n        this.memberCtrl.setValue('');\r\n        this.subscriptions.push(this.chatService.inviteMembers(this.groupChatDetailsForm.value).subscribe(dt => {\r\n            this.groupMembers = dt?.chat_group_members;\r\n            this.selectedGroup = dt;\r\n            this.socketService.inviteToNewChatGroup({\r\n                invited_members: this.inputGroupMembers,\r\n                from_user: this.authUser,\r\n                group: this.selectedGroup,\r\n                group_type: 'chat',\r\n                msg: `<strong>${this.authUser.first_name + ' ' + this.authUser.last_name}</strong> has sent an invitation to join the <strong>${this.selectedGroup.name}</strong> group`,\r\n            });\r\n            this.groupsMessagesStore.changeGroup(this.selectedGroup);\r\n            console.log(this.groupsMessagesStore.groupsMessages)\r\n            console.log(this.groupsMessagesStore.selectedGroupMessages)\r\n            this.groupsMessagesStore.showMembersForm = false;\r\n            this.inputGroupMembers = [];\r\n        }));\r\n    }\r\n\r\n    removeInputMember(member) {\r\n        const index = this.inputGroupMembers.indexOf(member);\r\n\r\n        if (index >= 0) {\r\n            this.inputGroupMembers.splice(index, 1);\r\n            this.groupChatDetailsForm.patchValue({member_ids: this.inputGroupMembers.map(gm => gm.id)});\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {GroupsMessagesSubjectService} from '@core/services/stores/groups-messages-subject.service';\r\n\r\n@Component({\r\n    selector: 'app-group-chat-members',\r\n    templateUrl: './group-chat-members.component.html',\r\n    styleUrls: ['./group-chat-members.component.scss']\r\n})\r\nexport class GroupChatMembersComponent implements OnInit {\r\n    @Input() authUser;\r\n    @Input() selectedGroup;\r\n\r\n    constructor(\r\n        public groupChatMessagesStore: GroupsMessagesSubjectService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n}\r\n","<app-members-list [selectedGroup]=\"selectedGroup\" [authUser]=\"authUser\" [hidden]=\"groupChatMessagesStore.showMembersForm\"></app-members-list>\r\n<app-members-add-form [selectedGroup]=\"selectedGroup\" [authUser]=\"authUser\" [hidden]=\"!groupChatMessagesStore.showMembersForm\"></app-members-add-form>\r\n","<div class=\"chat-top\" [hidden]=\"isChatTopShown()\">\r\n    <div class=\"chat-about\" *ngIf=\"selectedGroup\">\r\n        <button mat-icon-button *ngIf=\"mobileHelper.isChatUsersListSize()\" (click)=\"backToUsers()\">\r\n            <mat-icon>arrow_back</mat-icon>\r\n        </button>\r\n        <app-group-avatar-handler [selectedGroup]=\"selectedGroup\"\r\n                                  [authUser]=\"authUser\"></app-group-avatar-handler>\r\n        <app-group-chat-members [selectedGroup]=\"selectedGroup\" [authUser]=\"authUser\"\r\n                                *ngIf=\"authUser\"></app-group-chat-members>\r\n        <app-group-chat-actions [selectedGroup]=\"selectedGroup\" [authUser]=\"authUser\"></app-group-chat-actions>\r\n    </div>\r\n</div>\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {ChatService} from '@core/services/chat.service';\r\nimport {SocketIoService} from '@core/services/socket-io.service';\r\nimport {GroupsMessagesSubjectService} from '@core/services/stores/groups-messages-subject.service';\r\nimport {CheckForEmptyObjectPipe} from '@shared/pipes/check-for-empty-object.pipe';\r\nimport {MobileResponsiveHelper} from '@core/helpers/mobile-responsive-helper';\r\n\r\n@Component({\r\n    selector: 'app-group-chat-top',\r\n    templateUrl: './group-chat-top.component.html',\r\n    styleUrls: ['./group-chat-top.component.scss'],\r\n    providers: [{provide: MobileResponsiveHelper, useClass: MobileResponsiveHelper}]\r\n})\r\nexport class GroupChatTopComponent implements OnInit, OnDestroy {\r\n    @Input() authUser;\r\n    @Input() selectedGroup;\r\n\r\n    subscriptions: Subscription[] = [];\r\n\r\n    constructor(\r\n        private chatService: ChatService,\r\n        private socketService: SocketIoService,\r\n        private groupMessagesStore: GroupsMessagesSubjectService,\r\n        private isEmptyObj: CheckForEmptyObjectPipe,\r\n        public mobileHelper: MobileResponsiveHelper,\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    isChatTopShown() {\r\n        return this.isEmptyObj.transform(this.selectedGroup);\r\n    }\r\n\r\n    backToUsers() {\r\n        // this.groupMessagesStore.changeGroup({});\r\n        this.groupMessagesStore.showResponsiveChatBox = false;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n}\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {GroupsMessagesSubjectService} from '@core/services/stores/groups-messages-subject.service';\r\n\r\n@Component({\r\n    selector: 'app-group-chat-right-side-holder',\r\n    templateUrl: './group-chat-right-side-holder.component.html',\r\n    styleUrls: ['./group-chat-right-side-holder.component.scss']\r\n})\r\nexport class GroupChatRightSideHolderComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() authUser;\r\n    subscriptions: Subscription[] = [];\r\n\r\n    selectedGroupMessages;\r\n\r\n    constructor(private groupsMessagesStore: GroupsMessagesSubjectService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getSelectedGroup();\r\n    }\r\n\r\n    getSelectedGroup() {\r\n        this.subscriptions.push(this.groupsMessagesStore.selectedGroupsMessages$.subscribe((dt: any) => {\r\n            this.selectedGroupMessages = dt;\r\n        }));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n}\r\n\r\n","<div class=\"chat-wrap\" [hidden]=\"\">\r\n    <app-group-chat-top [selectedGroup]=\"selectedGroupMessages\"\r\n                        [authUser]=\"authUser\"></app-group-chat-top>\r\n    <app-group-chat-messages [authUser]=\"authUser\" [selectedGroupMessages]=\"selectedGroupMessages\"></app-group-chat-messages>\r\n</div>\r\n","<ng-container *ngIf=\"authUser\">\r\n    <app-user-tags></app-user-tags>\r\n    <div class=\"page-wrap\" [class.responsive-chat-wrap]=\"mobileHelper.isChatUsersListSize()\">\r\n        <div class=\"left-wrap\"\r\n             [hidden]=\"mobileHelper.isChatUsersListSize() && !isRightWrapHidden()\">\r\n            <div class=\"tab-wrap\">\r\n                <button class=\"tab direct-tab\" [matBadge]=\"newMessagesCountInDirect.toString()\"\r\n                        matBadgePosition=\"before\"\r\n                        [matBadgeHidden]=\"activeTab==='direct' || newMessagesCountInDirect===0 \"\r\n                        [class.active]=\"activeTab=='direct'\" (click)=\"changeTab('direct')\">Chat\r\n                </button>\r\n                <button class=\"tab group-tab\" [matBadge]=\"newMessagesCountInGroups.toString()\"\r\n                        [matBadgeHidden]=\"activeTab==='group' || newMessagesCountInGroups===0 \"\r\n                        [class.active]=\"activeTab==='group'\"\r\n                        (click)=\"changeTab('group')\">Group Chat\r\n                </button>\r\n            </div>\r\n            <div class=\"list-wrap\">\r\n                <app-users-list [authUser]=\"authUser\" *ngIf=\"activeTab==='direct'\"></app-users-list>\r\n                <app-group-chat-left-side-holder [authUser]=\"authUser\"\r\n                                                 *ngIf=\"activeTab=='group'\"></app-group-chat-left-side-holder>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"right-wrap\" [hidden]=\"isRightWrapHidden()\">\r\n            <app-direct-chat-messages [authUser]=\"authUser\" *ngIf=\"activeTab==='direct'\"></app-direct-chat-messages>\r\n            <app-group-chat-right-side-holder [authUser]=\"authUser\"\r\n                                              *ngIf=\"activeTab=='group'\"></app-group-chat-right-side-holder>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {ShowChatroomsComponent} from '@app/chat/show-chatrooms/show-chatrooms.component';\r\nimport {ShowMessagesComponent} from '@app/chat/show-messages/show-messages.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'rooms',\r\n        component: ShowChatroomsComponent,\r\n        data: {\r\n            title: 'Chat rooms',\r\n        }\r\n    },\r\n    {\r\n        path: 'messages',\r\n        component: ShowMessagesComponent,\r\n        data: {\r\n            title: 'Chat',\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ChatRoutingModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ChatService} from '@core/services/chat.service';\r\nimport {SocketIoService} from '@core/services/socket-io.service';\r\n\r\nimport {DatePipe} from '@angular/common';\r\nimport {GroupByPipe} from '@shared/pipes/group-by.pipe';\r\nimport {Subscription} from 'rxjs';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {MobileResponsiveHelper} from '@core/helpers/mobile-responsive-helper';\r\nimport {UsersMessagesSubjectService} from '@core/services/stores/users-messages-subject.service';\r\nimport {GroupsMessagesSubjectService} from '@core/services/stores/groups-messages-subject.service';\r\nimport {CurrentUserData} from '@core/interfaces';\r\nimport {UserInfoService} from '@core/services/user-info.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-show-messages',\r\n    templateUrl: './show-messages.component.html',\r\n    styleUrls: ['./show-messages.component.scss'],\r\n    providers: [{provide: MobileResponsiveHelper, useClass: MobileResponsiveHelper}]\r\n})\r\nexport class ShowMessagesComponent implements OnInit {\r\n    activeTab = 'direct';\r\n    authUser: CurrentUserData;\r\n\r\n    groupsMessages = [];\r\n    groupsLoaded = false;\r\n    subscriptions: Subscription[] = [];\r\n    newMessagesCountInGroups = 0;\r\n    newMessagesCountInDirect = 0;\r\n\r\n    constructor(\r\n        private chatService: ChatService,\r\n        // private getAuthUser: GetAuthUserPipe,\r\n        private _userInfoService: UserInfoService,\r\n        private socketService: SocketIoService,\r\n        public usersMessagesStore: UsersMessagesSubjectService,\r\n        public groupsMessagesStore: GroupsMessagesSubjectService,\r\n        private subject: SubjectService,\r\n        private datePipe: DatePipe,\r\n        private groupBy: GroupByPipe,\r\n        public mobileHelper: MobileResponsiveHelper,\r\n    ) {\r\n        this._getAuthInfo();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // this.authUser = this.getAuthUser.transform();\r\n        // this.getGroupsMessages();\r\n    }\r\n\r\n    private _getAuthInfo() {\r\n        this._userInfoService._userInfo.subscribe((data) => {\r\n            this.authUser = data;\r\n            console.log(this.authUser, 'Show Messages  AUTHUSER DATA');\r\n        });\r\n    }\r\n\r\n\r\n    changeTab(tab) {\r\n        this.activeTab = tab;\r\n    }\r\n\r\n    getGroupsMessages() {\r\n        this.subscriptions.push(this.chatService.getGroupsMessages({\r\n            user_id: this.authUser.id,\r\n            blocked: 0\r\n        }).subscribe(dt => {\r\n            this.groupsMessages = dt;\r\n            this.groupsLoaded = true;\r\n            const newMessagesSource = dt.filter(fm => fm.new_messages_count > 0);\r\n            // console.log(newMessagesSource)\r\n            this.newMessagesCountInGroups = newMessagesSource.length;\r\n            this.subject.setNewMessagesSourceData({source: newMessagesSource, type: 'group'});\r\n        }));\r\n    }\r\n\r\n    isRightWrapHidden() {\r\n        if (this.mobileHelper.isChatUsersListSize()) {\r\n            return !this.usersMessagesStore.showResponsiveChatBox\r\n                && !this.groupsMessagesStore.showResponsiveChatBox;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {ChatRoutingModule} from './chat-routing.module';\r\nimport {ShowChatroomsComponent} from './show-chatrooms/show-chatrooms.component';\r\nimport {ShowMessagesComponent} from './show-messages/show-messages.component';\r\nimport {SharedModule} from '@shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ShowChatroomsComponent,\r\n        ShowMessagesComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        ChatRoutingModule,\r\n        SharedModule\r\n    ],\r\n    providers: [\r\n    ]\r\n})\r\nexport class ChatModule {\r\n}\r\n"]}