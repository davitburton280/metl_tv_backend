{"version":3,"sources":["./src/app/core/helpers/normalizeTableColumnName.ts","./src/app/stocks/stock-profile/historical-tab/historical-tab.component.ts","./src/app/stocks/stock-profile/historical-tab/historical-tab.component.html","./src/app/stocks/stock-profile/stock-profile.component.ts","./src/app/stocks/stock-profile/stock-profile.component.html","./src/app/stocks/stock-profile/summary-tab/summary-tab.component.ts","./src/app/stocks/stock-profile/summary-tab/summary-tab.component.html","./src/app/stocks/stocks-routing.module.ts","./src/app/stocks/stocks.module.ts"],"names":[],"mappings":"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","file":"stocks-stocks-module-es2015.js","sourcesContent":["function normalizeColName(col): string {\r\n    col = `${col[0].toUpperCase()}${col.slice(1)}`.replace(/([A-Z])/g, ' $1').trim();\r\n    return col.replace(/_/g, ' ');\r\n}\r\n\r\nexport {normalizeColName as normalizeColName};\r\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {StocksService} from '@core/services/stocks.service';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {normalizeColName} from '@core/helpers/normalizeTableColumnName';\nimport {MatPaginator} from '@angular/material/paginator';\n\n@Component({\n    selector: 'app-historical-tab',\n    templateUrl: './historical-tab.component.html',\n    styleUrls: ['./historical-tab.component.scss']\n})\nexport class HistoricalTabComponent implements OnInit {\n    @Input('selectedStock') selectedStock;\n\n    displayedColumns: string[] = ['date', 'price', 'change', 'changePercent', 'open', 'volume'];\n    tableData;\n    paginationValues = [10, 25, 100];\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n\n    constructor(\n        private stocksService: StocksService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.stocksService.getStockHistoricalPrices({stock: this.selectedStock}).subscribe(dt => {\n            this.tableData = new MatTableDataSource(dt.historical);\n            this.tableData.paginator = this.paginator;\n        });\n    }\n\n    normalizeColName(col): string {\n        return normalizeColName(col);\n    }\n\n}\n","<table mat-table [dataSource]=\"tableData\" class=\"mat-elevation-z8\" *ngIf=\"tableData && tableData.data.length\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n    <!-- Symbol Column -->\n    <ng-container *ngFor=\"let col of displayedColumns\">\n        <ng-container [matColumnDef]=\"col\">\n            <th mat-header-cell *matHeaderCellDef> {{normalizeColName(col)}}</th>\n            <td mat-cell *matCellDef=\"let element\"> {{element[col]}} </td>\n        </ng-container>\n    </ng-container>\n\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n<mat-paginator [pageSizeOptions]=\"paginationValues\"\n               [hidden]=\"!tableData?.data.length\"></mat-paginator>\n\n<mat-error *ngIf=\"!tableData?.data.length\">No historical prices found</mat-error>\n","import {Component, OnInit} from '@angular/core';\r\nimport {StocksService} from '@core/services/stocks.service';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-stock-profile',\r\n    templateUrl: './stock-profile.component.html',\r\n    styleUrls: ['./stock-profile.component.scss']\r\n})\r\nexport class StockProfileComponent implements OnInit {\r\n    activeTab = 'summary';\r\n    indices;\r\n    selectedStock;\r\n    stockInfo;\r\n\r\n    multi = [\r\n        {\r\n            name: 'USA',\r\n            series: [\r\n                {\r\n                    name: '1990',\r\n                    value: 250000000\r\n                },\r\n                {\r\n                    name: '2009',\r\n                    value: 109000000\r\n                },\r\n                {\r\n                    name: '2010',\r\n                    value: 309000000\r\n                },\r\n                {\r\n                    name: '2011',\r\n                    value: 311000000\r\n                }\r\n            ]\r\n        }\r\n    ];\r\n    view: any[] = [300, 150];\r\n\r\n    // options\r\n    referenceLines = [\r\n        {\r\n            name: '2009',\r\n            value: 209000000\r\n        }\r\n    ];\r\n\r\n    colorScheme = {\r\n        domain: ['#5AA454', '#E44D25', '#CFC0BB', '#7aa3e5', '#a8385d', '#aae3f5']\r\n    };\r\n\r\n\r\n    constructor(\r\n        private stocksService: StocksService,\r\n        public router: Router,\r\n        private route: ActivatedRoute\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.stocksService.getIndices({}).subscribe(dt => {\r\n            this.indices = dt;\r\n        });\r\n        this.selectedStock = this.route.snapshot?.params?.symbol?.toUpperCase();\r\n    }\r\n\r\n\r\n    changeTab(tab) {\r\n        this.activeTab = tab;\r\n    }\r\n\r\n    openStockProfile(stock) {\r\n        this.router.navigateByUrl('/test', {skipLocationChange: true}).then(async () =>\r\n            await this.router.navigate([`stocks/${stock}/analytics`])\r\n        );\r\n    }\r\n\r\n}\r\n","<div class=\"stock-content\">\r\n    <div class=\"major-indexes\">\r\n        <h2>Major indexes</h2>\r\n\r\n        <div class=\"favorites\">\r\n\r\n            <div class=\"crypto-content\">\r\n                <div class=\"crypto-item\" [class.crypto-item-green]=\"stock.changesPercentage > 0\"\r\n                     *ngFor=\"let stock of indices\" (click)=\"openStockProfile(stock.symbol)\">\r\n                    <p class=\"crypto-text-1\">{{stock.name}}</p>\r\n                    <p class=\"crypto-text-2\"><span class=\"crypto-text-abs\">$</span>{{stock.price}}</p>\r\n                    <div class=\"crypto-block\">\r\n                        <p class=\"crypto-text-1\">{{stock.change}}</p>\r\n                        <p class=\"crypto-text-1\">{{stock.changesPercentage}}%</p>\r\n                    </div>\r\n<!--                    <div class=\"small-chart-container\">-->\r\n<!--                        <ngx-charts-line-chart  [scheme]=\"colorScheme\" [legend]=\"false\"-->\r\n<!--                                               [showXAxisLabel]=\"false\"-->\r\n<!--                                               [showYAxisLabel]=\"false\" [xAxis]=\"true\" [yAxis]=\"true\"-->\r\n<!--                                               [results]=\"multi\"-->\r\n<!--                                               [autoScale]=\"true\"-->\r\n<!--                                               [yAxisTicks]=\"[]\" [xAxisTicks]=\"[]\" [timeline]=\"true\"-->\r\n<!--                                               [referenceLines]=\"referenceLines\" [showRefLines]=\"true\"-->\r\n<!--                                               [showGridLines]=\"true\" [showRefLabels]=\"false\">-->\r\n<!--                        </ngx-charts-line-chart>-->\r\n<!--                    </div>-->\r\n                    <!--                                        <img class=\"crypto-map\" src=\"assets/img/map.png\">-->\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"stock-tabs\" *ngIf=\"selectedStock\">\r\n\r\n        <ul class=\"nav nav-tabs\">\r\n            <li [class.active]=\"activeTab==='summary'\">\r\n                <a data-toggle=\"tab\" (click)=\"changeTab('summary')\">\r\n                    Summary</a></li>\r\n\r\n            <li [class.active]=\"activeTab==='historical'\">\r\n                <a data-toggle=\"tab\" (click)=\"changeTab('historical')\">\r\n                    Historical data</a>\r\n            </li>\r\n        </ul>\r\n\r\n        <div class=\"tab-content\">\r\n\r\n\r\n            <div id=\"summary\">\r\n\r\n                <app-summary-tab [selectedStock]=\"selectedStock\" [hidden]=\"activeTab!=='summary'\"></app-summary-tab>\r\n\r\n            </div>\r\n            <div id=\"historical\">\r\n                <app-historical-tab [selectedStock]=\"selectedStock\"\r\n                                    [hidden]=\"activeTab!=='historical'\"></app-historical-tab>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <mat-error *ngIf=\"!selectedStock\">Please select a stock to view its information</mat-error>\r\n    <!-- <img class=\"stock-content-img\" src=\"assets/img/stock.jpg\"> -->\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {StocksService} from '@core/services/stocks.service';\nimport {normalizeColName} from '@core/helpers/normalizeTableColumnName';\nimport {LoaderService} from '@core/services/loader.service';\n\n@Component({\n    selector: 'app-summary-tab',\n    templateUrl: './summary-tab.component.html',\n    styleUrls: ['./summary-tab.component.scss']\n})\nexport class SummaryTabComponent implements OnInit {\n    // Chart settings\n    chartData: any[];\n    colorScheme = {\n        domain: ['#18B587', '#F53C6F']\n    };\n\n    // Table settings\n    displayedColumns: string[] = ['symbol', 'name', 'price', 'change', 'changesPercentage', 'marketCap', 'open', 'volume'];\n    tableData;\n\n    @Input('selectedStock') selectedStock;\n\n    constructor(\n        private stocksService: StocksService,\n        public loader: LoaderService\n    ) {\n    }\n\n\n    ngOnInit(): void {\n        this.getStockInfo();\n    }\n\n    normalizeColName(col): string {\n        return normalizeColName(col);\n    }\n\n    getStockInfo() {\n        this.loader.dataLoading = true;\n        this.stocksService.getStockChartData({stock: this.selectedStock}).subscribe(dt => {\n            this.chartData = dt.chart;\n            this.tableData = new MatTableDataSource(dt.table);\n            this.loader.dataLoading = false;\n        });\n    }\n\n}\n","<div class=\"table-chart-container\">\n    <div class=\"loader\">\n        <mat-spinner [diameter]=\"50\" *ngIf=\"loader.dataLoading\"></mat-spinner>\n    </div>\n    <ng-container *ngIf=\"chartData && chartData[0].series.length > 0\">\n\n        <div class=\"chart-container\">\n\n            <ngx-charts-area-chart\n                [scheme]=\"colorScheme\"\n                [legend]=\"false\"\n                [showXAxisLabel]=\"false\"\n                [showYAxisLabel]=\"false\"\n                [autoScale]=\"true\"\n                [xAxis]=\"true\"\n                [yAxis]=\"true\"\n                [results]=\"chartData\">\n            </ngx-charts-area-chart>\n        </div>\n        <div class=\"table-container\">\n            <h1 class=\"selected-stock\">{{selectedStock.replace('^', '')}}</h1>\n            <table mat-table [dataSource]=\"tableData\" class=\"mat-elevation-z8\">\n\n                <!--- Note that these columns can be defined in any order.\n                      The actual rendered columns are set as a property on the row definition\" -->\n                <!-- Symbol Column -->\n                <ng-container *ngFor=\"let col of displayedColumns\">\n                    <ng-container [matColumnDef]=\"col\">\n                        <th mat-header-cell *matHeaderCellDef> {{normalizeColName(col)}}</th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element[col]}} </td>\n                    </ng-container>\n                </ng-container>\n\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n        </div>\n    </ng-container>\n</div>\n<mat-error *ngIf=\"(!chartData || chartData[0].series.length === 0) && !loader.dataLoading\">No chart data found\n</mat-error>\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {StockProfileComponent} from '@app/stocks/stock-profile/stock-profile.component';\n\n\nconst routes: Routes = [\n    {\n        path: 'analytics',\n        component: StockProfileComponent,\n        data: {\n            title: 'Stock profile',\n        }\n    },\n    {\n        path: ':symbol/analytics',\n        component: StockProfileComponent,\n        data: {\n            title: 'Stock profile',\n        }\n    },\n\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class StocksRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {StocksRoutingModule} from './stocks-routing.module';\nimport {StockProfileComponent} from '@app/stocks/stock-profile/stock-profile.component';\nimport {SummaryTabComponent} from '@app/stocks/stock-profile/summary-tab/summary-tab.component';\nimport {HistoricalTabComponent} from '@app/stocks/stock-profile/historical-tab/historical-tab.component';\nimport {NgxChartsModule} from '@swimlane/ngx-charts';\nimport {SharedModule} from '@shared/shared.module';\n\n\n@NgModule({\n    declarations: [\n        StockProfileComponent,\n        SummaryTabComponent,\n        HistoricalTabComponent\n    ],\n    imports: [\n        CommonModule,\n        StocksRoutingModule,\n        NgxChartsModule,\n        SharedModule\n    ]\n})\nexport class StocksModule {\n}\n"],"sourceRoot":"webpack:///"}