{"version":3,"sources":["./src/app/core/helpers/normalizeTableColumnName.ts","./src/app/stocks/stock-profile/historical-tab/historical-tab.component.ts","./src/app/stocks/stock-profile/historical-tab/historical-tab.component.html","./src/app/stocks/stock-profile/stock-profile.component.ts","./src/app/stocks/stock-profile/stock-profile.component.html","./src/app/stocks/stock-profile/summary-tab/summary-tab.component.ts","./src/app/stocks/stock-profile/summary-tab/summary-tab.component.html","./src/app/stocks/stocks-routing.module.ts","./src/app/stocks/stocks.module.ts"],"names":[],"mappings":"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","file":"stocks-stocks-module-es2015.js","sourcesContent":["function normalizeColName(col): string {\r\n    col = `${col[0].toUpperCase()}${col.slice(1)}`.replace(/([A-Z])/g, ' $1').trim();\r\n    return col.replace(/_/g, ' ');\r\n}\r\n\r\nexport {normalizeColName as normalizeColName};\r\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {StocksService} from '@core/services/stocks.service';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {normalizeColName} from '@core/helpers/normalizeTableColumnName';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\n\r\n@Component({\r\n    selector: 'app-historical-tab',\r\n    templateUrl: './historical-tab.component.html',\r\n    styleUrls: ['./historical-tab.component.scss']\r\n})\r\nexport class HistoricalTabComponent implements OnInit {\r\n    @Input('selectedStock') selectedStock;\r\n\r\n    displayedColumns: string[] = ['date', 'price', 'change', 'changePercent', 'open', 'volume'];\r\n    tableData;\r\n    paginationValues = [10, 25, 100];\r\n\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n    constructor(\r\n        private stocksService: StocksService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.stocksService.getStockHistoricalPrices({stock: this.selectedStock}).subscribe(dt => {\r\n            this.tableData = new MatTableDataSource(dt.historical);\r\n            this.tableData.paginator = this.paginator;\r\n        });\r\n    }\r\n\r\n    normalizeColName(col): string {\r\n        return normalizeColName(col);\r\n    }\r\n\r\n}\r\n","<table mat-table [dataSource]=\"tableData\" class=\"mat-elevation-z8\" *ngIf=\"tableData && tableData.data.length\">\r\n\r\n    <!--- Note that these columns can be defined in any order.\r\n          The actual rendered columns are set as a property on the row definition\" -->\r\n    <!-- Symbol Column -->\r\n    <ng-container *ngFor=\"let col of displayedColumns\">\r\n        <ng-container [matColumnDef]=\"col\">\r\n            <th mat-header-cell *matHeaderCellDef> {{normalizeColName(col)}}</th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element[col]}} </td>\r\n        </ng-container>\r\n    </ng-container>\r\n\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n</table>\r\n<mat-paginator [pageSizeOptions]=\"paginationValues\"\r\n               [hidden]=\"!tableData?.data.length\"></mat-paginator>\r\n\r\n<mat-error *ngIf=\"!tableData?.data.length\">No historical prices found</mat-error>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {StocksService} from '@core/services/stocks.service';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {SubjectService} from '@core/services/subject.service';\r\n\r\n@Component({\r\n    selector: 'app-stock-profile',\r\n    templateUrl: './stock-profile.component.html',\r\n    styleUrls: ['./stock-profile.component.scss']\r\n})\r\nexport class StockProfileComponent implements OnInit {\r\n    activeTab = 'summary';\r\n    indices;\r\n    selectedStock;\r\n    stockInfo;\r\n    dataLoading = 'idle';\r\n\r\n    constructor(\r\n        private stocksService: StocksService,\r\n        public router: Router,\r\n        private route: ActivatedRoute,\r\n        private subject: SubjectService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.dataLoading = 'loading';\r\n        this.subject.currentIndices.subscribe(dt => {\r\n            if (dt.length > 0) {\r\n                this.dataLoading = 'finished';\r\n                this.indices = dt;\r\n            }\r\n        });\r\n        this.selectedStock = this.route.snapshot?.params?.symbol?.toUpperCase();\r\n    }\r\n\r\n\r\n    changeTab(tab) {\r\n        this.activeTab = tab;\r\n    }\r\n\r\n    openStockProfile(stock) {\r\n        this.router.navigateByUrl('/test', {skipLocationChange: true}).then(async () =>\r\n            await this.router.navigate([`stocks/${stock}/analytics`])\r\n        );\r\n    }\r\n\r\n}\r\n","<div class=\"stock-content\">\r\n    <div class=\"major-indexes\">\r\n        <h2>Major indexes</h2>\r\n        <div class=\"stocks-list-container\">\r\n            <div class=\"spinner-container\">\r\n                <mat-spinner [diameter]=\"25\" *ngIf=\"indices?.length === 0\"></mat-spinner>\r\n            </div>\r\n            <app-stocks-list-sample [stocks]=\"indices\" [followAllowed]=\"false\"></app-stocks-list-sample>\r\n        </div>\r\n    </div>\r\n    <div class=\"stock-tabs\" *ngIf=\"selectedStock\">\r\n\r\n        <ul class=\"nav nav-tabs\">\r\n            <li [class.active]=\"activeTab==='summary'\">\r\n                <a data-toggle=\"tab\" (click)=\"changeTab('summary')\">\r\n                    Summary</a></li>\r\n\r\n            <li [class.active]=\"activeTab==='historical'\">\r\n                <a data-toggle=\"tab\" (click)=\"changeTab('historical')\">\r\n                    Historical data</a>\r\n            </li>\r\n        </ul>\r\n\r\n        <div class=\"tab-content\">\r\n\r\n\r\n            <div id=\"summary\">\r\n\r\n                <app-summary-tab [selectedStock]=\"selectedStock\" [hidden]=\"activeTab!=='summary'\"></app-summary-tab>\r\n\r\n            </div>\r\n            <div id=\"historical\">\r\n                <app-historical-tab [selectedStock]=\"selectedStock\"\r\n                                    [hidden]=\"activeTab!=='historical'\"></app-historical-tab>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <mat-error *ngIf=\"!selectedStock && indices?.length !== 0\">Please select a stock to view its information\r\n    </mat-error>\r\n    <!-- <img class=\"stock-content-img\" src=\"assets/img/stock.jpg\"> -->\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {StocksService} from '@core/services/stocks.service';\r\nimport {normalizeColName} from '@core/helpers/normalizeTableColumnName';\r\nimport {LoaderService} from '@core/services/loader.service';\r\nimport {XAxisTicksComponent} from '@swimlane/ngx-charts';\r\nimport * as moment from 'moment';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {UpdateUserStocksPipe} from '@shared/pipes/update-user-stocks.pipe';\r\nimport {Subscription} from 'rxjs';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\n\r\n@Component({\r\n    selector: 'app-summary-tab',\r\n    templateUrl: './summary-tab.component.html',\r\n    styleUrls: ['./summary-tab.component.scss']\r\n})\r\nexport class SummaryTabComponent implements OnInit {\r\n\r\n    // Chart settings\r\n    chartData: any[];\r\n    colorScheme = {\r\n        domain: ['#18B587', '#F53C6F']\r\n    };\r\n\r\n\r\n    // Table settings\r\n    displayedColumns: string[] = ['symbol', 'name', 'price', 'change', 'changesPercentage', 'marketCap', 'open', 'volume', 'action'];\r\n    tableData;\r\n\r\n    userStocks = [];\r\n\r\n    addedToWatchlist = false;\r\n    subscriptions: Subscription[] = [];\r\n\r\n    authUser;\r\n    stocksUpdatedHere = false;\r\n    processingStock = false;\r\n\r\n    @Input('selectedStock') selectedStock;\r\n\r\n    constructor(\r\n        private stocksService: StocksService,\r\n        public loader: LoaderService,\r\n        private subject: SubjectService,\r\n        private updateStocks: UpdateUserStocksPipe,\r\n        private getAuthUser: GetAuthUserPipe\r\n    ) {\r\n    }\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.getUserStocks();\r\n        this.getStockInfo();\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    getUserStocks() {\r\n        this.subject.currentUserStocks.subscribe(dt => {\r\n            this.userStocks = dt;\r\n            this.addedToWatchlist = !!this.userStocks.find(us => us.symbol === this.selectedStock);\r\n        });\r\n    }\r\n\r\n    getStockInfo() {\r\n        this.loader.dataLoading = true;\r\n        this.stocksService.getStockChartData({stock: this.selectedStock}).subscribe(dt => {\r\n            this.chartData = dt.chart;\r\n            this.tableData = new MatTableDataSource(dt.table);\r\n            this.loader.dataLoading = false;\r\n        });\r\n    }\r\n\r\n    axisFormatting(tick) {\r\n        const xAxisComponent = this as any;\r\n        const ticks = xAxisComponent.ticks;\r\n        const tickPresent = ticks.find((t, i) => t === tick && moment(t, 'HH:mm:ss').minute() % 30 === 0);\r\n        return tickPresent ? moment(tickPresent, 'HH:mm:ss').format('HH:mm A') : '';\r\n    }\r\n\r\n    normalizeColName(col): string {\r\n        return normalizeColName(col);\r\n    }\r\n\r\n\r\n    updateUserStocks(stock) {\r\n        this.processingStock = true;\r\n        const {userStocks, following} = this.updateStocks.transform(this.userStocks, stock, stock.type_id);\r\n        this.addedToWatchlist = following;\r\n        this.loader.show();\r\n        this.subscriptions.push(this.stocksService.updateFollowedStocks({\r\n            user_id: this.authUser.id,\r\n            stocks: userStocks\r\n        }).subscribe(dt => {\r\n            this.processingStock = false;\r\n            this.userStocks = dt?.user_stocks || [];\r\n            this.stocksUpdatedHere = true;\r\n            this.loader.hide();\r\n            this.subject.changeUserStocks(this.userStocks);\r\n        }));\r\n    }\r\n\r\n}\r\n","<div class=\"loader-holder\">\r\n    <mat-spinner [diameter]=\"50\" [hidden]=\"!loader.dataLoading\"></mat-spinner>\r\n</div>\r\n<div class=\"table-chart-container\">\r\n    <ng-container *ngIf=\"chartData && chartData[0].series.length > 0\">\r\n\r\n        <div class=\"chart-container\">\r\n\r\n            <ngx-charts-area-chart\r\n                [scheme]=\"colorScheme\"\r\n                [legend]=\"false\"\r\n                [showXAxisLabel]=\"false\"\r\n                [showYAxisLabel]=\"false\"\r\n                [trimXAxisTicks]=\"false\"\r\n                [maxXAxisTickLength]=\"5\"\r\n                [autoScale]=\"true\"\r\n                [xAxis]=\"true\"\r\n                [yAxis]=\"true\"\r\n                [rotateXAxisTicks]=\"false\"\r\n                [xAxisTickFormatting]=\"axisFormatting\"\r\n                [results]=\"chartData\">\r\n            </ngx-charts-area-chart>\r\n        </div>\r\n        <div class=\"table-container\">\r\n            <h1 class=\"selected-stock\">{{selectedStock.replace('^', '')}}</h1>\r\n            <table mat-table [dataSource]=\"tableData\" class=\"mat-elevation-z8\">\r\n\r\n                <ng-container *ngFor=\"let col of displayedColumns\">\r\n                    <ng-container [matColumnDef]=\"col\">\r\n                        <th mat-header-cell *matHeaderCellDef> {{normalizeColName(col)}}</th>\r\n                        <td mat-cell *matCellDef=\"let element\">\r\n                            <span *ngIf=\"col!=='action'\">{{element[col]}}</span>\r\n                            <div *ngIf=\"col==='action'\" class=\"action-column\">\r\n                                <button id=\"watchlist-act-btn\" (click)=\"updateUserStocks(element)\"\r\n                                        [ngClass]=\"addedToWatchlist? 'red-bg':'green-bg'\"\r\n                                >{{(addedToWatchlist ? 'Remove from' : 'Add to') + ' watchlist'}}</button>\r\n                                <mat-spinner [diameter]=\"15\" *ngIf=\"processingStock\"></mat-spinner>\r\n                            </div>\r\n                        </td>\r\n                    </ng-container>\r\n                </ng-container>\r\n\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n<mat-error *ngIf=\"(!chartData || chartData[0].series.length === 0) && !loader.dataLoading\">No chart data found\r\n</mat-error>\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {StockProfileComponent} from '@app/stocks/stock-profile/stock-profile.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'analytics',\r\n        component: StockProfileComponent,\r\n        data: {\r\n            title: 'Stock profile',\r\n        }\r\n    },\r\n    {\r\n        path: ':symbol/analytics',\r\n        component: StockProfileComponent,\r\n        data: {\r\n            title: 'Stock profile',\r\n        }\r\n    },\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class StocksRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {StocksRoutingModule} from './stocks-routing.module';\r\nimport {StockProfileComponent} from '@app/stocks/stock-profile/stock-profile.component';\r\nimport {SummaryTabComponent} from '@app/stocks/stock-profile/summary-tab/summary-tab.component';\r\nimport {HistoricalTabComponent} from '@app/stocks/stock-profile/historical-tab/historical-tab.component';\r\nimport {NgxChartsModule} from '@swimlane/ngx-charts';\r\nimport {SharedModule} from '@shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        StockProfileComponent,\r\n        SummaryTabComponent,\r\n        HistoricalTabComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        StocksRoutingModule,\r\n        NgxChartsModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class StocksModule {\r\n}\r\n"],"sourceRoot":"webpack:///"}