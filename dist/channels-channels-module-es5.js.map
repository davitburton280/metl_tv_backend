{"version":3,"sources":["webpack:///src/app/channels/channels-routing.module.ts","webpack:///src/app/channels/channels.module.ts","webpack:///src/app/channels/show-channel/about-tab/about-tab.component.ts","webpack:///src/app/channels/show-channel/about-tab/about-tab.component.html","webpack:///src/app/channels/show-channel/channel-profile/channel-profile.component.ts","webpack:///src/app/channels/show-channel/channel-profile/channel-profile.component.html","webpack:///src/app/channels/show-channel/playlists-tab/playlists-tab.component.ts","webpack:///src/app/channels/show-channel/playlists-tab/playlists-tab.component.html","webpack:///src/app/channels/show-channel/show-channel.component.html","webpack:///src/app/channels/show-channel/show-channel.component.ts","webpack:///src/app/channels/show-channel/videos-tab/videos-tab.component.ts","webpack:///src/app/channels/show-channel/videos-tab/videos-tab.component.html","webpack:///src/app/channels/show-channel/watchlist-tab/watchlist-tab.component.ts","webpack:///src/app/channels/show-channel/watchlist-tab/watchlist-tab.component.html","webpack:///src/app/channels/show-subscriptions/show-subscriptions.component.ts","webpack:///src/app/channels/show-subscriptions/show-subscriptions.component.html"],"names":["routes","path","component","data","title","ChannelsRoutingModule","forChild","imports","exports","ChannelsModule","declarations","AboutTabComponent","fb","channelService","getAuthUser","editMode","authUser","transform","aboutForm","group","description","required","maxLength","id","username","patchValue","channelUser","channel","replace","d","valid","saveDescription","value","subscribe","dt","document","querySelector","innerHTML","saveChannelDescription","selector","templateUrl","styleUrls","$event","preventDefault","ChannelProfileComponent","usersService","base64ToFile","subject","loader","apiUrl","subscribedToChannel","subscribersCount","changingImage","channelForm","avatar","cover","name","checkChannelSubscription","event","coverChangedEvent","profileChangedEvent","dataLoading","console","log","profileBase64","base64","filename","Date","now","fd","FormData","append","changeProfileImage","changeAuthUserInfo","coverBase64","changeCoverImage","subscribeToChannel","user_id","channel_id","status","subscribers_count","getUserChannelSubscriptions","setUserSubscriptions","localStorage","setItem","token","changeAuthUser","hasOwnProperty","changeChannelDetails","detectImageChange","PlaylistsTabComponent","router","playlistsService","subjectService","dialog","getExactParams","playlists","showFilters","search","filters","subscriptions","getItem","getPlaylists","getFiltersToggleState","push","getToggleFiltersData","params","get","open","afterClosed","playlist","firstVideoId","route","playlist_id","navigate","queryParams","channelId","confirmed","removePlaylist","ShowChannelComponent","videoService","auth","updateStocks","stocksService","toastr","allTabs","userStocks","filteredStocks","passedUsername","snapshot","passedTab","tab","searchVideosForm","activeTab","filter","tabs","toLowerCase","getUserInfo","currentUserStocks","stocks","setToggleFiltersData","searchVideos","e","watchListTab","getSearchResults","s","searchInVideosByAuthor","searchInUserVideos","searchInPlaylists","videosTab","playlistsTab","tag","maxWidth","maxHeight","height","width","panelClass","stock","length","error","stocksLoading","updateFollowedStocks","user_stocks","changeUserStocks","empty","forEach","unsubscribe","VideosTabComponent","owlOptions","userVideos","videosLoaded","getUserVideos","videos","WatchlistTabComponent","cdr","pipe","initial","us","includes","detectChanges","ShowSubscriptionsComponent","channelsService","getSubscriptions","userChannels","channel_subscribers","subscriber_id"],"mappings":"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","file":"channels-channels-module-es5.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {ShowChannelComponent} from '@app/channels/show-channel/show-channel.component';\r\nimport {ShowSubscriptionsComponent} from '@app/channels/show-subscriptions/show-subscriptions.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'show',\r\n        component: ShowChannelComponent,\r\n        data: {\r\n            title: 'Channel page'\r\n        }\r\n    },\r\n    {\r\n        path: 'subscriptions',\r\n        component: ShowSubscriptionsComponent,\r\n        data: {\r\n            title: 'My Subscriptions'\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ChannelsRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {ChannelsRoutingModule} from './channels-routing.module';\r\nimport {ShowChannelComponent} from './show-channel/show-channel.component';\r\nimport {SharedModule} from '@shared/shared.module';\r\nimport {NgxPhotoEditorModule} from 'ngx-photo-editor';\r\nimport { ShowSubscriptionsComponent } from './show-subscriptions/show-subscriptions.component';\r\nimport { ChannelProfileComponent } from './show-channel/channel-profile/channel-profile.component';\r\nimport { WatchlistTabComponent } from './show-channel/watchlist-tab/watchlist-tab.component';\r\nimport { VideosTabComponent } from './show-channel/videos-tab/videos-tab.component';\r\nimport { PlaylistsTabComponent } from './show-channel/playlists-tab/playlists-tab.component';\r\nimport { AboutTabComponent } from './show-channel/about-tab/about-tab.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [ShowChannelComponent, ShowSubscriptionsComponent, ChannelProfileComponent, WatchlistTabComponent, VideosTabComponent, PlaylistsTabComponent, AboutTabComponent],\r\n    imports: [\r\n        CommonModule,\r\n        ChannelsRoutingModule,\r\n        SharedModule,\r\n        NgxPhotoEditorModule,\r\n    ]\r\n})\r\nexport class ChannelsModule {\r\n}\r\n","import {AfterViewInit, Component, Input, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {DESCRIPTION_CHARACTERS_LIMIT} from '@core/constants/global';\r\n\r\n@Component({\r\n    selector: 'app-about-tab',\r\n    templateUrl: './about-tab.component.html',\r\n    styleUrls: ['./about-tab.component.scss']\r\n})\r\nexport class AboutTabComponent implements OnInit, AfterViewInit {\r\n    aboutForm: FormGroup;\r\n    editMode = false;\r\n    authUser;\r\n    @Input('channelUser') channelUser;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private channelService: ChannelsService,\r\n        private getAuthUser: GetAuthUserPipe\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.aboutForm = this.fb.group({\r\n                description: ['', [Validators.required, Validators.maxLength(DESCRIPTION_CHARACTERS_LIMIT)]],\r\n                id: ['', Validators.required],\r\n                username: ['', Validators.required]\r\n            },\r\n        );\r\n        this.aboutForm.patchValue({\r\n            username: this.channelUser.username,\r\n            id: this.channelUser.channel.id,\r\n            description: this.channelUser.channel.description?.replace(/<br\\s*[\\/]?>/gi, '\\n')\r\n            // ...this.channelUser.channel\r\n        });\r\n\r\n    }\r\n\r\n    editModeOn() {\r\n        this.editMode = true;\r\n    }\r\n\r\n    getDesc(d) {\r\n        return d?.replace('<br>', '');\r\n    }\r\n\r\n    saveChannelDescription() {\r\n        if (this.aboutForm.valid) {\r\n            this.channelService.saveDescription(this.aboutForm.value).subscribe(dt => {\r\n                this.channelUser = dt;\r\n                document.querySelector('.description').innerHTML = this.channelUser.channel.description;\r\n                this.editMode = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        document.querySelector('.description').innerHTML = this.channelUser.channel.description;\r\n    }\r\n\r\n}\r\n","<div class=\"about-tab\">\r\n\r\n\r\n    <div class=\"info\">\r\n        <h2 *ngIf=\"channelUser.channel?.description\">Description</h2>\r\n\r\n        <div class=\"date\">\r\n            <span>Joined {{channelUser.channel.created_at|date: 'd MMM, yyyy'}}</span>\r\n            <button class=\"btn\" (click)=\"editModeOn()\"\r\n                    *ngIf=\"!editMode && authUser.username === channelUser.username\">Edit\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"description\" [hidden]=\"editMode\">\r\n        <p>{{getDesc(channelUser.channel.description)}}</p>\r\n    </div>\r\n\r\n    <div class=\"edit-form-controls\" [hidden]=\"!editMode\">\r\n        <form [formGroup]=\"aboutForm\" id=\"channel-about-form\">\r\n            <textarea rows=\"3\" formControlName=\"description\"></textarea>\r\n\r\n            <button class=\"save\" (click)=\"saveChannelDescription()\">Save</button>\r\n\r\n            <mat-error *ngIf=\"aboutForm.get('description').hasError('maxlength')\">\r\n                Not more than 100 characters please\r\n            </mat-error>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {CroppedEvent} from 'ngx-photo-editor';\r\nimport {UsersService} from '@core/services/users.service';\r\nimport {Base64ToFilePipe} from '@shared/pipes/base64-to-file.pipe';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {LoaderService} from '@core/services/loader.service';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-channel-profile',\r\n    templateUrl: './channel-profile.component.html',\r\n    styleUrls: ['./channel-profile.component.scss']\r\n})\r\nexport class ChannelProfileComponent implements OnInit {\r\n    apiUrl = API_URL;\r\n\r\n    profileChangedEvent: any;\r\n    coverChangedEvent: any;\r\n    profileBase64: any;\r\n    coverBase64: any;\r\n\r\n    subscribedToChannel = false;\r\n    subscribersCount = 0;\r\n\r\n    changingImage = false;\r\n    editMode = false;\r\n\r\n    channelForm: FormGroup;\r\n\r\n    @Input('channelUser') channelUser;\r\n    @Input('authUser') authUser;\r\n\r\n    constructor(\r\n        private usersService: UsersService,\r\n        private base64ToFile: Base64ToFilePipe,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private channelService: ChannelsService,\r\n        private subject: SubjectService,\r\n        public loader: LoaderService,\r\n        private fb: FormBuilder\r\n    ) {\r\n        this.channelForm = this.fb.group({\r\n            id: [''],\r\n            avatar: [''],\r\n            cover: [''],\r\n            name: ['', Validators.required],\r\n            username: ['']\r\n        });\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.channelUser) {\r\n            this.checkChannelSubscription();\r\n            // this.detectImageChange();\r\n            this.channelForm.patchValue({\r\n                name: this.channelUser.channel.name,\r\n                id: this.channelUser.channel.id,\r\n                username: this.channelUser.username,\r\n                avatar: this.channelUser.channel.avatar,\r\n                cover: this.channelUser.channel.cover\r\n            });\r\n        }\r\n    }\r\n\r\n    coverChangeEvent(event: any) {\r\n        this.coverChangedEvent = event;\r\n    }\r\n\r\n    profileChangeEvent(event: any) {\r\n        this.profileChangedEvent = event;\r\n    }\r\n\r\n    detectImageChange() {\r\n        // document.querySelector('img.avatar').addEventListener('load', () => {\r\n        //     console.log('Loading image!!!')\r\n            if (this.profileChangedEvent || this.coverChangedEvent) {\r\n                this.loader.dataLoading = false;\r\n                this.changingImage = false;\r\n                console.log('Avatar changed');\r\n                console.log(this.changingImage);\r\n            }\r\n        // });\r\n    }\r\n\r\n\r\n    profileCropped(event: CroppedEvent) {\r\n        // this.loader.dataLoading = true;\r\n\r\n        this.changingImage = true;\r\n        this.profileBase64 = event.base64;\r\n        const filename = `avatar_${Date.now()}.jpg`;\r\n        const fd = new FormData();\r\n        this.channelForm.patchValue({avatar: filename});\r\n        fd.append('avatar_file', this.base64ToFile.transform(event.base64), filename);\r\n        fd.append('avatar', filename);\r\n        fd.append('id', this.authUser.id);\r\n        this.usersService.changeProfileImage(fd).subscribe((dt) => {\r\n            this.changeAuthUserInfo(dt);\r\n        });\r\n    }\r\n\r\n    coverCropped(event: CroppedEvent) {\r\n        this.coverBase64 = event.base64;\r\n        this.changingImage = true;\r\n        const fd = new FormData();\r\n        const filename = `cover_${Date.now()}.jpg`;\r\n        this.channelForm.patchValue({cover: filename});\r\n        fd.append('cover_file', this.base64ToFile.transform(event.base64), filename);\r\n        fd.append('cover', filename);\r\n        fd.append('id', this.authUser.id);\r\n        this.loader.dataLoading = true;\r\n        this.usersService.changeCoverImage(fd).subscribe((dt) => {\r\n            this.changeAuthUserInfo(dt);\r\n        });\r\n    }\r\n\r\n    removeCover() {\r\n        this.channelUser.channel.cover = '';\r\n        this.channelForm.patchValue({cover: this.channelUser.channel.cover});\r\n    }\r\n\r\n    removeAvatar() {\r\n        this.channelUser.channel.avatar = '';\r\n        this.channelForm.patchValue({avatar: this.channelUser.channel.avatar});\r\n    }\r\n\r\n    subscribeToChannel(channel): void {\r\n        this.channelService.subscribeToChannel({user_id: this.authUser.id, channel_id: channel.id}).subscribe(dt => {\r\n            this.subscribedToChannel = dt.status === 'Subscribed';\r\n            this.subscribersCount = dt.subscribers_count;\r\n            this.channelService.getUserChannelSubscriptions({user_id: this.authUser.id}).subscribe(d => {\r\n                this.subject.setUserSubscriptions(d);\r\n            });\r\n        });\r\n    }\r\n\r\n    checkChannelSubscription() {\r\n        // console.log(this.channelUser)\r\n        this.channelService.checkChannelSubscription({\r\n            user_id: this.authUser.id,\r\n            channel_id: this.channelUser.channel.id\r\n        }).subscribe(dt => {\r\n            this.subscribedToChannel = dt.status === 'Subscribed';\r\n            this.subscribersCount = dt.subscribers_count;\r\n        });\r\n    }\r\n\r\n    changeAuthUserInfo(dt) {\r\n        localStorage.setItem('token', dt.token);\r\n        this.authUser = this.getAuthUser.transform();\r\n        this.channelUser = this.authUser;\r\n        this.changingImage = false;\r\n        this.subject.changeAuthUser((dt.hasOwnProperty('token') ? dt.token : ''));\r\n        // this.loader.dataLoading = false;\r\n        // console.log(this.channelUser)\r\n    }\r\n\r\n    toggleEditMode() {\r\n        this.editMode = !this.editMode;\r\n    }\r\n\r\n\r\n    saveChanges() {\r\n        console.log('save changes!!!')\r\n        console.log(this.channelForm.value)\r\n        console.log('save changes!!!')\r\n\r\n        if (this.channelForm.valid) {\r\n            this.channelService.changeChannelDetails(this.channelForm.value).subscribe((dt => {\r\n                this.editMode = false;\r\n                this.changeAuthUserInfo(dt);\r\n            }));\r\n        }\r\n    }\r\n\r\n}\r\n","<form [formGroup]=\"channelForm\">\r\n    <!--    <ng-container *ngIf=\"channelUser\">-->\r\n    <div class=\"profile-block\">\r\n        <div [hidden]=\"true\" *ngIf=\"channelUser.username === authUser.username\">\r\n            <input type=\"file\" id=\"cover-image-input\" (change)=\"coverChangeEvent($event)\"/>\r\n            <input type=\"hidden\" formControlName=\"cover\">\r\n            <ngx-photo-editor\r\n                [imageChanedEvent]=\"coverChangedEvent\"\r\n                (imageCropped)=\"coverCropped($event)\"\r\n                [autoCrop]=\"false\"\r\n                [viewMode]=\"3\"></ngx-photo-editor>\r\n        </div>\r\n\r\n        <div class=\"cover-image-container\">\r\n            <label for=\"cover-image-input\">\r\n                <img id=\"cover-image\" [src]=\"channelUser.channel?.cover|getImgPath: 'covers'\"\r\n                     (load)=\"detectImageChange()\">\r\n            </label>\r\n            <button mat-icon-button type=\"button\" class=\"remove-cover-btn\" (click)=\"removeCover()\"\r\n                    *ngIf=\"editMode && channelUser.channel.cover\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"sub-block\">\r\n        <div class=\"d-flex align-items-center\">\r\n            <div class=\"avatar-container\">\r\n                <label for=\"profile-image-input\">\r\n                    <img class=\"avatar\" [ngStyle]=\"{opacity: editMode ? 0.5: 1}\" id=\"profile-image\"\r\n                         (load)=\"detectImageChange()\"\r\n                         [src]=\"channelUser.channel.avatar|getImgPath: 'avatars'\">\r\n                    <mat-icon id=\"add-photo-btn\" *ngIf=\"editMode && !channelUser.channel.avatar\">add</mat-icon>\r\n                </label>\r\n                <mat-icon (click)=\"removeAvatar()\" class=\"remove-avatar-btn\"\r\n                          *ngIf=\"editMode && channelUser.channel.avatar\">clear\r\n                </mat-icon>\r\n            </div>\r\n\r\n            <div [hidden]=\"true\" *ngIf=\"this.channelUser.username === this.authUser.username\">\r\n                <input type=\"file\" id=\"profile-image-input\" (change)=\"profileChangeEvent($event)\"/>\r\n                <input type=\"hidden\" formControlName=\"avatar\">\r\n                <ngx-photo-editor\r\n                    [imageChanedEvent]=\"profileChangedEvent\"\r\n                    (imageCropped)=\"profileCropped($event)\"\r\n                    [aspectRatio]=\"4/3\"\r\n                    [viewMode]=\"1\"\r\n                    [resizeToWidth]=\"500\"></ngx-photo-editor>\r\n\r\n            </div>\r\n            <div>\r\n                <p class=\"channel-name\" id=\"channel-name\" *ngIf=\"!editMode\">{{channelUser.channel.name}}</p>\r\n                <mat-form-field *ngIf=\"editMode\">\r\n                    <input matInput formControlName=\"name\" id=\"channel-name-input\"\r\n                           (keyup.enter)=\"$event.preventDefault()\">\r\n                </mat-form-field>\r\n                <p class=\"main-text-4\">{{subscribersCount + ' subscriber' + (subscribersCount === 1 ? '' : 's')}} </p>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"loader\" *ngIf=\"changingImage\">\r\n            <mat-spinner [diameter]=\"50\"></mat-spinner>\r\n        </div>\r\n        <div class=\"d-flex align-items-center\" *ngIf=\"channelUser.username !== authUser.username\">\r\n            <!--            <i class=\"sub-bell fas fa-bell\"></i>-->\r\n            <a class=\"subscribe-btn\" *ngIf=\"!subscribedToChannel\" (click)=\"subscribeToChannel(channelUser.channel)\">Subscribe</a>\r\n            <a class=\"subscribe-btn subscribed\" *ngIf=\"subscribedToChannel\"\r\n               (click)=\"subscribeToChannel(channelUser.channel)\">Subscribed</a>\r\n        </div>\r\n        <div class=\"d-flex align-items-center\" *ngIf=\"channelUser.username === authUser.username\">\r\n            <button class=\"btn\" type=\"button\" id=\"edit-channel\" (click)=\"toggleEditMode()\" *ngIf=\"!editMode\">\r\n                <mat-icon>edit</mat-icon>\r\n                Edit channel\r\n            </button>\r\n            <button class=\"btn\" type=\"button\" id=\"cancel-changes\" *ngIf=\"editMode\" (click)=\"toggleEditMode()\">\r\n                <mat-icon>cancel</mat-icon>\r\n                Cancel\r\n            </button>\r\n            <button class=\"btn\" type=\"button\" id=\"save-channel-details\" *ngIf=\"editMode\" (click)=\"saveChanges()\">\r\n                <mat-icon>save</mat-icon>\r\n                Save changes\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!--    </ng-container>-->\r\n</form>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {Router} from '@angular/router';\r\nimport {PlaylistsService} from '@core/services/playlists.service';\r\nimport {AddPlaylistDialogComponent} from '@core/components/modals/add-playlist-dialog/add-playlist-dialog.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {FilterOutFalsyValuesFromObjectPipe} from '@shared/pipes/filter-out-falsy-values-from-object.pipe';\r\nimport {Subscription} from 'rxjs';\r\nimport {ConfirmationDialogComponent} from '@core/components/modals/confirmation-dialog/confirmation-dialog.component';\r\n\r\n@Component({\r\n    selector: 'app-playlists-tab',\r\n    templateUrl: './playlists-tab.component.html',\r\n    styleUrls: ['./playlists-tab.component.scss']\r\n})\r\nexport class PlaylistsTabComponent implements OnInit {\r\n    playlists = [];\r\n    apiUrl = API_URL;\r\n    showFilters = false;\r\n    search = '';\r\n    filters = null;\r\n    subscriptions: Subscription[] = [];\r\n\r\n    @Input('channelUser') channelUser;\r\n    @Input('authUser') authUser;\r\n\r\n    constructor(\r\n        public router: Router,\r\n        private playlistsService: PlaylistsService,\r\n        private subjectService: SubjectService,\r\n        private dialog: MatDialog,\r\n        private getExactParams: FilterOutFalsyValuesFromObjectPipe\r\n    ) {\r\n\r\n    }\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.search = localStorage.getItem('search');\r\n        this.getPlaylists({search: this.search, filters: this.filters});\r\n        this.getFiltersToggleState();\r\n    }\r\n\r\n    getFiltersToggleState() {\r\n        this.subscriptions.push(this.subjectService.getToggleFiltersData().subscribe(dt => {\r\n            this.showFilters = dt;\r\n        }));\r\n    }\r\n\r\n\r\n    getPlaylists(params) {\r\n\r\n        params = this.getExactParams.transform(params);\r\n\r\n        this.playlistsService.get({\r\n            channel_id: this.channelUser.channel.id,\r\n            user_id: this.authUser.id, ...params\r\n        }).subscribe(dt => {\r\n            this.playlists = dt;\r\n        });\r\n    }\r\n\r\n    openAddPlaylistModal() {\r\n        this.dialog.open(AddPlaylistDialogComponent,\r\n            {\r\n                data: {channel_id: this.channelUser.channel.id}\r\n            })\r\n            .afterClosed().subscribe(dt => {\r\n            this.getPlaylists({search: this.search, filters: this.filters});\r\n        });\r\n    }\r\n\r\n    openPlaylistPage(playlist, firstVideoId) {\r\n        const route = 'videos/play';\r\n        const params = {id: firstVideoId, playlist_id: playlist.id};\r\n        this.router.navigate([route], {queryParams: params});\r\n    }\r\n\r\n    getSearchResults(search) {\r\n        this.search = search;\r\n        this.getPlaylists({search, filters: this.filters});\r\n    }\r\n\r\n    getFilteredPlaylists(filters) {\r\n        this.filters = filters;\r\n        this.getPlaylists({search: this.search, filters});\r\n    }\r\n\r\n    goToEditPage(playlist) {\r\n        this.router.navigate(['playlists/single/' + playlist.id]);\r\n    }\r\n\r\n    removePlaylist(id, channelId) {\r\n        this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed) {\r\n                this.playlistsService.removePlaylist({id, channel_id: channelId}).subscribe(dt => {\r\n                    this.getPlaylists({search: this.search, filters: this.filters});\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","<app-video-filters *ngIf=\"showFilters\" (filter)=\"getFilteredPlaylists($event)\"></app-video-filters>\r\n<div class=\"playlist-tab\">\r\n    <ng-container *ngIf=\"authUser.username === channelUser.username\">\r\n        <button class=\"btn new-playlist\" (click)=\"openAddPlaylistModal()\">Add New Playlist</button>\r\n        <table *ngIf=\"playlists.length > 0\" class=\"table-responsive\">\r\n            <tr>\r\n                <th>Playlist</th>\r\n                <th>Visibility</th>\r\n                <th>Created at</th>\r\n                <th>Last updated</th>\r\n                <th>Video count</th>\r\n                <th></th>\r\n            </tr>\r\n            <tr *ngFor=\"let playlist of playlists\">\r\n                <td>\r\n                    <div class=\"img-info\">\r\n                        <img class=\"thumbnail\" [src]=\"playlist.thumbnail|getImgPath\" (click)=\"goToEditPage(playlist)\">\r\n                        <div class=\"info\">\r\n                            <h3>{{playlist.name}}</h3>\r\n                            <p>{{playlist.description}}</p>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <ng-container *ngIf=\"playlist.privacy\">\r\n                        <mat-icon>visibility_off</mat-icon>\r\n                        <span>Private</span>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"!playlist.privacy\">\r\n                        <mat-icon>visibility_on</mat-icon>\r\n                        <span>Public</span>\r\n                    </ng-container>\r\n                </td>\r\n                <td>\r\n                    <span>{{playlist.created_at|date: 'd MMM, yyyy'}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{playlist.updated_at|date: 'd MMM, yyyy'}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{playlist.videos.length}}</span>\r\n                </td>\r\n                <td>\r\n                    <span class=\"material-icons\" (click)=\"goToEditPage(playlist)\">create</span>\r\n                    <mat-icon (click)=\"removePlaylist(playlist.id, channelUser.id)\">delete</mat-icon>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"authUser.username !== channelUser.username\">\r\n        <div class=\"playlists-items\">\r\n            <ng-container *ngFor=\"let playlist of playlists\">\r\n                <div class=\"item\" *ngIf=\"playlist?.videos?.length > 0\">\r\n                    <div class=\"top-wrap\" (click)=\"openPlaylistPage(playlist, playlist.videos[0]?.id)\">\r\n                        <img class=\"thumbnail\" [src]=\"playlist.thumbnail|getImgPath\">\r\n                        <div class=\"overlay-info\">\r\n                            <p class=\"icon\"><span class=\"material-icons\">playlist_play</span></p>\r\n                            <p>{{playlist.name}}</p>\r\n                            <p class=\"video-count\">{{playlist.videos.length + (playlist.videos.length === 1 ? ' video' : ' videos')}}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"info\">\r\n                        <h2>{{playlist.name}}</h2>\r\n                        <p>{{playlist.description}}</p>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n\r\n    </ng-container>\r\n    <div id=\"no-playlists-found\" *ngIf=\"playlists.length === 0\">\r\n        <small class=\"error\">No playlists found for this channel</small>\r\n    </div>\r\n</div>\r\n","<div class=\"profile-list\">\r\n    <!--    <app-categories></app-categories>-->\r\n    <app-user-tags *ngIf=\"auth.loggedIn()\" (tagSelected)=\"getVideosByTag($event)\"></app-user-tags>\r\n    <mat-spinner [diameter]=\"15\" *ngIf=\"dataLoading==='loading'\"></mat-spinner>\r\n    <ng-container *ngIf=\"channelUser\">\r\n        <app-channel-profile [channelUser]=\"channelUser\" [authUser]=\"authUser\"></app-channel-profile>\r\n\r\n\r\n        <div class=\"stocks-watchlist pWatchlist\">\r\n            <div class=\"profile-list user-profile-block\">\r\n                <ul class=\"nav nav-tabs\" id=\"channel-tabs-list\" role=\"tablist\">\r\n                    <li class=\"nav-item\" *ngFor=\"let tab of allTabs\">\r\n                        <a class=\"nav-link\" [class.active]=\"tab === activeTab\" id=\"{{tab.link}}-tab\"\r\n                           (click)=\"changeActiveTab(tab)\" data-toggle=\"tab\" [href]=\"'#'+tab.link\" role=\"tab\"\r\n                           aria-controls=\"pWatch\"\r\n                           aria-selected=\"true\">{{tab.name}}</a>\r\n                    </li>\r\n                </ul>\r\n                <div class=\"loader-wrapper\">\r\n                    <div class=\"spinner-container\">\r\n                        <mat-spinner [diameter]=\"15\" *ngIf=\"this.loader.stocksLoading.status==='loading'\"></mat-spinner>\r\n                    </div>\r\n                </div>\r\n                <div class=\"search-wrapper\">\r\n                    <!--                    <form [formGroup]=\"searchVideosForm\" id=\"search-videos-form\"-->\r\n                    <!--                          *ngIf=\"activeTab.name!=='Watchlist'\">-->\r\n                    <!--                        <div class=\"toggle-filters-btn\">-->\r\n                    <!--                            <button class=\"filter-toggle-btn\"-->\r\n                    <!--                                    *ngIf=\"activeTab.name!=='About' && activeTab.name!=='Watchlist'\" type=\"button\"-->\r\n                    <!--                                    [class.filters-active]=\"showFilters\"-->\r\n                    <!--                                    (click)=\"toggleFilters()\">-->\r\n                    <!--                                <mat-icon>tune</mat-icon>-->\r\n                    <!--                            </button>-->\r\n                    <!--                        </div>-->\r\n                    <!--                        <input class=\"watchlist-input\" placeholder=\"Search\" formControlName=\"search\"-->\r\n                    <!--                               (keyup.enter)=\"searchVideos()\">-->\r\n                    <!--                        <i class=\"fas fa-search\"></i>-->\r\n                    <!--                    </form>-->\r\n                    <app-search-videos-form\r\n                        *ngIf=\"activeTab.name!=='About' && activeTab.name!=='Watchlist'\"></app-search-videos-form>\r\n                    <div class=\"right-side\" *ngIf=\"activeTab.name==='Watchlist'\">\r\n\r\n                        <div class=\"open-add-stock-modal\" *ngIf=\"activeTab.name==='Watchlist'\" (click)=\"openModal()\">\r\n                            <button type=\"button\">\r\n                                <mat-icon>add_circle_outline</mat-icon>\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div class=\"watchlist-search\" *ngIf=\"activeTab.name!=='About'\">\r\n                            <app-search-stocks-form *ngIf=\"activeTab.name==='Watchlist' && userStocks?.length > 0\"\r\n                                                    [whiteForm]=\"true\"\r\n                                                    [returnSearchText]=\"true\"\r\n                                                    (search)=\"searchInUserStocks($event)\">\r\n                            </app-search-stocks-form>\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <app-watchlist-tab *ngIf=\"activeTab.name === 'Watchlist'\" [channelUser]=\"channelUser\"></app-watchlist-tab>\r\n            <app-videos-tab *ngIf=\"activeTab.name === 'Videos'\" [channelUser]=\"channelUser\"\r\n                            [authUser]=\"authUser\"></app-videos-tab>\r\n            <app-playlists-tab *ngIf=\"activeTab.name === 'Playlists'\" [channelUser]=\"channelUser\"\r\n                               [authUser]=\"authUser\"></app-playlists-tab>\r\n            <app-about-tab *ngIf=\"activeTab.name === 'About'\" [channelUser]=\"channelUser\"></app-about-tab>\r\n        </div>\r\n    </ng-container>\r\n    <div class=\"channel-not-found\" *ngIf=\"!channelUser && dataLoading==='finished'\">\r\n        <p>Channel with such name is not found</p>\r\n    </div>\r\n</div>\r\n","import {Component, OnDestroy, OnInit, TemplateRef, ViewChild} from '@angular/core';\r\nimport {API_URL, OWL_OPTIONS, PROFILE_PAGE_TABS} from '@core/constants/global';\r\nimport {User} from '@shared/models/user';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {UsersService} from '@core/services/users.service';\r\nimport {Base64ToFilePipe} from '@shared/pipes/base64-to-file.pipe';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {PlaylistsService} from '@core/services/playlists.service';\r\nimport {WatchlistTabComponent} from '@app/channels/show-channel/watchlist-tab/watchlist-tab.component';\r\nimport {VideosTabComponent} from '@app/channels/show-channel/videos-tab/videos-tab.component';\r\nimport {PlaylistsTabComponent} from '@app/channels/show-channel/playlists-tab/playlists-tab.component';\r\nimport {AuthService} from '@core/services/auth.service';\r\nimport {StocksListsModalComponent} from '@shared/components/stocks-lists-modal/stocks-lists-modal.component';\r\nimport {LoaderService} from '@core/services/loader.service';\r\nimport {UpdateUserStocksPipe} from '@shared/pipes/update-user-stocks.pipe';\r\nimport {StocksService} from '@core/services/stocks.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\n@Component({\r\n    selector: 'app-show-channel',\r\n    templateUrl: './show-channel.component.html',\r\n    styleUrls: ['./show-channel.component.scss']\r\n})\r\nexport class ShowChannelComponent implements OnInit, OnDestroy {\r\n\r\n    authUser;\r\n\r\n    activeTab;\r\n    allTabs = PROFILE_PAGE_TABS;\r\n\r\n    apiUrl = API_URL;\r\n\r\n\r\n    channelUser;\r\n    passedUsername;\r\n    passedTab;\r\n\r\n    searchVideosForm: FormGroup;\r\n\r\n\r\n    playlists = [];\r\n    editMode = false;\r\n\r\n    showFilters = false;\r\n    filters = null;\r\n\r\n    dataLoading = 'idle';\r\n\r\n    userStocks = [];\r\n    filteredStocks = [];\r\n    subscriptions = [];\r\n\r\n\r\n    @ViewChild(WatchlistTabComponent) watchListTab: WatchlistTabComponent;\r\n    @ViewChild(VideosTabComponent) videosTab: VideosTabComponent;\r\n    @ViewChild(PlaylistsTabComponent) playlistsTab: PlaylistsTabComponent;\r\n\r\n    constructor(\r\n        private videoService: VideoService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        public router: Router,\r\n        private usersService: UsersService,\r\n        private base64ToFile: Base64ToFilePipe,\r\n        private route: ActivatedRoute,\r\n        private fb: FormBuilder,\r\n        private subjectService: SubjectService,\r\n        private channelService: ChannelsService,\r\n        private playlistsService: PlaylistsService,\r\n        private subject: SubjectService,\r\n        public auth: AuthService,\r\n        private dialog: MatDialog,\r\n        public loader: LoaderService,\r\n        private updateStocks: UpdateUserStocksPipe,\r\n        private stocksService: StocksService,\r\n        private toastr: ToastrService\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n        this.passedUsername = this.route.snapshot.queryParams.username;\r\n        this.passedTab = this.route.snapshot.queryParams.tab;\r\n        this.searchVideosForm = this.fb.group({search: ['', Validators.required]});\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // localStorage.setItem('search', '');\r\n        this.activeTab = PROFILE_PAGE_TABS.filter(tabs => tabs.name.toLowerCase() === this.passedTab)?.[0] || PROFILE_PAGE_TABS[0];\r\n        this.getUserInfo();\r\n\r\n        this.subject.currentUserStocks.subscribe((dt: any) => {\r\n            this.userStocks = dt.stocks;\r\n            this.filteredStocks = this.userStocks;\r\n        });\r\n    }\r\n\r\n    toggleFilters() {\r\n        this.showFilters = !this.showFilters;\r\n        this.subject.setToggleFiltersData(this.showFilters);\r\n    }\r\n\r\n    getUserInfo() {\r\n        this.dataLoading = 'loading';\r\n        if (this.passedUsername) {\r\n            this.usersService.getUserInfo({username: this.passedUsername}).subscribe(dt => {\r\n                if (dt) {\r\n                    this.channelUser = dt;\r\n                }\r\n                this.dataLoading = 'finished';\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    changeActiveTab(tab) {\r\n        this.activeTab = tab;\r\n        this.searchVideos();\r\n        this.showFilters = false;\r\n        this.subject.setToggleFiltersData(this.showFilters);\r\n        if (this.activeTab.name === 'Videos') {\r\n            this.getUserInfo();\r\n        }\r\n    }\r\n\r\n    searchInUserStocks(e) {\r\n        localStorage.setItem('search', e.search);\r\n        this.watchListTab.getSearchResults(e);\r\n    }\r\n\r\n    searchVideos() {\r\n\r\n        const s = this.searchVideosForm.value;\r\n        localStorage.setItem('search', s.search);\r\n        this.showFilters = false;\r\n        this.subject.setToggleFiltersData(this.showFilters);\r\n        if (this.activeTab.name === 'Watchlist') {\r\n            this.searchInVideosByAuthor(s.search);\r\n        } else if (this.activeTab.name === 'Videos') {\r\n            this.searchInUserVideos(s.search);\r\n        } else if (this.activeTab.name === 'Playlists') {\r\n            this.searchInPlaylists(s.search);\r\n        }\r\n\r\n    }\r\n\r\n    searchInVideosByAuthor(s) {\r\n        if (this.watchListTab) {\r\n            // this.watchListTab.getSearchResults(s);\r\n        }\r\n\r\n    }\r\n\r\n    searchInUserVideos(s) {\r\n        if (this.videosTab) {\r\n            this.videosTab.getSearchResults(s);\r\n        }\r\n    }\r\n\r\n    searchInPlaylists(s) {\r\n        if (this.playlistsTab) {\r\n            this.playlistsTab.getSearchResults(s);\r\n        }\r\n    }\r\n\r\n\r\n    async getVideosByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n    openModal() {\r\n        this.dialog.open(StocksListsModalComponent, {\r\n            maxWidth: '100vw',\r\n            maxHeight: '100vh',\r\n            height: '100%',\r\n            width: '100%',\r\n            panelClass: 'stocks-lists-modal'\r\n        }).afterClosed().subscribe(dt => {\r\n        });\r\n    }\r\n\r\n    updateFollowedStocksList(stock) {\r\n        const {userStocks} = this.updateStocks.transform(this.userStocks, stock, null);\r\n        if (userStocks.length > 25) {\r\n            this.toastr.error('We support not more than 25 stocks per user');\r\n        } else {\r\n            this.loader.stocksLoading.status = 'loading';\r\n            this.subscriptions.push(this.stocksService.updateFollowedStocks(\r\n                {user_id: this.authUser.id, ...{stocks: userStocks}})\r\n                .subscribe(dt => {\r\n                    this.userStocks = dt?.user_stocks || [];\r\n                    this.loader.stocksLoading.status = 'finished';\r\n                    this.subject.changeUserStocks({stocks: this.userStocks, empty: this.userStocks.length === 0});\r\n                }));\r\n        }\r\n\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {OwlOptions} from 'ngx-owl-carousel-o';\r\nimport {API_URL, OWL_OPTIONS} from '@core/constants/global';\r\nimport {Router} from '@angular/router';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {FilterOutFalsyValuesFromObjectPipe} from '@shared/pipes/filter-out-falsy-values-from-object.pipe';\r\n\r\n@Component({\r\n    selector: 'app-videos-tab',\r\n    templateUrl: './videos-tab.component.html',\r\n    styleUrls: ['./videos-tab.component.scss']\r\n})\r\nexport class VideosTabComponent implements OnInit {\r\n\r\n    owlOptions: OwlOptions = OWL_OPTIONS;\r\n    apiUrl = API_URL;\r\n    showFilters = false;\r\n    search = '';\r\n    filters = null;\r\n    userVideos = [];\r\n    videosLoaded = false;\r\n\r\n    @Input('channelUser') channelUser;\r\n    @Input('authUser') authUser;\r\n\r\n    constructor(\r\n        public router: Router,\r\n        private videoService: VideoService,\r\n        private subjectService: SubjectService,\r\n        private getExactParams: FilterOutFalsyValuesFromObjectPipe\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.subjectService.getToggleFiltersData().subscribe(dt => {\r\n            this.showFilters = dt;\r\n        });\r\n    }\r\n\r\n    getUserVideos(params) {\r\n\r\n        params = this.getExactParams.transform(params);\r\n        params.user_id = this.channelUser.id;\r\n        this.videoService.getUserVideos(params).subscribe(dt => {\r\n            this.videosLoaded = true;\r\n            this.channelUser.videos = dt?.videos;\r\n        });\r\n    }\r\n\r\n    getSearchResults(s) {\r\n        this.search = s;\r\n        this.getUserVideos({search: this.search, filters: this.filters});\r\n    }\r\n\r\n    getFilteredVideos(e) {\r\n        this.filters = e;\r\n        this.getUserVideos({search: this.search, filters: this.filters});\r\n    }\r\n\r\n}\r\n","<app-video-filters *ngIf=\"showFilters\" (filter)=\"getFilteredVideos($event)\"></app-video-filters>\r\n<!--<app-video-carousel-holder [videos]=\"channelUser.videos\" [title]=\"'Recent videos'\" [detailsSource]=\"channelUser\"-->\r\n<!--                           [removable]=\"authUser.username === channelUser.username\"></app-video-carousel-holder>-->\r\n<app-videos-list-holder [videos]=\"channelUser.videos\" [removable]=\"authUser.username === channelUser.username\"></app-videos-list-holder>\r\n","import {ChangeDetectorRef, Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {Router} from '@angular/router';\r\nimport {Subscription} from 'rxjs';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {FilterOutFalsyValuesFromObjectPipe} from '@shared/pipes/filter-out-falsy-values-from-object.pipe';\r\nimport {StocksService} from '@core/services/stocks.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {User} from '@shared/models/user';\r\nimport {updateStockDetails} from '@core/helpers/update-stock-details';\r\nimport {LoaderService} from '@core/services/loader.service';\r\nimport {PageEvent} from '@angular/material/paginator';\r\nimport {filter} from 'rxjs/operators';\r\nimport {Stock} from '@shared/models/stock';\r\n\r\n@Component({\r\n    selector: 'app-watchlist-tab',\r\n    templateUrl: './watchlist-tab.component.html',\r\n    styleUrls: ['./watchlist-tab.component.scss']\r\n})\r\nexport class WatchlistTabComponent implements OnInit, OnDestroy {\r\n    apiUrl = API_URL;\r\n    authUser: User;\r\n    search: string | null;\r\n\r\n    subscriptions: Subscription[] = [];\r\n    userStocks: Stock[] = [];\r\n    filteredStocks: Stock[] = [];\r\n\r\n    stocksLoading = 'idle';\r\n\r\n\r\n    @Input('channelUser') channelUser;\r\n\r\n    constructor(\r\n        private videoService: VideoService,\r\n        private subjectService: SubjectService,\r\n        public router: Router,\r\n        private getExactParams: FilterOutFalsyValuesFromObjectPipe,\r\n        private stocksService: StocksService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private subject: SubjectService,\r\n        private cdr: ChangeDetectorRef,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.authUser = this.getAuthUser.transform();\r\n        this.search = localStorage.getItem('search');\r\n        this.stocksLoading = 'loading';\r\n        this.subscriptions.push(this.subject.currentUserStocks.pipe(filter(d => !d.initial))\r\n            .subscribe(dt => {\r\n                this.userStocks = dt.stocks;\r\n                console.log(dt.stocks)\r\n                this.filteredStocks = this.userStocks;\r\n                this.stocksLoading = 'finished';\r\n            }));\r\n    }\r\n\r\n    getSearchResults(s) {\r\n        this.search = s;\r\n        if (s.search) {\r\n            this.filteredStocks = this.userStocks.filter(us => us.name.toLowerCase().includes(s.search));\r\n        }\r\n    }\r\n\r\n    saveUpdatedStocksList(stocks) {\r\n        this.stocksLoading = 'loading';\r\n        this.subscriptions.push(this.stocksService.updateFollowedStocks({\r\n            user_id: this.authUser.id,\r\n            ...{stocks}\r\n        }).subscribe(dt => {\r\n            this.userStocks = dt?.user_stocks || [];\r\n            this.subject.changeUserStocks({stocks: this.userStocks, empty: this.userStocks.length === 0});\r\n            this.stocksLoading = 'finished';\r\n            this.cdr.detectChanges();\r\n        }));\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n}\r\n","<div *ngIf=\"filteredStocks && channelUser.username === authUser.username\">\r\n    <mat-spinner *ngIf=\"stocksLoading==='loading'\" [diameter]=\"20\"></mat-spinner>\r\n    <small class=\"error\" *ngIf=\"userStocks?.length === 0 && stocksLoading==='finished'\">\r\n        No stocks added to watchlist</small>\r\n    <app-stocks-tiles [stocks]=\"filteredStocks\" [userStocks]=\"userStocks\"\r\n                      (updatedStocksList)=\"saveUpdatedStocksList($event)\"\r\n                      *ngIf=\"userStocks?.length > 0\"></app-stocks-tiles>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {AuthService} from '@core/services/auth.service';\r\nimport {API_URL} from '@core/constants/global';\r\nimport * as moment from 'moment';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-show-subscriptions',\r\n    templateUrl: './show-subscriptions.component.html',\r\n    styleUrls: ['./show-subscriptions.component.scss']\r\n})\r\nexport class ShowSubscriptionsComponent implements OnInit {\r\n    authUser;\r\n    userChannels;\r\n    apiUrl = API_URL;\r\n\r\n    constructor(\r\n        private channelsService: ChannelsService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        public auth: AuthService,\r\n        public router: Router,\r\n        private subject: SubjectService\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getUserChannelSubscriptions();\r\n    }\r\n\r\n    openChannelPage(channel, username) {\r\n        this.router.navigate(['channels/show'], {queryParams: {username}});\r\n    }\r\n\r\n    getUserChannelSubscriptions() {\r\n        console.log(this.authUser)\r\n        this.channelsService.getSubscriptions({user_id: this.authUser.id}).subscribe(dt => {\r\n            this.userChannels = dt;\r\n        });\r\n    }\r\n\r\n\r\n    checkIfSubscribed(channel) {\r\n        return channel.channel_subscribers.subscriber_id === this.authUser?.id;\r\n    }\r\n\r\n    subscribeToChannel(channel) {\r\n        this.channelsService.subscribeToChannel({user_id: this.authUser.id, channel_id: channel.id}).subscribe(dt => {\r\n            // this.subscribedToChannel = dt.status === 'Subscribed';\r\n            this.channelsService.getUserChannelSubscriptions({user_id: this.authUser.id}).subscribe(d => {\r\n                this.subject.setUserSubscriptions(d);\r\n                this.getUserChannelSubscriptions();\r\n            });\r\n        });\r\n    }\r\n\r\n}\r\n","<h1 id=\"my-subscriptions\">My Subscriptions</h1>\r\n<ul *ngIf=\"userChannels\">\r\n    <li *ngFor=\"let channel of userChannels.subscriptions\" class=\"channel-item\">\r\n        <div class=\"thumbnail\">\r\n            <img class=\"avatar\" [src]=\"channel.avatar|getImgPath:'avatars'\">\r\n        </div>\r\n        <div class=\"info\">\r\n            <p class=\"name\" (click)=\"openChannelPage(channel, channel?.user?.username)\">{{channel.name}}</p>\r\n            <div class=\"shortened-details\">\r\n                <p class=\"video-count\">{{channel.videos.length + (channel.videos.length === 1 ? ' video' : ' videos')}}</p>\r\n            </div>\r\n            <p>{{channel.description}}</p>\r\n            <button class=\"btn subscribe-to-channel-btn\" *ngIf=\"channel?.user?.username !== authUser?.username\"\r\n                    [class.subscribed]=\"checkIfSubscribed(channel)\"\r\n                    (click)=\"subscribeToChannel(channel)\">{{checkIfSubscribed(channel) ? 'Subscribed' : 'Subscribe'}}\r\n            </button>\r\n        </div>\r\n    </li>\r\n</ul>\r\n\r\n"]}