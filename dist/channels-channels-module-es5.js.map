{"version":3,"sources":["webpack:///src/app/channels/channels-routing.module.ts","webpack:///src/app/channels/channels.module.ts","webpack:///src/app/channels/show-channel/about-tab/about-tab.component.ts","webpack:///src/app/channels/show-channel/about-tab/about-tab.component.html","webpack:///src/app/channels/show-channel/channel-profile/channel-profile.component.ts","webpack:///src/app/channels/show-channel/channel-profile/channel-profile.component.html","webpack:///src/app/channels/show-channel/playlists-tab/playlists-tab.component.ts","webpack:///src/app/channels/show-channel/playlists-tab/playlists-tab.component.html","webpack:///src/app/channels/show-channel/show-channel.component.ts","webpack:///src/app/channels/show-channel/show-channel.component.html","webpack:///src/app/channels/show-channel/videos-tab/videos-tab.component.ts","webpack:///src/app/channels/show-channel/videos-tab/videos-tab.component.html","webpack:///src/app/channels/show-channel/watchlist-tab/watchlist-tab.component.ts","webpack:///src/app/channels/show-channel/watchlist-tab/watchlist-tab.component.html","webpack:///src/app/channels/show-subscriptions/show-subscriptions.component.ts","webpack:///src/app/channels/show-subscriptions/show-subscriptions.component.html","webpack:///src/app/core/services/users.service.ts"],"names":["routes","path","component","ChannelsRoutingModule","forChild","imports","exports","ChannelsModule","declarations","AboutTabComponent","fb","channelService","descriptionUpdated","editMode","aboutForm","group","description","required","id","username","patchValue","channelUser","channel","saveDescription","value","subscribe","dt","selector","templateUrl","styleUrls","ChannelProfileComponent","usersService","base64ToFile","getAuthUser","subject","loader","apiUrl","subscribedToChannel","subscribersCount","checkChannelSubscription","event","coverChangedEvent","profileChangedEvent","profileBase64","base64","filename","Date","now","fd","FormData","append","transform","authUser","dataLoading","changeProfileImage","changeAuthUserInfo","coverBase64","changeCoverImage","console","log","subscribeToChannel","user_id","channel_id","status","subscribers_count","getUserChannelSubscriptions","d","setUserSubscriptions","localStorage","setItem","token","PlaylistsTabComponent","router","playlistsService","subjectService","dialog","playlists","showFilters","s","getItem","getPlaylists","getSearchResults","getToggleFiltersData","get","open","data","afterClosed","playlist","firstVideoId","route","params","playlist_id","navigate","queryParams","searchPlaylists","search","e","filters","JSON","stringify","channelId","removePlaylist","ShowChannelComponent","videoService","owlOptions","watchlistVideos","activeTab","allTabs","passedUsername","snapshot","searchVideosForm","getUserInfo","setToggleFiltersData","tab","searchVideos","name","searchInVideosByAuthor","searchInUserVideos","searchInPlaylists","watchListTab","videosTab","playlistsTab","VideosTabComponent","getExactParams","userVideos","videosLoaded","getUserVideos","videos","WatchlistTabComponent","subscriptions","getAllVideosByAuthors","getFiltersToggleState","push","getVideosByAuthor","forEach","unsubscribe","ShowSubscriptionsComponent","channelsService","auth","getSubscriptions","userChannels","datetime","format","UsersService","httpClient","post","providedIn"],"mappings":"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","file":"channels-channels-module-es5.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {ShowChannelComponent} from '@app/channels/show-channel/show-channel.component';\r\nimport {ShowSubscriptionsComponent} from '@app/channels/show-subscriptions/show-subscriptions.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'show',\r\n        component: ShowChannelComponent\r\n    },\r\n    {\r\n        path: 'subscriptions',\r\n        component: ShowSubscriptionsComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ChannelsRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {ChannelsRoutingModule} from './channels-routing.module';\r\nimport {ShowChannelComponent} from './show-channel/show-channel.component';\r\nimport {SharedModule} from '@shared/shared.module';\r\nimport {NgxPhotoEditorModule} from 'ngx-photo-editor';\r\nimport { ShowSubscriptionsComponent } from './show-subscriptions/show-subscriptions.component';\r\nimport { ChannelProfileComponent } from './show-channel/channel-profile/channel-profile.component';\r\nimport { WatchlistTabComponent } from './show-channel/watchlist-tab/watchlist-tab.component';\r\nimport { VideosTabComponent } from './show-channel/videos-tab/videos-tab.component';\r\nimport { PlaylistsTabComponent } from './show-channel/playlists-tab/playlists-tab.component';\r\nimport { AboutTabComponent } from './show-channel/about-tab/about-tab.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [ShowChannelComponent, ShowSubscriptionsComponent, ChannelProfileComponent, WatchlistTabComponent, VideosTabComponent, PlaylistsTabComponent, AboutTabComponent],\r\n    imports: [\r\n        CommonModule,\r\n        ChannelsRoutingModule,\r\n        SharedModule,\r\n        NgxPhotoEditorModule,\r\n    ]\r\n})\r\nexport class ChannelsModule {\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\n\r\n@Component({\r\n    selector: 'app-about-tab',\r\n    templateUrl: './about-tab.component.html',\r\n    styleUrls: ['./about-tab.component.scss']\r\n})\r\nexport class AboutTabComponent implements OnInit {\r\n    aboutForm: FormGroup;\r\n    descriptionUpdated = false;\r\n    editMode = false;\r\n    @Input('channelUser') channelUser;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private channelService: ChannelsService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.aboutForm = this.fb.group({\r\n                description: ['', Validators.required],\r\n                id: ['', Validators.required],\r\n                username: ['', Validators.required]\r\n            },\r\n        );\r\n        this.aboutForm.patchValue({username: this.channelUser.username, ...this.channelUser.channel});\r\n    }\r\n\r\n    saveChannelDescription() {\r\n        this.descriptionUpdated = true;\r\n        this.channelService.saveDescription(this.aboutForm.value).subscribe(dt => {\r\n            this.channelUser = dt;\r\n            this.editMode = false;\r\n        });\r\n    }\r\n\r\n}\r\n","<div class=\"about-tab\">\r\n    <form [formGroup]=\"aboutForm\" id=\"channel-about-form\">\r\n\r\n        <div class=\"info\">\r\n            <h2 *ngIf=\"channelUser.channel?.description\">Description</h2>\r\n\r\n            <div class=\"date\">\r\n                <span>Joined {{channelUser.channel.created_at|date: 'd MMM, yyyy'}}</span>\r\n                <button class=\"btn\" (click)=\"editMode=!editMode\" *ngIf=\"!editMode\">Edit</button>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"description\" *ngIf=\"!editMode && channelUser?.channel.description\">\r\n            <p>{{channelUser.channel.description}}</p>\r\n        </div>\r\n        <textarea formControlName=\"description\" *ngIf=\"!descriptionUpdated && editMode\"></textarea>\r\n\r\n        <button class=\"save\" *ngIf=\"editMode\" (click)=\"saveChannelDescription()\">Save</button>\r\n    </form>\r\n</div>\r\n\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {CroppedEvent} from 'ngx-photo-editor';\r\nimport {UsersService} from '@core/services/users.service';\r\nimport {Base64ToFilePipe} from '@shared/pipes/base64-to-file.pipe';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {LoaderService} from '@core/services/loader.service';\r\n\r\n@Component({\r\n    selector: 'app-channel-profile',\r\n    templateUrl: './channel-profile.component.html',\r\n    styleUrls: ['./channel-profile.component.scss']\r\n})\r\nexport class ChannelProfileComponent implements OnInit {\r\n    apiUrl = API_URL;\r\n\r\n    profileChangedEvent: any;\r\n    coverChangedEvent: any;\r\n    profileBase64: any;\r\n    coverBase64: any;\r\n\r\n    subscribedToChannel = false;\r\n    subscribersCount = 0;\r\n\r\n    @Input('channelUser') channelUser;\r\n    @Input('authUser') authUser;\r\n\r\n    constructor(\r\n        private usersService: UsersService,\r\n        private base64ToFile: Base64ToFilePipe,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private channelService: ChannelsService,\r\n        private subject: SubjectService,\r\n        public loader: LoaderService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.checkChannelSubscription();\r\n    }\r\n\r\n    coverChangeEvent(event: any) {\r\n        this.coverChangedEvent = event;\r\n\r\n    }\r\n\r\n    profileChangeEvent(event: any) {\r\n        this.profileChangedEvent = event;\r\n    }\r\n\r\n    profileCropped(event: CroppedEvent) {\r\n        this.profileBase64 = event.base64;\r\n        const filename = `profile_${Date.now()}.jpg`;\r\n        const fd = new FormData();\r\n        fd.append('avatar_file', this.base64ToFile.transform(event.base64), filename);\r\n        fd.append('avatar', filename);\r\n        fd.append('id', this.authUser.id);\r\n        this.loader.dataLoading = true;\r\n        this.usersService.changeProfileImage(fd).subscribe((dt) => {\r\n            this.changeAuthUserInfo(dt);\r\n        });\r\n    }\r\n\r\n    coverCropped(event: CroppedEvent) {\r\n        this.coverBase64 = event.base64;\r\n        const fd = new FormData();\r\n        const filename = `cover_${Date.now()}.jpg`;\r\n        fd.append('cover_file', this.base64ToFile.transform(event.base64), filename);\r\n        fd.append('cover', filename);\r\n        fd.append('id', this.authUser.id);\r\n        this.loader.dataLoading = true;\r\n        this.usersService.changeCoverImage(fd).subscribe((dt) => {\r\n            this.changeAuthUserInfo(dt);\r\n        });\r\n    }\r\n\r\n    subscribeToChannel(channel): void {\r\n        console.log(channel)\r\n        this.channelService.subscribeToChannel({user_id: this.authUser.id, channel_id: channel.id}).subscribe(dt => {\r\n            this.subscribedToChannel = dt.status === 'Subscribed';\r\n            this.subscribersCount = dt.subscribers_count;\r\n            this.channelService.getUserChannelSubscriptions({user_id: this.authUser.id}).subscribe(d => {\r\n                this.subject.setUserSubscriptions(d);\r\n            });\r\n        });\r\n    }\r\n\r\n    checkChannelSubscription() {\r\n        // console.log(this.channelUser)\r\n        this.channelService.checkChannelSubscription({\r\n            user_id: this.authUser.id,\r\n            channel_id: this.channelUser.channel.id\r\n        }).subscribe(dt => {\r\n            this.subscribedToChannel = dt.status === 'Subscribed';\r\n            this.subscribersCount = dt.subscribers_count;\r\n        });\r\n    }\r\n\r\n    changeAuthUserInfo(dt) {\r\n        localStorage.setItem('token', dt.token);\r\n        this.authUser = this.getAuthUser.transform();\r\n        this.channelUser = this.authUser;\r\n        this.loader.dataLoading = false;\r\n    }\r\n\r\n}\r\n","<div class=\"profile-block\">\r\n    <div [hidden]=\"true\" *ngIf=\"channelUser.username === authUser.username\">\r\n        <input type=\"file\" id=\"cover-image-input\" (change)=\"coverChangeEvent($event)\"/>\r\n        <ngx-photo-editor\r\n            [imageChanedEvent]=\"coverChangedEvent\"\r\n            (imageCropped)=\"coverCropped($event)\"\r\n            [autoCrop]=\"false\"\r\n            [viewMode]=\"3\"></ngx-photo-editor>\r\n    </div>\r\n    <label for=\"cover-image-input\">\r\n        <img id=\"cover-image\" [src]=\"channelUser?.cover|getImgPath: 'covers'\">\r\n    </label>\r\n</div>\r\n\r\n<div class=\"sub-block\">\r\n    <div class=\"d-flex align-items-center\">\r\n        <label for=\"profile-image-input\">\r\n            <img class=\"avatar\" id=\"profile-image\" [src]=\"channelUser?.avatar|getImgPath: 'avatars'\">\r\n        </label>\r\n        <div [hidden]=\"true\" *ngIf=\"this.channelUser.username === this.authUser.username\">\r\n            <input type=\"file\" id=\"profile-image-input\" (change)=\"profileChangeEvent($event)\"/>\r\n            <ngx-photo-editor\r\n                [imageChanedEvent]=\"profileChangedEvent\"\r\n                (imageCropped)=\"profileCropped($event)\"\r\n                [aspectRatio]=\"4/3\"\r\n                [viewMode]=\"1\"\r\n                [resizeToWidth]=\"500\"></ngx-photo-editor>\r\n\r\n        </div>\r\n        <div>\r\n            <p class=\"main-text-1\">{{channelUser.channel.name}}</p>\r\n            <p class=\"main-text-4\">{{subscribersCount + ' subscriber' + (subscribersCount === 1 ? '' : 's')}} </p>\r\n        </div>\r\n        <div class=\"loader\" *ngIf=\"loader.dataLoading\">\r\n            <mat-spinner [diameter]=\"20\"></mat-spinner>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"d-flex align-items-center\" *ngIf=\"channelUser.username !== authUser.username\">\r\n        <i class=\"sub-bell fas fa-bell\"></i>\r\n        <a class=\"subscribe-btn\" *ngIf=\"!subscribedToChannel\" (click)=\"subscribeToChannel(channelUser.channel)\">Subscribe</a>\r\n        <a class=\"subscribe-btn subscribed\" *ngIf=\"subscribedToChannel\"\r\n           (click)=\"subscribeToChannel(channelUser.channel)\">Subscribed</a>\r\n    </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {Router} from '@angular/router';\r\nimport {PlaylistsService} from '@core/services/playlists.service';\r\nimport {AddPlaylistDialogComponent} from '@core/components/modals/add-playlist-dialog/add-playlist-dialog.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {SubjectService} from '@core/services/subject.service';\r\n\r\n@Component({\r\n    selector: 'app-playlists-tab',\r\n    templateUrl: './playlists-tab.component.html',\r\n    styleUrls: ['./playlists-tab.component.scss']\r\n})\r\nexport class PlaylistsTabComponent implements OnInit {\r\n    playlists = [];\r\n    apiUrl = API_URL;\r\n    showFilters = false;\r\n\r\n    @Input('channelUser') channelUser;\r\n    @Input('authUser') authUser;\r\n\r\n    constructor(\r\n        public router: Router,\r\n        private playlistsService: PlaylistsService,\r\n        private subjectService: SubjectService,\r\n        private dialog: MatDialog\r\n    ) {\r\n\r\n    }\r\n\r\n\r\n    ngOnInit(): void {\r\n        const s = localStorage.getItem('search');\r\n        console.log(!s)\r\n        if (!s) {\r\n            this.getPlaylists();\r\n        } else {\r\n            this.getSearchResults(s);\r\n        }\r\n\r\n        this.subjectService.getToggleFiltersData().subscribe(dt => {\r\n            this.showFilters = dt;\r\n        });\r\n    }\r\n\r\n\r\n    getPlaylists() {\r\n        this.playlistsService.get({channel_id: this.channelUser.channel.id}).subscribe(dt => {\r\n            this.playlists = dt;\r\n        });\r\n    }\r\n\r\n    openAddPlaylistModal() {\r\n        this.dialog.open(AddPlaylistDialogComponent,\r\n            {\r\n                data: {channel_id: this.channelUser.channel.id}\r\n            })\r\n            .afterClosed().subscribe(dt => {\r\n            this.getPlaylists();\r\n        });\r\n    }\r\n\r\n    openPlaylistPage(playlist, firstVideoId) {\r\n        const route = 'videos/play';\r\n        const params = {id: firstVideoId, playlist_id: playlist.id};\r\n        this.router.navigate([route], {queryParams: params});\r\n    }\r\n\r\n    getSearchResults(s) {\r\n        console.log(s)\r\n        this.playlistsService.searchPlaylists({search: s}).subscribe(dt => {\r\n            this.playlists = dt;\r\n        });\r\n    }\r\n\r\n    getFilteredPlaylists(e) {\r\n        this.playlistsService.get({\r\n            channel_id: this.channelUser.channel.id,\r\n            filters: JSON.stringify(e)\r\n        }).subscribe(dt => {\r\n            this.playlists = dt;\r\n        });\r\n    }\r\n\r\n    goToEditPage(playlist) {\r\n        this.router.navigate(['playlists/single/' + playlist.id]);\r\n    }\r\n\r\n    removePlaylist(id, channelId) {\r\n        this.playlistsService.removePlaylist({id, channel_id: channelId}).subscribe(dt => {\r\n            this.playlists = dt;\r\n        });\r\n    }\r\n\r\n}\r\n","<app-video-filters *ngIf=\"showFilters\" (filter)=\"getFilteredPlaylists($event)\"></app-video-filters>\r\n<div class=\"playlist-tab\">\r\n    <ng-container *ngIf=\"authUser.username === channelUser.username\">\r\n        <button class=\"btn new-playlist\" (click)=\"openAddPlaylistModal()\">Add New Playlist</button>\r\n        <table *ngIf=\"playlists.length > 0\">\r\n            <tr>\r\n                <th>Playlist</th>\r\n                <th>Visibility</th>\r\n                <th>Created at</th>\r\n                <th>Last updated</th>\r\n                <th>Video count</th>\r\n                <th></th>\r\n            </tr>\r\n            <tr *ngFor=\"let playlist of playlists\">\r\n                <td>\r\n                    <div class=\"img-info\">\r\n                        <img class=\"thumbnail\" [src]=\"playlist.thumbnail|getImgPath\" (click)=\"goToEditPage(playlist)\">\r\n                        <div class=\"info\">\r\n                            <h3>{{playlist.name}}</h3>\r\n                            <p>{{playlist.description}}</p>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <ng-container *ngIf=\"playlist.privacy\">\r\n                        <mat-icon>visibility_off</mat-icon>\r\n                        <span>Private</span>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"!playlist.privacy\">\r\n                        <mat-icon>visibility_on</mat-icon>\r\n                        <span>Public</span>\r\n                    </ng-container>\r\n                </td>\r\n                <td>\r\n                    <span>{{playlist.created_at|date: 'd MMM, yyyy'}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{playlist.updated_at|date: 'd MMM, yyyy'}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{playlist.videos.length}}</span>\r\n                </td>\r\n                <td>\r\n                    <span class=\"material-icons\" (click)=\"goToEditPage(playlist)\">create</span>\r\n                    <mat-icon (click)=\"removePlaylist(playlist.id, channelUser.id)\">delete</mat-icon>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"authUser.username !== channelUser.username\">\r\n        <div class=\"playlists-items\">\r\n            <ng-container *ngFor=\"let playlist of playlists\">\r\n                <div class=\"item\" *ngIf=\"playlist?.videos?.length > 0\">\r\n                    <div class=\"top-wrap\" (click)=\"openPlaylistPage(playlist, playlist.videos[0]?.id)\">\r\n                        <img class=\"thumbnail\" [src]=\"playlist.thumbnail|getImgPath\">\r\n                        <div class=\"overlay-info\">\r\n                            <p class=\"icon\"><span class=\"material-icons\">playlist_play</span></p>\r\n                            <p>{{playlist.name}}</p>\r\n                            <p class=\"video-count\">{{playlist.videos.length + (playlist.videos.length === 1 ? ' video' : ' videos')}}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"info\">\r\n                        <h2>{{playlist.name}}</h2>\r\n                        <p>{{playlist.description}}</p>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n\r\n    </ng-container>\r\n    <div id=\"no-playlists-found\">\r\n        <span *ngIf=\"playlists.length === 0\">No playlists found for this channel</span>\r\n    </div>\r\n</div>\r\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {OwlOptions} from 'ngx-owl-carousel-o';\r\nimport {API_URL, OWL_OPTIONS, PROFILE_PAGE_TABS} from '@core/constants/global';\r\nimport {User} from '@shared/models/user';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {UsersService} from '@core/services/users.service';\r\nimport {Base64ToFilePipe} from '@shared/pipes/base64-to-file.pipe';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AddPlaylistDialogComponent} from '@core/components/modals/add-playlist-dialog/add-playlist-dialog.component';\r\nimport {PlaylistsService} from '@core/services/playlists.service';\r\nimport {WatchlistTabComponent} from '@app/channels/show-channel/watchlist-tab/watchlist-tab.component';\r\nimport {VideosTabComponent} from '@app/channels/show-channel/videos-tab/videos-tab.component';\r\nimport {PlaylistsTabComponent} from '@app/channels/show-channel/playlists-tab/playlists-tab.component';\r\nimport {search} from '@ctrl/ngx-emoji-mart/svgs';\r\n\r\n@Component({\r\n    selector: 'app-show-channel',\r\n    templateUrl: './show-channel.component.html',\r\n    styleUrls: ['./show-channel.component.scss']\r\n})\r\nexport class ShowChannelComponent implements OnInit, OnDestroy {\r\n\r\n    owlOptions: OwlOptions = OWL_OPTIONS;\r\n    watchlistVideos = [];\r\n    authUser;\r\n\r\n    activeTab = PROFILE_PAGE_TABS[2];\r\n    allTabs = PROFILE_PAGE_TABS;\r\n\r\n    apiUrl = API_URL;\r\n\r\n\r\n    channelUser;\r\n    passedUsername;\r\n\r\n    searchVideosForm: FormGroup;\r\n\r\n\r\n    playlists = [];\r\n    editMode = false;\r\n\r\n    showFilters = false;\r\n\r\n    @ViewChild(WatchlistTabComponent) watchListTab: WatchlistTabComponent;\r\n    @ViewChild(VideosTabComponent) videosTab: VideosTabComponent;\r\n    @ViewChild(PlaylistsTabComponent) playlistsTab: PlaylistsTabComponent;\r\n\r\n    constructor(\r\n        private videoService: VideoService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        public router: Router,\r\n        private usersService: UsersService,\r\n        private base64ToFile: Base64ToFilePipe,\r\n        private route: ActivatedRoute,\r\n        private fb: FormBuilder,\r\n        private subjectService: SubjectService,\r\n        private channelService: ChannelsService,\r\n        private playlistsService: PlaylistsService,\r\n        private subject: SubjectService,\r\n        private dialog: MatDialog\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n        this.passedUsername = this.route.snapshot.queryParams.username;\r\n        this.searchVideosForm = this.fb.group({search: ['', Validators.required]});\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        localStorage.setItem('search', '');\r\n        if (this.passedUsername) {\r\n            this.usersService.getUserInfo({username: this.passedUsername}).subscribe(dt => {\r\n                if (dt) {\r\n                    this.channelUser = dt;\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toggleFilters() {\r\n        this.showFilters = !this.showFilters;\r\n        this.subject.setToggleFiltersData(this.showFilters);\r\n    }\r\n\r\n\r\n    changeActiveTab(tab) {\r\n        this.activeTab = tab;\r\n        this.searchVideos();\r\n        this.showFilters = false;\r\n        this.subject.setToggleFiltersData(this.showFilters);\r\n    }\r\n\r\n    searchVideos() {\r\n\r\n        const s = this.searchVideosForm.value;\r\n        localStorage.setItem('search', s.search);\r\n        this.showFilters = false;\r\n        this.subject.setToggleFiltersData(this.showFilters);\r\n        if (this.activeTab.name === 'Watchlist') {\r\n            this.searchInVideosByAuthor(s.search);\r\n        } else if (this.activeTab.name === 'Videos') {\r\n            this.searchInUserVideos(s.search);\r\n        } else if (this.activeTab.name === 'Playlists') {\r\n            this.searchInPlaylists(s.search);\r\n        }\r\n\r\n    }\r\n\r\n    searchInVideosByAuthor(s) {\r\n        if (this.watchListTab) {\r\n            this.watchListTab.getSearchResults(s);\r\n        }\r\n\r\n    }\r\n\r\n    searchInUserVideos(s) {\r\n        if (this.videosTab) {\r\n            this.videosTab.getSearchResults(s);\r\n        }\r\n    }\r\n\r\n    searchInPlaylists(s) {\r\n        if (this.playlistsTab) {\r\n            this.playlistsTab.getSearchResults(s);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n    }\r\n\r\n\r\n}\r\n","<div class=\"profile-list\">\r\n    <app-categories></app-categories>\r\n    <ng-container *ngIf=\"channelUser\">\r\n\r\n        <app-channel-profile [channelUser]=\"channelUser\" [authUser]=\"authUser\"></app-channel-profile>\r\n\r\n\r\n        <div class=\"watchlist pWatchlist\">\r\n            <div class=\"profile-list user-profile-block\">\r\n                <ul class=\"nav nav-tabs\" id=\"profileList\" role=\"tablist\">\r\n                    <li class=\"nav-item\" *ngFor=\"let tab of allTabs\">\r\n                        <a class=\"nav-link\" [class.active]=\"tab === activeTab\" id=\"{{tab.link}}-tab\"\r\n                           (click)=\"changeActiveTab(tab)\" data-toggle=\"tab\" [href]=\"'#'+tab.link\" role=\"tab\"\r\n                           aria-controls=\"pWatch\"\r\n                           aria-selected=\"true\">{{tab.name}}</a>\r\n                    </li>\r\n                </ul>\r\n                <form [formGroup]=\"searchVideosForm\" id=\"search-videos-form\">\r\n                    <div class=\"toggle-filters-btn\">\r\n                        <button class=\"filter-toggle-btn\" type=\"button\" [class.filters-active]=\"showFilters\" (click)=\"toggleFilters()\">\r\n                            <mat-icon>tune</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"watchlist-search\" *ngIf=\"activeTab.name!=='About'\">\r\n                        <input class=\"watchlist-input\" placeholder=\"Search\" formControlName=\"search\"\r\n                               (keyup.enter)=\"searchVideos()\">\r\n                        <i class=\"fas fa-search\"></i>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n            <app-watchlist-tab *ngIf=\"activeTab.name === 'Watchlist'\"></app-watchlist-tab>\r\n            <app-videos-tab *ngIf=\"activeTab.name === 'Videos'\" [channelUser]=\"channelUser\"\r\n                            [authUser]=\"authUser\"></app-videos-tab>\r\n            <app-playlists-tab *ngIf=\"activeTab.name === 'Playlists'\" [channelUser]=\"channelUser\"\r\n                               [authUser]=\"authUser\"></app-playlists-tab>\r\n            <app-about-tab *ngIf=\"activeTab.name === 'About'\" [channelUser]=\"channelUser\"></app-about-tab>\r\n\r\n\r\n        </div>\r\n    </ng-container>\r\n    <div class=\"channel-not-found\" *ngIf=\"!channelUser\">\r\n        <p>Channel with such name is not found</p>\r\n    </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {OwlOptions} from 'ngx-owl-carousel-o';\r\nimport {API_URL, OWL_OPTIONS} from '@core/constants/global';\r\nimport {Router} from '@angular/router';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {FilterOutFalsyValuesFromObjectPipe} from '@shared/pipes/filter-out-falsy-values-from-object.pipe';\r\n\r\n@Component({\r\n    selector: 'app-videos-tab',\r\n    templateUrl: './videos-tab.component.html',\r\n    styleUrls: ['./videos-tab.component.scss']\r\n})\r\nexport class VideosTabComponent implements OnInit {\r\n\r\n    owlOptions: OwlOptions = OWL_OPTIONS;\r\n    apiUrl = API_URL;\r\n    showFilters = false;\r\n    search = '';\r\n    filters = null;\r\n    userVideos = [];\r\n    videosLoaded = false;\r\n\r\n    @Input('channelUser') channelUser;\r\n    @Input('authUser') authUser;\r\n\r\n    constructor(\r\n        public router: Router,\r\n        private videoService: VideoService,\r\n        private subjectService: SubjectService,\r\n        private getExactParams: FilterOutFalsyValuesFromObjectPipe\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.subjectService.getToggleFiltersData().subscribe(dt => {\r\n            this.showFilters = dt;\r\n        });\r\n    }\r\n\r\n    getUserVideos(params) {\r\n\r\n        params = this.getExactParams.transform(params);\r\n        params.user_id = this.channelUser.id;\r\n        this.videoService.getUserVideos(params).subscribe(dt => {\r\n            this.videosLoaded = true;\r\n            this.channelUser.videos = dt?.videos;\r\n        });\r\n    }\r\n\r\n    getSearchResults(s) {\r\n        this.search = s;\r\n        this.getUserVideos({search: this.search, filters: this.filters});\r\n    }\r\n\r\n    getFilteredVideos(e) {\r\n        this.filters = e;\r\n        this.getUserVideos({search: this.search, filters: this.filters});\r\n    }\r\n\r\n}\r\n","<app-video-filters *ngIf=\"showFilters\" (filter)=\"getFilteredVideos($event)\"></app-video-filters>\r\n<app-video-carousel-holder [videos]=\"channelUser.videos\" [title]=\"'Recent videos'\" [detailsSource]=\"channelUser\"\r\n                           [removable]=\"authUser.username === channelUser.username\"></app-video-carousel-holder>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {OwlOptions} from 'ngx-owl-carousel-o';\r\nimport {API_URL, OWL_OPTIONS} from '@core/constants/global';\r\nimport {Router} from '@angular/router';\r\nimport {Subscription} from 'rxjs';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {FilterOutFalsyValuesFromObjectPipe} from '@shared/pipes/filter-out-falsy-values-from-object.pipe';\r\n\r\n@Component({\r\n    selector: 'app-watchlist-tab',\r\n    templateUrl: './watchlist-tab.component.html',\r\n    styleUrls: ['./watchlist-tab.component.scss']\r\n})\r\nexport class WatchlistTabComponent implements OnInit, OnDestroy {\r\n    watchlistVideos = [];\r\n    owlOptions: OwlOptions = OWL_OPTIONS;\r\n    apiUrl = API_URL;\r\n    search;\r\n    subscriptions: Subscription[] = [];\r\n    showFilters = false;\r\n    filters = null;\r\n\r\n    constructor(\r\n        private videoService: VideoService,\r\n        private subjectService: SubjectService,\r\n        public router: Router,\r\n        private getExactParams: FilterOutFalsyValuesFromObjectPipe\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.watchlistVideos = [];\r\n        this.search = localStorage.getItem('search');\r\n        this.getAllVideosByAuthors({search: this.search, filters: this.filters});\r\n        this.getFiltersToggleState();\r\n    }\r\n\r\n    getFiltersToggleState() {\r\n        this.subscriptions.push(this.subjectService.getToggleFiltersData().subscribe(dt => {\r\n            this.showFilters = dt;\r\n        }));\r\n    }\r\n\r\n    getAllVideosByAuthors(params) {\r\n        params = this.getExactParams.transform(params);\r\n\r\n        console.log(params)\r\n\r\n        this.subscriptions.push(this.videoService.getVideosByAuthor(params).subscribe(dt => {\r\n            this.watchlistVideos = dt;\r\n        }));\r\n    }\r\n\r\n    getFilteredVideos(filters) {\r\n        this.filters = filters;\r\n        this.getAllVideosByAuthors({search: this.search, filters});\r\n    }\r\n\r\n    getSearchResults(search) {\r\n        this.search = search;\r\n        console.log('get search results')\r\n        this.getAllVideosByAuthors({search, filters: this.filters});\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n}\r\n","<app-video-filters *ngIf=\"showFilters\" (filter)=\"getFilteredVideos($event)\"></app-video-filters>\r\n<ng-container *ngFor=\"let videoList of watchlistVideos\">\r\n    <ng-container *ngIf=\"videoList.videos.length > 0\">\r\n\r\n        <app-video-carousel-holder [videos]=\"videoList.videos\" [title]=\"videoList.full_name\"\r\n                                   [detailsSource]=\"videoList\"></app-video-carousel-holder>\r\n    </ng-container>\r\n</ng-container>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {AuthService} from '@core/services/auth.service';\r\nimport {API_URL} from '@core/constants/global';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector: 'app-show-subscriptions',\r\n    templateUrl: './show-subscriptions.component.html',\r\n    styleUrls: ['./show-subscriptions.component.scss']\r\n})\r\nexport class ShowSubscriptionsComponent implements OnInit {\r\n    authUser;\r\n    userChannels;\r\n    apiUrl = API_URL;\r\n\r\n    constructor(\r\n        private channelsService: ChannelsService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        public auth: AuthService,\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.channelsService.getSubscriptions({user_id: this.authUser.id}).subscribe(dt => {\r\n            this.userChannels = dt;\r\n        });\r\n    }\r\n\r\n    getUploadDateTime(datetime) {\r\n        return moment(datetime).format('MMM DD, YYYY');\r\n    }\r\n\r\n}\r\n","<ul *ngIf=\"userChannels\">\r\n    <li *ngFor=\"let channel of userChannels.subscriptions\" class=\"channel-item\">\r\n        <div class=\"thumbnail\">\r\n            <img class=\"avatar\" *ngIf=\"channel.avatar\" [src]=\"apiUrl+'uploads/avatars/'+channel.avatar\">\r\n            <img class=\"avatar\" *ngIf=\"!channel.avatar\" [src]=\"'assets/img/default-user.png'\">\r\n        </div>\r\n        <div class=\"info\">\r\n            <p class=\"name\">{{channel.name}}</p>\r\n            <div class=\"shortened-details\">\r\n                <span class=\"watchers-count\">17k watching</span>\r\n                <span class=\"dot\">.</span>\r\n                <span class=\"videos-count\">250 video</span>\r\n            </div>\r\n            <p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed\r\n                Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed Lorem ipsum dolor sit amet,\r\n                consetetur sadipscing elitr, sed sda,sasddswd</p>\r\n        </div>\r\n    </li>\r\n</ul>\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {API_URL} from '@core/constants/global';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n\r\n    constructor(\r\n        private httpClient: HttpClient\r\n    ) {\r\n    }\r\n\r\n    changeProfileImage(params) {\r\n        return this.httpClient.post<any>(`${API_URL}users/change-profile-image`, params);\r\n    }\r\n\r\n    changeCoverImage(params) {\r\n        return this.httpClient.post<any>(`${API_URL}users/change-cover-image`, params);\r\n    }\r\n\r\n    getUserInfo(params) {\r\n        return this.httpClient.get<any>(`${API_URL}users/get-user-info`, {params});\r\n    }\r\n}\r\n"]}