{"version":3,"sources":["webpack:///src/app/channels/channels-routing.module.ts","webpack:///src/app/channels/channels.module.ts","webpack:///src/app/channels/show-channel/about-tab/about-tab.component.ts","webpack:///src/app/channels/show-channel/about-tab/about-tab.component.html","webpack:///src/app/channels/show-channel/channel-profile/channel-profile.component.ts","webpack:///src/app/channels/show-channel/channel-profile/channel-profile.component.html","webpack:///src/app/channels/show-channel/playlists-tab/playlists-tab.component.ts","webpack:///src/app/channels/show-channel/playlists-tab/playlists-tab.component.html","webpack:///src/app/channels/show-channel/show-channel.component.html","webpack:///src/app/channels/show-channel/show-channel.component.ts","webpack:///src/app/channels/show-channel/videos-tab/videos-tab.component.ts","webpack:///src/app/channels/show-channel/videos-tab/videos-tab.component.html","webpack:///src/app/channels/show-channel/watchlist-tab/watchlist-tab.component.ts","webpack:///src/app/channels/show-channel/watchlist-tab/watchlist-tab.component.html"],"names":["routes","path","component","data","title","ChannelsRoutingModule","forChild","imports","exports","ChannelsModule","declarations","AboutTabComponent","fb","channelService","getAuthUser","fixLineBreaks","editMode","authUser","transform","aboutForm","group","description","required","maxLength","id","username","patchValue","channelUser","channel","valid","saveDescription","value","subscribe","dt","document","querySelector","innerHTML","saveChannelDescription","selector","templateUrl","styleUrls","$event","preventDefault","ChannelProfileComponent","usersService","base64ToFile","subject","socketService","loader","apiUrl","subscribedToChannel","subscribersCount","changingImage","subscriptions","attemptedToConnect","usersConnectionStatus","toggleChatBox","checkChannelSubscription","initChannelForm","checkIfUsersConnected","getAcceptedDeclinedRequests","getDisconnectUser","channelForm","avatar","cover","name","user_id","channel_user_id","usersConnection","confirmed","event","coverChangedEvent","profileChangedEvent","dataLoading","console","log","profileBase64","base64","filename","Date","now","fd","FormData","append","push","changeProfileImage","changeAuthUserInfo","coverBase64","changeCoverImage","subscribeToChannel","channel_id","status","subscribers_count","getUserChannelSubscriptions","d","setUserSubscriptions","localStorage","setItem","token","changeAuthUser","hasOwnProperty","changeChannelDetails","emit","connectWithUser","acceptedConnection","receiver_id","initiator_id","declinedConnection","disconnectUsers","to_username","getDisconnectUsers","forEach","s","unsubscribe","detectImageChange","PlaylistsTabComponent","router","playlistsService","subjectService","dialog","getExactParams","playlists","showFilters","search","filters","trackByElement","getItem","getPlaylists","getFiltersToggleState","getToggleFiltersData","params","get","open","afterClosed","playlist","firstVideoId","route","playlist_id","navigate","queryParams","channelId","removePlaylist","ShowChannelComponent","videoService","auth","updateStocks","stocksService","toastr","chatService","allTabs","userStocks","filteredStocks","showChatBox","passedUsername","snapshot","passedTab","tab","searchVideosForm","activeTab","filter","tabs","toLowerCase","getUserInfo","currentUserStocks","stocks","setToggleFiltersData","channelLoading","viewingOwnChannel","own_channel","e","watchListTab","getSearchResults","searchInUserVideos","searchInPlaylists","videosTab","playlistsTab","tag","maxWidth","maxHeight","height","width","panelClass","stock","find","result","isStockFollowed","stocksLoading","updateFollowedStocks","user_stocks","changeUserStocks","empty","length","VideosTabComponent","owlOptions","userVideos","videosLoaded","getUserVideos","videos","WatchlistTabComponent","cdr","pipe","initial","us","includes","detectChanges","sendData","order_type","rows","JSON","stringify","dragdrop","updateUserStocksPriority"],"mappings":"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","file":"channels-channels-module-es5.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {ShowChannelComponent} from '@app/channels/show-channel/show-channel.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'show',\r\n        component: ShowChannelComponent,\r\n        data: {\r\n            title: 'Channel page'\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ChannelsRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {ChannelsRoutingModule} from './channels-routing.module';\r\nimport {ShowChannelComponent} from './show-channel/show-channel.component';\r\nimport {SharedModule} from '@shared/shared.module';\r\nimport {NgxPhotoEditorModule} from 'ngx-photo-editor';\r\nimport {ChannelProfileComponent} from './show-channel/channel-profile/channel-profile.component';\r\nimport {WatchlistTabComponent} from './show-channel/watchlist-tab/watchlist-tab.component';\r\nimport {VideosTabComponent} from './show-channel/videos-tab/videos-tab.component';\r\nimport {PlaylistsTabComponent} from './show-channel/playlists-tab/playlists-tab.component';\r\nimport {AboutTabComponent} from './show-channel/about-tab/about-tab.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ShowChannelComponent,\r\n        ChannelProfileComponent,\r\n        WatchlistTabComponent,\r\n        VideosTabComponent,\r\n        PlaylistsTabComponent,\r\n        AboutTabComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        ChannelsRoutingModule,\r\n        SharedModule,\r\n        NgxPhotoEditorModule,\r\n    ]\r\n})\r\nexport class ChannelsModule {\r\n}\r\n","import {AfterViewInit, Component, Input, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {DESCRIPTION_CHARACTERS_LIMIT} from '@core/constants/global';\r\nimport {FixTextLineBreaksPipe} from '@shared/pipes/fix-text-line-breaks.pipe';\r\n\r\n@Component({\r\n    selector: 'app-about-tab',\r\n    templateUrl: './about-tab.component.html',\r\n    styleUrls: ['./about-tab.component.scss']\r\n})\r\nexport class AboutTabComponent implements OnInit, AfterViewInit {\r\n    aboutForm: FormGroup;\r\n    editMode = false;\r\n    authUser;\r\n    @Input('channelUser') channelUser;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private channelService: ChannelsService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private fixLineBreaks: FixTextLineBreaksPipe\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.aboutForm = this.fb.group({\r\n                description: ['', [Validators.required, Validators.maxLength(DESCRIPTION_CHARACTERS_LIMIT)]],\r\n                id: ['', Validators.required],\r\n                username: ['', Validators.required]\r\n            },\r\n        );\r\n        this.aboutForm.patchValue({\r\n            username: this.channelUser.username,\r\n            id: this.channelUser.channel.id,\r\n            description: this.fixLineBreaks.transform(this.channelUser.channel.description)\r\n            // ...this.channelUser.channel\r\n        });\r\n\r\n    }\r\n\r\n    editModeOn() {\r\n        this.editMode = true;\r\n    }\r\n\r\n    saveChannelDescription() {\r\n        if (this.aboutForm.valid) {\r\n            this.channelService.saveDescription(this.aboutForm.value).subscribe(dt => {\r\n                this.channelUser = dt;\r\n                document.querySelector('.description').innerHTML = this.channelUser.channel.description;\r\n                this.editMode = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        document.querySelector('.description').innerHTML = this.channelUser.channel.description;\r\n    }\r\n\r\n}\r\n","<div class=\"about-tab\">\r\n\r\n\r\n    <div class=\"info\">\r\n        <h2 *ngIf=\"channelUser.channel?.description\">Description</h2>\r\n\r\n        <div class=\"date\">\r\n            <span>Joined {{channelUser.channel.created_at|date: 'd MMM, yyyy'}}</span>\r\n            <button class=\"btn\" (click)=\"editModeOn()\"\r\n                    *ngIf=\"!editMode && authUser.username === channelUser.username\">Edit\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"description\" [hidden]=\"editMode\">\r\n        <p>{{channelUser.channel.description}}</p>\r\n    </div>\r\n\r\n    <div class=\"edit-form-controls\" [hidden]=\"!editMode\">\r\n        <form [formGroup]=\"aboutForm\" id=\"channel-about-form\">\r\n            <textarea rows=\"15\" formControlName=\"description\"></textarea>\r\n\r\n            <button class=\"save\" (click)=\"saveChannelDescription()\">Save</button>\r\n\r\n            <mat-error *ngIf=\"aboutForm.get('description').hasError('maxlength')\">\r\n                Not more than 100 characters please\r\n            </mat-error>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {CroppedEvent} from 'ngx-photo-editor';\r\nimport {UsersService} from '@core/services/users.service';\r\nimport {Base64ToFilePipe} from '@shared/pipes/base64-to-file.pipe';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {LoaderService} from '@core/services/loader.service';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {Subscription} from 'rxjs';\r\nimport {SocketIoService} from '@core/services/socket-io.service';\r\n\r\n@Component({\r\n    selector: 'app-channel-profile',\r\n    templateUrl: './channel-profile.component.html',\r\n    styleUrls: ['./channel-profile.component.scss']\r\n})\r\nexport class ChannelProfileComponent implements OnInit, OnDestroy {\r\n    apiUrl = API_URL;\r\n\r\n    profileChangedEvent: any;\r\n    coverChangedEvent: any;\r\n    profileBase64: any;\r\n    coverBase64: any;\r\n\r\n    subscribedToChannel = false;\r\n    subscribersCount = 0;\r\n\r\n    changingImage = false;\r\n    editMode = false;\r\n\r\n    channelForm: FormGroup;\r\n    subscriptions: Subscription[] = [];\r\n    attemptedToConnect = false;\r\n    usersConnection;\r\n    usersConnectionStatus = 'idle';\r\n\r\n    @Input('channelUser') channelUser;\r\n    @Input('authUser') authUser;\r\n\r\n    @Output() toggleChatBox = new EventEmitter();\r\n\r\n    constructor(\r\n        private usersService: UsersService,\r\n        private base64ToFile: Base64ToFilePipe,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private channelService: ChannelsService,\r\n        private subject: SubjectService,\r\n        private socketService: SocketIoService,\r\n        public loader: LoaderService,\r\n        private fb: FormBuilder\r\n    ) {\r\n\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.channelUser) {\r\n            this.checkChannelSubscription();\r\n            this.initChannelForm();\r\n            // this.detectImageChange();\r\n            this.checkIfUsersConnected();\r\n            this.getAcceptedDeclinedRequests();\r\n            this.getDisconnectUser();\r\n        }\r\n    }\r\n\r\n\r\n    initChannelForm() {\r\n        this.channelForm = this.fb.group({\r\n            id: [''],\r\n            avatar: [''],\r\n            cover: [''],\r\n            name: ['', Validators.required],\r\n            username: ['']\r\n        });\r\n\r\n        this.channelForm.patchValue({\r\n            name: this.channelUser.channel.name,\r\n            id: this.channelUser.channel.id,\r\n            username: this.channelUser.username,\r\n            avatar: this.channelUser.channel.avatar,\r\n            cover: this.channelUser.channel.cover\r\n        });\r\n    }\r\n\r\n    checkIfUsersConnected() {\r\n        this.usersService.checkIfUsersConnected({\r\n            user_id: this.authUser.id,\r\n            channel_user_id: this.channelUser.id\r\n        }).subscribe(dt => {\r\n            this.usersConnection = dt;\r\n            if (dt) {\r\n                this.usersConnectionStatus = dt.confirmed ? 'connected' : 'pending';\r\n            }\r\n        });\r\n    }\r\n\r\n    coverChangeEvent(event: any) {\r\n        this.coverChangedEvent = event;\r\n    }\r\n\r\n    profileChangeEvent(event: any) {\r\n        this.profileChangedEvent = event;\r\n    }\r\n\r\n    detectImageChange() {\r\n        // document.querySelector('img.avatar').addEventListener('load', () => {\r\n        //     console.log('Loading image!!!')\r\n        if (this.profileChangedEvent || this.coverChangedEvent) {\r\n            this.loader.dataLoading = false;\r\n            this.changingImage = false;\r\n            console.log('Avatar changed');\r\n            console.log(this.changingImage);\r\n        }\r\n        // });\r\n    }\r\n\r\n\r\n    profileCropped(event: CroppedEvent) {\r\n        // this.loader.dataLoading = true;\r\n\r\n        this.changingImage = true;\r\n        this.profileBase64 = event.base64;\r\n        const filename = `avatar_${Date.now()}.jpg`;\r\n        const fd = new FormData();\r\n        this.channelForm.patchValue({avatar: filename});\r\n        fd.append('avatar_file', this.base64ToFile.transform(event.base64), filename);\r\n        fd.append('avatar', filename);\r\n        fd.append('id', this.authUser.id);\r\n        this.subscriptions.push(this.usersService.changeProfileImage(fd).subscribe((dt) => {\r\n            this.changeAuthUserInfo(dt);\r\n        }));\r\n    }\r\n\r\n    coverCropped(event: CroppedEvent) {\r\n        this.coverBase64 = event.base64;\r\n        this.changingImage = true;\r\n        const fd = new FormData();\r\n        const filename = `cover_${Date.now()}.jpg`;\r\n        this.channelForm.patchValue({cover: filename});\r\n        fd.append('cover_file', this.base64ToFile.transform(event.base64), filename);\r\n        fd.append('cover', filename);\r\n        fd.append('id', this.authUser.id);\r\n        this.loader.dataLoading = true;\r\n        this.subscriptions.push(this.usersService.changeCoverImage(fd).subscribe((dt) => {\r\n            this.changeAuthUserInfo(dt);\r\n        }));\r\n    }\r\n\r\n    removeCover() {\r\n        this.channelUser.channel.cover = '';\r\n        this.channelForm.patchValue({cover: this.channelUser.channel.cover});\r\n    }\r\n\r\n    removeAvatar() {\r\n        this.channelUser.channel.avatar = '';\r\n        this.channelForm.patchValue({avatar: this.channelUser.channel.avatar});\r\n    }\r\n\r\n    subscribeToChannel(channel): void {\r\n        this.subscriptions.push(this.channelService.subscribeToChannel({\r\n            user_id: this.authUser.id,\r\n            channel_id: channel.id\r\n        }).subscribe(dt => {\r\n            this.subscribedToChannel = dt.status === 'Subscribed';\r\n            this.subscribersCount = dt.subscribers_count;\r\n            this.subscriptions.push(this.channelService.getUserChannelSubscriptions({user_id: this.authUser.id}).subscribe(d => {\r\n                this.subject.setUserSubscriptions(d);\r\n            }));\r\n        }));\r\n    }\r\n\r\n    checkChannelSubscription() {\r\n        // console.log(this.channelUser)\r\n        this.subscriptions.push(this.channelService.checkChannelSubscription({\r\n            user_id: this.authUser.id,\r\n            channel_id: this.channelUser.channel.id\r\n        }).subscribe(dt => {\r\n            this.subscribedToChannel = dt.status === 'Subscribed';\r\n            this.subscribersCount = dt.subscribers_count;\r\n        }));\r\n    }\r\n\r\n    changeAuthUserInfo(dt) {\r\n        localStorage.setItem('token', dt.token);\r\n        this.authUser = this.getAuthUser.transform();\r\n        this.channelUser = this.authUser;\r\n        this.changingImage = false;\r\n        this.subject.changeAuthUser((dt.hasOwnProperty('token') ? dt.token : ''));\r\n        // this.loader.dataLoading = false;\r\n        // console.log(this.channelUser)\r\n    }\r\n\r\n    toggleEditMode() {\r\n        this.editMode = !this.editMode;\r\n    }\r\n\r\n\r\n    saveChanges() {\r\n        console.log('save changes!!!')\r\n        console.log(this.channelForm.value)\r\n        console.log('save changes!!!')\r\n\r\n        if (this.channelForm.valid) {\r\n            this.subscriptions.push(this.channelService.changeChannelDetails(this.channelForm.value).subscribe((dt => {\r\n                this.editMode = false;\r\n                this.changeAuthUserInfo(dt);\r\n            })));\r\n        }\r\n    }\r\n\r\n    toggleBottomChatBox() {\r\n        this.toggleChatBox.emit(this.channelUser);\r\n    }\r\n\r\n    connectWithUser() {\r\n        this.attemptedToConnect = true;\r\n        this.usersConnectionStatus = 'pending';\r\n        this.socketService.connectWithUser({\r\n            authUser: this.authUser,\r\n            channelUser: this.channelUser\r\n        });\r\n    }\r\n\r\n    getAcceptedDeclinedRequests() {\r\n        this.subscriptions.push(this.socketService.acceptedConnection().subscribe((dt: any) => {\r\n            console.log('accepted', dt)\r\n            console.log(dt.receiver_id, this.channelUser.id)\r\n            if ((dt.receiver_id === this.authUser.id && dt.initiator_id === this.channelUser.id)\r\n                || (dt.receiver_id === this.channelUser.id && dt.initiator_id === this.authUser.id)) {\r\n                this.usersConnectionStatus = 'connected';\r\n            }\r\n        }));\r\n\r\n        this.subscriptions.push(this.socketService.declinedConnection().subscribe((dt: any) => {\r\n            console.log('declined')\r\n            this.usersConnectionStatus = 'idle';\r\n        }));\r\n    }\r\n\r\n    disconnectUser() {\r\n        this.socketService.disconnectUsers({\r\n            id: this.usersConnection.id,\r\n            to_username: this.channelUser.username\r\n        });\r\n        this.usersConnectionStatus = 'idle';\r\n    }\r\n\r\n    getDisconnectUser() {\r\n        this.subscriptions.push(this.socketService.getDisconnectUsers({}).subscribe(dt => {\r\n            console.log('disconnected', dt)\r\n            this.usersConnectionStatus = 'idle';\r\n        }));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n}\r\n","<form [formGroup]=\"channelForm\">\r\n    <!--    <ng-container *ngIf=\"channelUser\">-->\r\n    <div class=\"profile-block\">\r\n        <div [hidden]=\"true\" *ngIf=\"channelUser.username === authUser.username\">\r\n            <input type=\"file\" id=\"cover-image-input\" (change)=\"coverChangeEvent($event)\"/>\r\n            <input type=\"hidden\" formControlName=\"cover\">\r\n            <ngx-photo-editor\r\n                [imageChanedEvent]=\"coverChangedEvent\"\r\n                (imageCropped)=\"coverCropped($event)\"\r\n                [autoCrop]=\"false\"\r\n                [viewMode]=\"3\"></ngx-photo-editor>\r\n        </div>\r\n\r\n        <div class=\"cover-image-container\">\r\n            <label for=\"cover-image-input\">\r\n                <img id=\"cover-image\" [src]=\"channelUser.channel?.cover|getImgPath: 'covers'\"\r\n                     (load)=\"detectImageChange()\">\r\n            </label>\r\n            <button mat-icon-button type=\"button\" class=\"remove-cover-btn\" (click)=\"removeCover()\"\r\n                    *ngIf=\"editMode && channelUser.channel.cover\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"sub-block\">\r\n        <div class=\"d-flex align-items-center\">\r\n            <div class=\"avatar-container\">\r\n                <label for=\"profile-image-input\">\r\n                    <img class=\"avatar\" [ngStyle]=\"{opacity: editMode ? 0.5: 1}\" id=\"profile-image\"\r\n                         (load)=\"detectImageChange()\"\r\n                         [src]=\"channelUser.channel.avatar|getImgPath: 'avatars'\">\r\n                    <mat-icon id=\"add-photo-btn\" *ngIf=\"editMode && !channelUser.channel.avatar\">add</mat-icon>\r\n                </label>\r\n                <mat-icon (click)=\"removeAvatar()\" class=\"remove-avatar-btn\"\r\n                          *ngIf=\"editMode && channelUser.channel.avatar\">clear\r\n                </mat-icon>\r\n            </div>\r\n\r\n            <div [hidden]=\"true\" *ngIf=\"this.channelUser.username === this.authUser.username\">\r\n                <input type=\"file\" id=\"profile-image-input\" (change)=\"profileChangeEvent($event)\"/>\r\n                <input type=\"hidden\" formControlName=\"avatar\">\r\n                <ngx-photo-editor\r\n                    [imageChanedEvent]=\"profileChangedEvent\"\r\n                    (imageCropped)=\"profileCropped($event)\"\r\n                    [aspectRatio]=\"4/3\"\r\n                    [viewMode]=\"1\"\r\n                    [resizeToWidth]=\"500\"></ngx-photo-editor>\r\n\r\n            </div>\r\n            <div>\r\n                <p class=\"channel-name\" id=\"channel-name\" *ngIf=\"!editMode\">{{channelUser.channel.name}}</p>\r\n                <mat-form-field *ngIf=\"editMode\">\r\n                    <input matInput formControlName=\"name\" id=\"channel-name-input\"\r\n                           (keyup.enter)=\"$event.preventDefault()\">\r\n                </mat-form-field>\r\n                <p class=\"subscribers-count\">{{subscribersCount + ' subscriber' + (subscribersCount === 1 ? '' : 's')}} </p>\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"loader\" *ngIf=\"changingImage\">\r\n            <mat-spinner [diameter]=\"50\"></mat-spinner>\r\n        </div>\r\n        <div class=\"d-flex align-items-center\" *ngIf=\"channelUser.username !== authUser.username\">\r\n            <!--            <i class=\"sub-bell fas fa-bell\"></i>-->\r\n            <a class=\"add-friend-btn\" (click)=\"connectWithUser()\"\r\n               *ngIf=\"usersConnectionStatus==='idle'\">\r\n                <mat-icon>person_add</mat-icon>\r\n                <span>Connect</span>\r\n            </a>\r\n\r\n            <a class=\"waiting-for-confirmation-btn\"\r\n               *ngIf=\"usersConnectionStatus==='pending'\">\r\n                <mat-icon>check</mat-icon>\r\n                <span>Waiting for confirmation</span>\r\n            </a>\r\n\r\n            <button class=\"users-connected-btn\" *ngIf=\"usersConnectionStatus==='connected'\" [matMenuTriggerFor]=\"menu\">\r\n                <mat-icon>check</mat-icon>\r\n                <span>Connected</span>\r\n            </button>\r\n\r\n            <mat-menu #menu=\"matMenu\">\r\n                <button mat-menu-item (click)=\"disconnectUser()\">\r\n                    <mat-icon>close</mat-icon>\r\n                    <span>Disconnect</span>\r\n                </button>\r\n            </mat-menu>\r\n\r\n            <a (click)=\"toggleBottomChatBox()\" class=\"toggle-chat-box-btn\" *ngIf=\"usersConnectionStatus==='connected'\">\r\n                <mat-icon>chat</mat-icon>\r\n                <span>Message</span>\r\n            </a>\r\n            <a class=\"subscribe-btn\" *ngIf=\"!subscribedToChannel\" (click)=\"subscribeToChannel(channelUser.channel)\">\r\n                <mat-icon>favorite_border</mat-icon>\r\n                <span>Subscribe</span>\r\n            </a>\r\n            <a class=\"subscribe-btn subscribed\" *ngIf=\"subscribedToChannel\"\r\n               (click)=\"subscribeToChannel(channelUser.channel)\">\r\n                <mat-icon>favorite</mat-icon>\r\n                <span>Subscribed</span>\r\n            </a>\r\n        </div>\r\n        <div class=\"d-flex align-items-center\" *ngIf=\"channelUser.username === authUser.username\">\r\n            <button class=\"btn\" type=\"button\" id=\"edit-channel\" (click)=\"toggleEditMode()\" *ngIf=\"!editMode\">\r\n                <mat-icon>edit</mat-icon>\r\n                Edit channel\r\n            </button>\r\n            <button class=\"btn\" type=\"button\" id=\"cancel-changes\" *ngIf=\"editMode\" (click)=\"toggleEditMode()\">\r\n                <mat-icon>cancel</mat-icon>\r\n                Cancel\r\n            </button>\r\n            <button class=\"btn\" type=\"button\" id=\"save-channel-details\" *ngIf=\"editMode\" (click)=\"saveChanges()\">\r\n                <mat-icon>save</mat-icon>\r\n                Save changes\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!--    </ng-container>-->\r\n</form>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {Router} from '@angular/router';\r\nimport {PlaylistsService} from '@core/services/playlists.service';\r\nimport {AddPlaylistDialogComponent} from '@core/components/modals/add-playlist-dialog/add-playlist-dialog.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {FilterOutFalsyValuesFromObjectPipe} from '@shared/pipes/filter-out-falsy-values-from-object.pipe';\r\nimport {Subscription} from 'rxjs';\r\nimport {ConfirmationDialogComponent} from '@core/components/modals/confirmation-dialog/confirmation-dialog.component';\r\nimport trackByElement from '@core/helpers/track-by-element';\r\n\r\n@Component({\r\n    selector: 'app-playlists-tab',\r\n    templateUrl: './playlists-tab.component.html',\r\n    styleUrls: ['./playlists-tab.component.scss']\r\n})\r\nexport class PlaylistsTabComponent implements OnInit {\r\n    playlists = [];\r\n    apiUrl = API_URL;\r\n    showFilters = false;\r\n    search = '';\r\n    filters = null;\r\n    subscriptions: Subscription[] = [];\r\n    trackByElement = trackByElement;\r\n    @Input('channelUser') channelUser;\r\n    @Input('authUser') authUser;\r\n\r\n    constructor(\r\n        public router: Router,\r\n        private playlistsService: PlaylistsService,\r\n        private subjectService: SubjectService,\r\n        private dialog: MatDialog,\r\n        private getExactParams: FilterOutFalsyValuesFromObjectPipe\r\n    ) {\r\n\r\n    }\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.search = localStorage.getItem('search');\r\n        this.getPlaylists({search: this.search, filters: this.filters});\r\n        this.getFiltersToggleState();\r\n    }\r\n\r\n    getFiltersToggleState() {\r\n        this.subscriptions.push(this.subjectService.getToggleFiltersData().subscribe(dt => {\r\n            this.showFilters = dt;\r\n        }));\r\n    }\r\n\r\n\r\n    getPlaylists(params) {\r\n\r\n        params = this.getExactParams.transform(params);\r\n\r\n        this.playlistsService.get({\r\n            channel_id: this.channelUser.channel.id,\r\n            user_id: this.authUser.id, ...params\r\n        }).subscribe(dt => {\r\n            this.playlists = dt;\r\n            // console.log(this.authUser, this.channelUser)\r\n        });\r\n    }\r\n\r\n    openAddPlaylistModal() {\r\n        this.dialog.open(AddPlaylistDialogComponent,\r\n            {\r\n                data: {channel_id: this.channelUser.channel.id}\r\n            })\r\n            .afterClosed().subscribe(dt => {\r\n            this.getPlaylists({search: this.search, filters: this.filters});\r\n        });\r\n    }\r\n\r\n    openPlaylistPage(playlist, firstVideoId) {\r\n        const route = 'videos/play';\r\n        const params = {id: firstVideoId, playlist_id: playlist.id};\r\n        this.router.navigate([route], {queryParams: params});\r\n    }\r\n\r\n    getSearchResults(search) {\r\n        this.search = search;\r\n        this.getPlaylists({search, filters: this.filters});\r\n    }\r\n\r\n    getFilteredPlaylists(filters) {\r\n        this.filters = filters;\r\n        this.getPlaylists({search: this.search, filters});\r\n    }\r\n\r\n    goToEditPage(playlist) {\r\n        this.router.navigate(['playlists/single/' + playlist.id]);\r\n    }\r\n\r\n    removePlaylist(id, channelId) {\r\n        this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed) {\r\n                this.playlistsService.removePlaylist({id, channel_id: channelId}).subscribe(dt => {\r\n                    this.getPlaylists({search: this.search, filters: this.filters});\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","<app-video-filters *ngIf=\"showFilters\" (filter)=\"getFilteredPlaylists($event)\"></app-video-filters>\r\n<div class=\"playlist-tab\">\r\n    <ng-container *ngIf=\"authUser.username === channelUser.username\">\r\n        <button class=\"btn new-playlist\" (click)=\"openAddPlaylistModal()\">Add New Playlist</button>\r\n        <table *ngIf=\"playlists.length > 0\" class=\"table-responsive\">\r\n            <tr>\r\n                <th>Playlist</th>\r\n                <th>Visibility</th>\r\n                <th>Created at</th>\r\n                <th>Last updated</th>\r\n                <th>Video count</th>\r\n                <th></th>\r\n            </tr>\r\n            <tr *ngFor=\"let playlist of playlists; trackBy:trackByElement\">\r\n                <td>\r\n                    <div class=\"img-info\">\r\n                        <img class=\"thumbnail\" [src]=\"playlist.thumbnail|getImgPath\" (click)=\"goToEditPage(playlist)\">\r\n                        <div class=\"info\">\r\n                            <h3>{{playlist.name}}</h3>\r\n                            <p>{{playlist.description}}</p>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <ng-container *ngIf=\"playlist.privacy\">\r\n                        <mat-icon>visibility_off</mat-icon>\r\n                        <span>Private</span>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"!playlist.privacy\">\r\n                        <mat-icon>visibility_on</mat-icon>\r\n                        <span>Public</span>\r\n                    </ng-container>\r\n                </td>\r\n                <td>\r\n                    <span>{{playlist.created_at|date: 'd MMM, yyyy'}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{playlist.updated_at|date: 'd MMM, yyyy'}}</span>\r\n                </td>\r\n                <td>\r\n                    <span>{{playlist.videos.length}}</span>\r\n                </td>\r\n                <td>\r\n                    <span class=\"material-icons\" (click)=\"goToEditPage(playlist)\">create</span>\r\n                    <mat-icon (click)=\"removePlaylist(playlist.id, channelUser.id)\">delete</mat-icon>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"authUser.username !== channelUser.username\">\r\n        <div class=\"playlists-items\">\r\n            <ng-container *ngFor=\"let playlist of playlists\">\r\n                <div class=\"item\" >\r\n                    <div class=\"top-wrap\" (click)=\"openPlaylistPage(playlist, playlist.videos[0]?.id)\">\r\n                        <img class=\"thumbnail\" [src]=\"playlist.thumbnail|getImgPath\">\r\n                        <div class=\"overlay-info\">\r\n                            <p class=\"icon\"><span class=\"material-icons\">playlist_play</span></p>\r\n                            <p>{{playlist.name}}</p>\r\n                            <p class=\"video-count\">{{playlist.videos.length + (playlist.videos.length === 1 ? ' video' : ' videos')}}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"info\">\r\n                        <h2>{{playlist.name}}</h2>\r\n                        <p>{{playlist.description}}</p>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n\r\n    </ng-container>\r\n    <div id=\"no-playlists-found\" *ngIf=\"playlists.length === 0\">\r\n        <small class=\"error\">No playlists found for this channel</small>\r\n    </div>\r\n</div>\r\n","<mat-spinner [diameter]=\"15\" *ngIf=\"loader.channelLoading.status==='loading'\"></mat-spinner>\r\n<div class=\"profile-list\">\r\n    <!--    <app-categories></app-categories>-->\r\n    <ng-container *ngIf=\"channelUser\">\r\n        <app-user-tags *ngIf=\"auth.loggedIn()\" (tagSelected)=\"getVideosByTag($event)\"></app-user-tags>\r\n        <app-channel-profile [channelUser]=\"channelUser\" [authUser]=\"authUser\" *ngIf=\"channelUser\"\r\n                             (toggleChatBox)=\"toggleChatBox()\"></app-channel-profile>\r\n        <div class=\"stocks-watchlist pWatchlist\">\r\n            <div class=\"profile-list user-profile-block\">\r\n                <ul class=\"nav nav-tabs\" id=\"channel-tabs-list\" role=\"tablist\">\r\n                    <li class=\"nav-item\" *ngFor=\"let tab of allTabs;trackBy:trackByElement\">\r\n                        <a class=\"nav-link\" [class.active]=\"tab === activeTab\" id=\"{{tab.link}}-tab\"\r\n                           (click)=\"changeActiveTab(tab)\" data-toggle=\"tab\" [href]=\"'#'+tab.link\" role=\"tab\"\r\n                           aria-controls=\"pWatch\"\r\n                           aria-selected=\"true\">{{tab.name}}</a>\r\n                    </li>\r\n                </ul>\r\n\r\n                <div class=\"loader-wrapper\">\r\n                    <div class=\"spinner-container\">\r\n                        <mat-spinner [diameter]=\"15\"\r\n                                     *ngIf=\"loader.stocksLoading.status==='loading'&& activeTab.name==='watchlist'\"></mat-spinner>\r\n                    </div>\r\n                </div>\r\n                <div class=\"search-wrapper\">\r\n                    <div class=\"toggle-filters-btn\">\r\n                        <button class=\"filter-toggle-btn\"\r\n                                *ngIf=\"activeTab.name!=='About' && activeTab.name!=='Watchlist'\" type=\"button\"\r\n                                [class.filters-active]=\"showFilters\"\r\n                                (click)=\"toggleFilters()\">\r\n                            <mat-icon>tune</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        <app-search-videos-form (search)=\"searchVideos($event)\"\r\n                                                *ngIf=\"activeTab.name!=='About' && activeTab.name!=='Watchlist'\"></app-search-videos-form>\r\n                    </div>\r\n                    <div class=\"right-side\" *ngIf=\"activeTab.name==='Watchlist'\">\r\n\r\n                        <div class=\"open-add-stock-modal\" *ngIf=\"activeTab.name==='Watchlist'\" (click)=\"openModal()\">\r\n                            <button type=\"button\">\r\n                                <mat-icon>add_circle_outline</mat-icon>\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div class=\"watchlist-search d-\" *ngIf=\"activeTab.name!=='About'\">\r\n                            <app-search-stocks-form *ngIf=\"activeTab.name==='Watchlist' && userStocks?.length > 0\"\r\n                                                    [whiteForm]=\"true\" [returnSearchText]=\"true\"\r\n                                                    (search)=\"searchInUserStocks($event)\">\r\n                            </app-search-stocks-form>\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <app-watchlist-tab *ngIf=\"activeTab.name === 'Watchlist'\" [channelUser]=\"channelUser\"></app-watchlist-tab>\r\n            <app-videos-tab *ngIf=\"activeTab.name === 'Videos'\" [channelUser]=\"channelUser\"\r\n                            [authUser]=\"authUser\"></app-videos-tab>\r\n            <app-playlists-tab *ngIf=\"activeTab.name === 'Playlists'\" [channelUser]=\"channelUser\"\r\n                               [authUser]=\"authUser\"></app-playlists-tab>\r\n            <app-about-tab *ngIf=\"activeTab.name === 'About'\" [channelUser]=\"channelUser\"></app-about-tab>\r\n        </div>\r\n    </ng-container>\r\n    <div class=\"channel-not-found\" *ngIf=\"!channelUser && loader.channelLoading.status==='finished'\">\r\n        <p>Channel with such name is not found</p>\r\n    </div>\r\n</div>\r\n<app-chat-bottom-box *ngIf=\"showChatBox && channelUser\" [channelUser]=\"channelUser\"\r\n                     (close)=\"showChatBox = false\"></app-chat-bottom-box>\r\n","import {Component, OnDestroy, OnInit, TemplateRef, ViewChild} from '@angular/core';\r\nimport {API_URL, OWL_OPTIONS, PROFILE_PAGE_TABS} from '@core/constants/global';\r\nimport {User} from '@shared/models/user';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {UsersService} from '@core/services/users.service';\r\nimport {Base64ToFilePipe} from '@shared/pipes/base64-to-file.pipe';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {PlaylistsService} from '@core/services/playlists.service';\r\nimport {WatchlistTabComponent} from '@app/channels/show-channel/watchlist-tab/watchlist-tab.component';\r\nimport {VideosTabComponent} from '@app/channels/show-channel/videos-tab/videos-tab.component';\r\nimport {PlaylistsTabComponent} from '@app/channels/show-channel/playlists-tab/playlists-tab.component';\r\nimport {AuthService} from '@core/services/auth.service';\r\nimport {StocksListsModalComponent} from '@shared/components/stocks-lists-modal/stocks-lists-modal.component';\r\nimport {LoaderService} from '@core/services/loader.service';\r\nimport {UpdateUserStocksPipe} from '@shared/pipes/update-user-stocks.pipe';\r\nimport {StocksService} from '@core/services/stocks.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport trackByElement from '@core/helpers/track-by-element';\r\nimport {ChatService} from '@core/services/chat.service';\r\n\r\n@Component({\r\n    selector: 'app-show-channel',\r\n    templateUrl: './show-channel.component.html',\r\n    styleUrls: ['./show-channel.component.scss']\r\n})\r\nexport class ShowChannelComponent implements OnInit, OnDestroy {\r\n\r\n    authUser;\r\n\r\n    activeTab;\r\n    allTabs = PROFILE_PAGE_TABS;\r\n\r\n    apiUrl = API_URL;\r\n\r\n\r\n    channelUser;\r\n    passedUsername;\r\n    passedTab;\r\n\r\n    searchVideosForm: FormGroup;\r\n\r\n\r\n    playlists = [];\r\n    editMode = false;\r\n\r\n    showFilters = false;\r\n    filters = null;\r\n\r\n    dataLoading = 'idle';\r\n\r\n    userStocks = [];\r\n    filteredStocks = [];\r\n    subscriptions = [];\r\n    trackByElement = trackByElement;\r\n\r\n    showChatBox = false;\r\n\r\n\r\n    @ViewChild(WatchlistTabComponent) watchListTab: WatchlistTabComponent;\r\n    @ViewChild(VideosTabComponent) videosTab: VideosTabComponent;\r\n    @ViewChild(PlaylistsTabComponent) playlistsTab: PlaylistsTabComponent;\r\n\r\n    constructor(\r\n        private videoService: VideoService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        public router: Router,\r\n        private usersService: UsersService,\r\n        private base64ToFile: Base64ToFilePipe,\r\n        private route: ActivatedRoute,\r\n        private fb: FormBuilder,\r\n        private subjectService: SubjectService,\r\n        private channelService: ChannelsService,\r\n        private playlistsService: PlaylistsService,\r\n        private subject: SubjectService,\r\n        public auth: AuthService,\r\n        private dialog: MatDialog,\r\n        public loader: LoaderService,\r\n        private updateStocks: UpdateUserStocksPipe,\r\n        private stocksService: StocksService,\r\n        private toastr: ToastrService,\r\n        private chatService: ChatService\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n        this.passedUsername = this.route.snapshot.queryParams.username;\r\n        this.passedTab = this.route.snapshot.queryParams.tab;\r\n        this.searchVideosForm = this.fb.group({search: ['', Validators.required]});\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // localStorage.setItem('search', '');\r\n        this.activeTab = PROFILE_PAGE_TABS.filter(tabs => tabs.name.toLowerCase() === this.passedTab)?.[0] || PROFILE_PAGE_TABS[0];\r\n        this.getUserInfo();\r\n\r\n        this.subject.currentUserStocks.subscribe((dt: any) => {\r\n            this.userStocks = dt.stocks;\r\n            this.filteredStocks = this.userStocks;\r\n        });\r\n    }\r\n\r\n    toggleFilters() {\r\n        this.showFilters = !this.showFilters;\r\n        this.subject.setToggleFiltersData(this.showFilters);\r\n    }\r\n\r\n    getUserInfo() {\r\n        this.loader.channelLoading.status = 'loading';\r\n        const viewingOwnChannel = +(this.authUser.username === this.passedUsername);\r\n        if (this.passedUsername) {\r\n            this.usersService.getUserInfo({\r\n                username: this.passedUsername,\r\n                own_channel: viewingOwnChannel\r\n            }).subscribe(dt => {\r\n                if (dt) {\r\n                    this.channelUser = dt;\r\n                }\r\n                this.loader.channelLoading.status = 'finished';\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    async changeActiveTab(tab) {\r\n        this.activeTab = tab;\r\n        this.showFilters = false;\r\n        await this.router.navigate([`/channels/show`], {\r\n            queryParams: {\r\n                tab: tab.name.toLowerCase(),\r\n                username: this.passedUsername\r\n            }\r\n        });\r\n        this.subject.setToggleFiltersData(this.showFilters);\r\n        if (this.activeTab.name === 'Videos') {\r\n            this.getUserInfo();\r\n        }\r\n    }\r\n\r\n    searchInUserStocks(e) {\r\n        localStorage.setItem('searchStock', e.search);\r\n        this.watchListTab.getSearchResults(e);\r\n    }\r\n\r\n    searchVideos(e?) {\r\n        localStorage.setItem('search', e.search);\r\n        this.showFilters = false;\r\n        this.subject.setToggleFiltersData(this.showFilters);\r\n        if (this.activeTab.name === 'Videos') {\r\n            this.searchInUserVideos(e.search);\r\n        } else if (this.activeTab.name === 'Playlists') {\r\n            this.searchInPlaylists(e.search);\r\n        }\r\n\r\n    }\r\n\r\n    searchInVideosByAuthor(s) {\r\n        if (this.watchListTab) {\r\n            // this.watchListTab.getSearchResults(s);\r\n        }\r\n\r\n    }\r\n\r\n    searchInUserVideos(s) {\r\n        if (this.videosTab) {\r\n            this.videosTab.getSearchResults(s);\r\n        }\r\n    }\r\n\r\n    searchInPlaylists(s) {\r\n        if (this.playlistsTab) {\r\n            this.playlistsTab.getSearchResults(s);\r\n        }\r\n    }\r\n\r\n\r\n    async getVideosByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n    openModal() {\r\n        this.dialog.open(StocksListsModalComponent, {\r\n            maxWidth: '100vw',\r\n            maxHeight: '100vh',\r\n            height: '100%',\r\n            width: '100%',\r\n            panelClass: 'stocks-lists-modal'\r\n        }).afterClosed().subscribe(dt => {\r\n        });\r\n    }\r\n\r\n    isStockFollowed(stock) {\r\n        return !!this.userStocks.find(s => s.name === stock.name);\r\n    }\r\n\r\n    updateFollowedStocksList(stock) {\r\n        const result = this.updateStocks.transform(this.userStocks, stock, this.isStockFollowed(stock));\r\n        if (result) {\r\n            this.loader.stocksLoading.status = 'loading';\r\n            this.subscriptions.push(this.stocksService.updateFollowedStocks(\r\n                {user_id: this.authUser.id, ...{stocks: result}})\r\n                .subscribe(dt => {\r\n                    this.userStocks = dt?.user_stocks || [];\r\n                    this.loader.stocksLoading.status = 'finished';\r\n                    this.subject.changeUserStocks({stocks: this.userStocks, empty: this.userStocks.length === 0});\r\n                }));\r\n        }\r\n\r\n    }\r\n\r\n    toggleChatBox() {\r\n        this.showChatBox = !this.showChatBox;\r\n    }\r\n\r\n\r\n\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {OwlOptions} from 'ngx-owl-carousel-o';\r\nimport {API_URL, OWL_OPTIONS} from '@core/constants/global';\r\nimport {Router} from '@angular/router';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {FilterOutFalsyValuesFromObjectPipe} from '@shared/pipes/filter-out-falsy-values-from-object.pipe';\r\n\r\n@Component({\r\n    selector: 'app-videos-tab',\r\n    templateUrl: './videos-tab.component.html',\r\n    styleUrls: ['./videos-tab.component.scss']\r\n})\r\nexport class VideosTabComponent implements OnInit {\r\n\r\n    owlOptions: OwlOptions = OWL_OPTIONS;\r\n    apiUrl = API_URL;\r\n    showFilters = false;\r\n    search = '';\r\n    filters = null;\r\n    userVideos = [];\r\n    videosLoaded = false;\r\n\r\n    @Input('channelUser') channelUser;\r\n    @Input('authUser') authUser;\r\n\r\n    constructor(\r\n        public router: Router,\r\n        private videoService: VideoService,\r\n        private subjectService: SubjectService,\r\n        private getExactParams: FilterOutFalsyValuesFromObjectPipe\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.subjectService.getToggleFiltersData().subscribe(dt => {\r\n            this.showFilters = dt;\r\n        });\r\n    }\r\n\r\n    getUserVideos(params) {\r\n\r\n        params = this.getExactParams.transform(params);\r\n        params.user_id = this.channelUser.id;\r\n        this.videoService.getUserVideos(params).subscribe(dt => {\r\n            this.videosLoaded = true;\r\n            this.channelUser.videos = dt?.videos;\r\n        });\r\n    }\r\n\r\n    getSearchResults(s) {\r\n        this.search = s;\r\n        this.getUserVideos({search: this.search, filters: this.filters});\r\n    }\r\n\r\n    getFilteredVideos(e) {\r\n        this.filters = e;\r\n        this.getUserVideos({search: this.search, filters: this.filters});\r\n    }\r\n\r\n}\r\n","<app-video-filters *ngIf=\"showFilters\" (filter)=\"getFilteredVideos($event)\"></app-video-filters>\r\n<app-videos-list-holder [videos]=\"channelUser.videos\" [removable]=\"authUser.username === channelUser.username\"></app-videos-list-holder>\r\n","import {ChangeDetectorRef, Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {Router} from '@angular/router';\r\nimport {Subscription} from 'rxjs';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {FilterOutFalsyValuesFromObjectPipe} from '@shared/pipes/filter-out-falsy-values-from-object.pipe';\r\nimport {StocksService} from '@core/services/stocks.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {User} from '@shared/models/user';\r\nimport {updateStockDetails} from '@core/helpers/update-stock-details';\r\nimport {LoaderService} from '@core/services/loader.service';\r\nimport {PageEvent} from '@angular/material/paginator';\r\nimport {filter} from 'rxjs/operators';\r\nimport {Stock} from '@shared/models/stock';\r\n\r\n@Component({\r\n    selector: 'app-watchlist-tab',\r\n    templateUrl: './watchlist-tab.component.html',\r\n    styleUrls: ['./watchlist-tab.component.scss']\r\n})\r\nexport class WatchlistTabComponent implements OnInit, OnDestroy {\r\n    apiUrl = API_URL;\r\n    authUser: User;\r\n    search: string | null;\r\n\r\n    subscriptions: Subscription[] = [];\r\n    userStocks: Stock[] = [];\r\n    filteredStocks: Stock[] = [];\r\n\r\n    stocksLoading = 'idle';\r\n\r\n\r\n    @Input('channelUser') channelUser;\r\n\r\n    constructor(\r\n        private videoService: VideoService,\r\n        private subjectService: SubjectService,\r\n        public router: Router,\r\n        private getExactParams: FilterOutFalsyValuesFromObjectPipe,\r\n        private stocksService: StocksService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private subject: SubjectService,\r\n        private cdr: ChangeDetectorRef,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.authUser = this.getAuthUser.transform();\r\n        this.search = localStorage.getItem('searchStock');\r\n        this.stocksLoading = 'loading';\r\n        this.subscriptions.push(\r\n            this.subject.currentUserStocks\r\n                .pipe(filter(d => !d.initial))\r\n                .subscribe(dt => {\r\n                    this.userStocks = dt.stocks;\r\n                    this.filteredStocks = this.userStocks;\r\n                    this.stocksLoading = 'finished';\r\n                }));\r\n    }\r\n\r\n    getSearchResults(s) {\r\n        this.search = s;\r\n        if (s.search) {\r\n            this.filteredStocks = this.userStocks.filter(us => us.name.toLowerCase().includes(s.search));\r\n        } else {\r\n            this.filteredStocks = this.userStocks;\r\n        }\r\n    }\r\n\r\n    saveUpdatedStocksList(stocks) {\r\n        this.stocksLoading = 'loading';\r\n        this.subscriptions.push(this.stocksService.updateFollowedStocks({\r\n            user_id: this.authUser.id,\r\n            ...{stocks}\r\n        }).subscribe(dt => {\r\n            this.userStocks = dt?.user_stocks || [];\r\n            this.subject.changeUserStocks({stocks: this.userStocks, empty: this.userStocks.length === 0});\r\n            this.stocksLoading = 'finished';\r\n            this.cdr.detectChanges();\r\n        }));\r\n    }\r\n\r\n    updateStocksPriority(e) {\r\n        const sendData = {\r\n            order_type: 'custom',\r\n            rows: JSON.stringify(e),\r\n            user_id: this.authUser.id\r\n        };\r\n\r\n        this.subject.changeUserStocks({stocks: e, dragdrop: true});\r\n        this.stocksService.updateUserStocksPriority(sendData).subscribe(dt => {\r\n            localStorage.setItem('token', (dt.hasOwnProperty('token') ? dt.token : ''));\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n}\r\n","<div *ngIf=\"filteredStocks && channelUser.username === authUser.username\">\r\n    <mat-spinner *ngIf=\"stocksLoading==='loading'\" [diameter]=\"20\"></mat-spinner>\r\n    <small class=\"error\" *ngIf=\"userStocks?.length === 0 && stocksLoading==='finished'\">\r\n        No stocks added to watchlist</small>\r\n    <app-stock-tiles [stocks]=\"filteredStocks\" [userStocks]=\"userStocks\" *ngIf=\"userStocks?.length > 0\"\r\n                     (updatedStocksList)=\"saveUpdatedStocksList($event)\" [followingAllowed]=\"true\"\r\n                     (updatedStocksPriority)=\"updateStocksPriority($event)\"\r\n    ></app-stock-tiles>\r\n</div>\r\n"]}