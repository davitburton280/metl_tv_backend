{"version":3,"sources":["webpack:///src/app/videos/play-video/play-video.component.html","webpack:///src/app/videos/play-video/play-video.component.ts","webpack:///src/app/videos/play-video/video-details-form/video-details-form.component.ts","webpack:///src/app/videos/play-video/video-details-form/video-details-form.component.html","webpack:///src/app/videos/play-video/video-suggestions/video-suggestions.component.html","webpack:///src/app/videos/play-video/video-suggestions/video-suggestions.component.ts","webpack:///src/app/videos/show-saved-videos/show-saved-videos.component.html","webpack:///src/app/videos/show-saved-videos/show-saved-videos.component.ts","webpack:///src/app/videos/show-videos/show-playlists-list/show-playlists-list.component.html","webpack:///src/app/videos/show-videos/show-playlists-list/show-playlists-list.component.ts","webpack:///src/app/videos/show-videos/show-regular-list/show-regular-list.component.html","webpack:///src/app/videos/show-videos/show-regular-list/show-regular-list.component.ts","webpack:///src/app/videos/show-videos/show-search-results/show-search-results.component.html","webpack:///src/app/videos/show-videos/show-search-results/show-search-results.component.ts","webpack:///src/app/videos/show-videos/show-videos.component.ts","webpack:///src/app/videos/show-videos/show-videos.component.html","webpack:///src/app/videos/videos-routing.module.ts","webpack:///src/app/videos/videos.module.ts"],"names":["PlayVideoComponent","route","videoService","router","getAuthUser","auth","toastr","playlistsService","apiUrl","userVideoConnection","liked","disliked","saved","viewed","isProduction","production","videoJSPlayerOptions","autoplay","controls","bigPlayButton","progressControl","fluid","preload","html5","vhs","withCredentials","overrideNative","nativeAudioTracks","nativeVideoTracks","sources","viewsCount","showTagsForm","authUser","transform","videoId","snapshot","queryParams","id","params","getVideoById","subscribe","dt","videoData","loggedIn","checkUserVideoConnection","updateViewsCount","indexUserTags","users_vids","find","u","users_videos","user_id","video_id","updateViews","d","action","getLikesState","updateLikes","likes","dislikes","error","tags","navigate","username","name","tag","saveVideo","e","saveVideoDetails","window","screen","availWidth","selector","templateUrl","styleUrls","VideoDetailsFormComponent","fb","formReady","isSubmitted","separatorKeysCodes","videoDetailsForm","group","required","patchValue","event","input","value","trim","push","index","indexOf","splice","valid","emit","add","saveDetails","VideoSuggestionsComponent","dialog","playlistOpened","videoSuggestions","urlParams","playlistId","playlist_id","getById","playlistData","get","limit","videos","video","navigateByUrl","skipLocationChange","then","open","afterClosed","confirmed","removeVideoFromPlaylist","oldVideoIndex","nextVideo","openVideoPage","ShowSavedVideosComponent","subject","channelsService","channelsVideos","getUserSavedVideos","userVideos","r","channel","ShowPlaylistsListComponent","playlist","firstVideoId","ShowRegularListComponent","v","duration","diff","created_at","Math","floor","asDays","ShowSearchResultsComponent","subscribeToChannel","channel_id","getUserChannelSubscriptions","setUserSubscriptions","checkIfSubscribed","subscribers","filter","s","replace","ShowVideosComponent","getExactParams","items","playlists","showTrending","showFilters","filters","filterStatus","subscriptions","loadingVideos","search","url","includes","selectedTag","searchChannelsVideos","getVideosList","withPlaylists","trending","searchWithVideos","length","description","forEach","unsubscribe","routes","path","component","pathMatch","data","title","canActivate","VideosRoutingModule","forChild","imports","exports","VideosModule","declarations"],"mappings":"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","file":"videos-videos-module-es5.js","sourcesContent":["<app-user-tags *ngIf=\"auth.loggedIn()\" (tagSelected)=\"getVideosByTag($event)\"></app-user-tags>\r\n<div class=\"ads-block\">\r\n    <div class=\"ads-block-left\">\r\n        <ng-container *ngIf=\"videoData\">\r\n            <div class=\"videoWrap\">\r\n                <app-vjs-player [videoData]=\"videoData\" [options]=\"videoJSPlayerOptions\"></app-vjs-player>\r\n            </div>\r\n\r\n            <div class=\"main-tags\">\r\n                <div class=\"main-tags-text\">\r\n                    <span *ngIf=\"videoData.tags?.length === 0\">No tags defined for this video</span>\r\n                    <ng-container *ngIf=\"videoData.tags?.length > 0\">\r\n                        <p *ngFor=\"let tag of videoData.tags\" class=\"tag\" (click)=\"openVideoByTag(tag.name)\">\r\n                            #{{tag.name}}</p>\r\n                    </ng-container>\r\n                </div>\r\n\r\n                <div class=\"main-tags-like\">\r\n                    <div class=\"main-tags-share\" (click)=\"updateLikes(videoData, 'like')\">\r\n                        <i class=\"fas fa-thumbs-up\" [class.liked]=\"userVideoConnection?.liked\"></i>\r\n                        <p>{{videoData.likes}}</p>\r\n                    </div>\r\n                    <div class=\"main-tags-share\" (click)=\"updateLikes(videoData, 'dislike')\">\r\n                        <i class=\"fas fa-thumbs-down\"\r\n                           [class.disliked]=\"userVideoConnection?.disliked\"></i>\r\n                        <p>{{videoData.dislikes}}</p>\r\n                    </div>\r\n                    <div class=\"main-tags-share\">\r\n                        <i class=\"fas fa-share-alt\"></i>\r\n                        <p>Share</p>\r\n                    </div>\r\n                    <div class=\"main-tags-share\" (click)=\"saveVideo(videoData)\"\r\n                         [class.saved]=\"userVideoConnection?.saved === 'saved'\">\r\n                        <i class=\"fas fa-plus-square\"></i>\r\n                        <p>{{userVideoConnection?.saved === 'saved' ? 'Saved' : 'Save'}}</p>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"tags-container\">\r\n                <div class=\"editable-details\" *ngIf=\"!showTagsForm\">\r\n                    <p class=\"ads-text-1\">{{videoData?.name}}</p>\r\n                    <button id=\"add-tags\" *ngIf=\"!showTagsForm && authUser?.id === videoData.author_id\"\r\n                            (click)=\"showTagsForm = !showTagsForm\">\r\n                        <mat-icon>edit</mat-icon>\r\n                        <span>Edit details</span>\r\n                    </button>\r\n                </div>\r\n                <app-video-details-form [videoData]=\"videoData\" *ngIf=\"showTagsForm\"\r\n                                        (formReady)=\"saveVideoDetails($event)\"></app-video-details-form>\r\n            </div>\r\n            <div class=\"details-row\">\r\n                <span class=\"ads-text-2\">{{videoData?.views + ' view' + (videoData?.views === 1 ? '' : 's')}}</span>\r\n                <span class=\"dot\">&middot;</span>\r\n                <span class=\"ads-text-2\">{{videoData.created_at|dateFromNow}}</span>\r\n            </div>\r\n            <div class=\"main-item-block channel-block\" (click)=\"openChannelPage(videoData)\" *ngIf=\"videoData?.channel\">\r\n                <img class=\"avatar\" [src]=\"videoData.channel.avatar|getImgPath:'avatars'\">\r\n                <div>\r\n                    <p class=\"channel-name\">{{videoData.channel.name}}</p>\r\n                    <p class=\"main-text-4\">{{videoData.channel.subscribers_count + ' subscriber' + (videoData.channel.subscribers_count === 1 ? '' : 's')}}</p>\r\n                </div>\r\n            </div>\r\n            <p class=\"ads-text-2\"></p>\r\n        </ng-container>\r\n        <app-video-suggestions *ngIf=\"isSmallSize()\"></app-video-suggestions>\r\n    </div>\r\n    <div class=\"ads-block-right\">\r\n        <app-video-suggestions *ngIf=\"!isSmallSize()\"></app-video-suggestions>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n","import {AfterViewInit, Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {AuthService} from '@core/services/auth.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {PlaylistsService} from '@core/services/playlists.service';\r\nimport {environment} from '@env';\r\n\r\n@Component({\r\n    selector: 'app-play-video',\r\n    templateUrl: './play-video.component.html',\r\n    styleUrls: ['./play-video.component.scss']\r\n})\r\nexport class PlayVideoComponent implements OnInit, AfterViewInit {\r\n\r\n    canvas: any;\r\n    ctx: any;\r\n    lineChart;\r\n\r\n    videoUrl;\r\n    videoData;\r\n    apiUrl = API_URL;\r\n\r\n    authUser;\r\n    userVideoConnection = {liked: 0, disliked: 0, saved: '', viewed: false};\r\n    isProduction = environment.production;\r\n\r\n    videoJSPlayerOptions = {\r\n        autoplay: true,\r\n        controls: true,\r\n        bigPlayButton: false,\r\n        progressControl: true,\r\n        fluid: false,\r\n        preload: 'auto',\r\n        html5: {\r\n            vhs: {\r\n                withCredentials: true,\r\n                overrideNative: true,\r\n            },\r\n            nativeAudioTracks: false,\r\n            nativeVideoTracks: false\r\n        },\r\n        sources: []\r\n    };\r\n\r\n    viewsCount = 0;\r\n\r\n    showTagsForm = false;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private videoService: VideoService,\r\n        public router: Router,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        public auth: AuthService,\r\n        private toastr: ToastrService,\r\n        private playlistsService: PlaylistsService\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        const videoId = this.route.snapshot.queryParams.id;\r\n        const params = {id: videoId};\r\n\r\n        this.videoService.getVideoById(params).subscribe(dt => {\r\n            this.videoData = dt;\r\n            if (this.auth.loggedIn()) {\r\n                this.userVideoConnection = this.checkUserVideoConnection(dt);\r\n                this.updateViewsCount(dt);\r\n                this.indexUserTags(dt);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    checkUserVideoConnection(videoData) {\r\n        const userVideoConnection = videoData?.users_vids.find(u => u.id === this.authUser.id);\r\n        if (!userVideoConnection) {\r\n            return this.userVideoConnection;\r\n        } else {\r\n            const liked = userVideoConnection.users_videos?.liked;\r\n            const disliked = userVideoConnection.users_videos?.disliked;\r\n            const saved = userVideoConnection.users_videos.saved ? 'saved' : '';\r\n            const viewed = !!userVideoConnection?.users_videos?.viewed;\r\n            return {liked, disliked, saved, viewed};\r\n        }\r\n    }\r\n\r\n    updateViewsCount(dt) {\r\n        const params = {user_id: this.authUser.id, video_id: dt.id};\r\n        if (!this.userVideoConnection.viewed) {\r\n            this.videoService.updateViews(params).subscribe((d) => {\r\n                this.videoData = d;\r\n            });\r\n        }\r\n    }\r\n\r\n    updateLikes(videoData, action) {\r\n        if (this.auth.loggedIn()) {\r\n\r\n            videoData = this.getLikesState(action, videoData);\r\n\r\n            this.videoService.updateLikes({\r\n                video_id: videoData.id,\r\n                user_id: this.authUser.id,\r\n                likes: videoData.likes,\r\n                dislikes: videoData.dislikes,\r\n                liked: this.userVideoConnection.liked,\r\n                disliked: this.userVideoConnection.disliked,\r\n                saved: videoData.saved\r\n            }).subscribe(dt => {\r\n\r\n            });\r\n        } else {\r\n            this.toastr.error('Please log in first to take this action');\r\n        }\r\n    }\r\n\r\n    getLikesState(action, videoData) {\r\n        if (action === 'like') {\r\n            this.userVideoConnection.liked = +!this.userVideoConnection.liked;\r\n            if (this.userVideoConnection.disliked) {\r\n                videoData.dislikes += videoData.dislikes === 0 ? 0 : -1;\r\n            }\r\n            this.userVideoConnection.disliked = 0;\r\n            videoData.likes += this.userVideoConnection.liked ? 1 : -1;\r\n\r\n        } else {\r\n            this.userVideoConnection.disliked = +!this.userVideoConnection.disliked;\r\n            if (this.userVideoConnection.liked) {\r\n                videoData.likes += videoData.likes === 0 ? 0 : -1;\r\n            }\r\n            this.userVideoConnection.liked = 0;\r\n            videoData.dislikes += this.userVideoConnection.disliked ? 1 : -1;\r\n        }\r\n        return videoData;\r\n    }\r\n\r\n    indexUserTags(dt) {\r\n        const params = {user_id: this.authUser.id, video_id: dt.id, tags: this.videoData?.tags};\r\n        this.videoService.indexUserTags(params).subscribe(d => {\r\n\r\n        });\r\n    }\r\n\r\n\r\n    openChannelPage(videoData) {\r\n        this.router.navigate(['channels/show'], {queryParams: {username: videoData.users_vids[0].username}});\r\n    }\r\n\r\n    async openVideoByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n    saveVideo(videoData) {\r\n\r\n        this.videoService.saveVideo({\r\n            video_id: videoData.id,\r\n            user_id: this.authUser.id,\r\n            saved: this.userVideoConnection.saved === 'saved' ? 0 : 1\r\n        }).subscribe(dt => {\r\n            this.userVideoConnection.saved = dt.saved ? 'saved' : '';\r\n        });\r\n    }\r\n\r\n    saveVideoDetails(e) {\r\n        this.videoData.tags = e.tags;\r\n        this.videoService.saveVideoDetails({...e, video_id: this.videoData.id}).subscribe(dt => {\r\n            this.videoData = dt;\r\n            this.showTagsForm = false;\r\n        });\r\n    }\r\n\r\n    async getVideosByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n    isSmallSize() {\r\n        return window.screen.availWidth < 992;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport {MatChipInputEvent} from '@angular/material/chips';\r\n\r\n@Component({\r\n    selector: 'app-video-details-form',\r\n    templateUrl: './video-details-form.component.html',\r\n    styleUrls: ['./video-details-form.component.scss']\r\n})\r\nexport class VideoDetailsFormComponent implements OnInit {\r\n    @Input('videoData') videoData;\r\n    @Output('formReady') formReady = new EventEmitter();\r\n    videoDetailsForm: FormGroup;\r\n\r\n    isSubmitted = false;\r\n    readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n\r\n    constructor(\r\n        private fb: FormBuilder\r\n    ) {\r\n        this.videoDetailsForm = this.fb.group({\r\n            name: ['', Validators.required],\r\n            tags: [[], Validators.required],\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.videoDetailsForm.patchValue({name: this.videoData.name});\r\n    }\r\n\r\n    add(event: MatChipInputEvent): void {\r\n        const input = event.input;\r\n        const value = event.value;\r\n\r\n        if ((value || '').trim()) {\r\n            this.videoData.tags.push({name: value.trim()});\r\n            this.videoDetailsForm.patchValue({tags: this.videoData.tags});\r\n\r\n            // this.saveTags();\r\n        }\r\n\r\n        // Reset the input value\r\n        if (input) {\r\n            input.value = '';\r\n        }\r\n    }\r\n\r\n    remove(tag): void {\r\n        const index = this.videoData.tags.indexOf(tag);\r\n\r\n        if (index >= 0) {\r\n            this.videoData.tags.splice(index, 1);\r\n            this.videoDetailsForm.patchValue({tags: this.videoData.tags});\r\n        }\r\n    }\r\n\r\n    saveDetails() {\r\n        this.videoDetailsForm.patchValue({tags: this.videoData.tags});\r\n        this.isSubmitted = true;\r\n        if (this.videoDetailsForm.valid) {\r\n            this.formReady.emit(this.videoDetailsForm.value);\r\n        }\r\n    }\r\n\r\n}\r\n","<form [formGroup]=\"videoDetailsForm\" id=\"tags-form\">\r\n    <div class=\"left-group\">\r\n\r\n        <div id=\"video-name\">\r\n            <mat-form-field>\r\n                <input matInput formControlName=\"name\">\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"isSubmitted && videoDetailsForm.get('name').hasError('required')\">\r\n                The video name is required\r\n            </mat-error>\r\n        </div>\r\n    </div>\r\n    <div class=\"right-group\">\r\n\r\n        <div id=\"video-tags\">\r\n            <mat-form-field class=\"example-chip-list\">\r\n                <mat-chip-list #tagList formControlName=\"tags\">\r\n                    <mat-chip *ngFor=\"let tag of videoData.tags\" (removed)=\"remove(tag)\">\r\n                        {{tag.name}}\r\n                        <mat-icon matChipRemove>cancel</mat-icon>\r\n                    </mat-chip>\r\n                    <input placeholder=\"Tags...\" #chipsInput\r\n                           [matChipInputFor]=\"tagList\"\r\n                           [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                           (matChipInputTokenEnd)=\"add($event)\">\r\n                </mat-chip-list>\r\n                <mat-hint align=\"end\">Please press 'Enter' after the tag name</mat-hint>\r\n\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"videoData.tags.length ===0 && isSubmitted\">Please provide some tags describing your live\r\n                video\r\n            </mat-error>\r\n        </div>\r\n\r\n        <div class=\"actions\">\r\n            <button id=\"save-tags\" (click)=\"saveDetails()\">\r\n                <mat-icon>checked</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</form>\r\n","<div class=\"playlist-wrap\" *ngIf=\"playlistOpened && playlistData && playlistData.videos.length > 0\">\r\n    <h2>{{playlistData.name}}</h2>\r\n    <div class=\"list-wrap\">\r\n        <ng-container *ngFor=\"let video of playlistData.videos\">\r\n\r\n            <div class=\"playlist-video\" [class.selected]=\"videoId === video.id\"\r\n                 (click)=\"openVideoPage(video, playlistData?.id)\">\r\n\r\n                <div class=\"thumbnail-container\">\r\n                    <img [src]=\"video.thumbnail|getImgPath\">\r\n                </div>\r\n\r\n                <div class=\"details-container\">\r\n                    <p class=\"video-name\" (click)=\"openVideoPage(video, playlistData?.id)\">{{video.name}}</p>\r\n                    <p class=\"main-text-3\">{{video.channel.name}}</p>\r\n                </div>\r\n\r\n                <div class=\"remove-btn-container\" *ngIf=\"authUser.id === playlistData.channel.id\"\r\n                     (click)=\"removeVideoFromPlaylist(video,playlistId)\">\r\n                    <span class=\"material-icons\">delete</span>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"suggested-videos\" *ngFor=\"let video of videoSuggestions;let ind = index\">\r\n    <div class=\"suggested-video\" *ngIf=\"ind < 5\">\r\n\r\n        <div class=\"thumbnail-container\">\r\n            <img [src]=\"video.thumbnail|getImgPath\" (click)=\"openVideoPage(video)\">\r\n        </div>\r\n\r\n        <div class=\"details-container\">\r\n            <p class=\"video-name\">{{video.name}}</p>\r\n            <p class=\"channel-sub-name\">{{video.channel.name}}</p>\r\n            <div class=\"details-row\">\r\n                <span class=\"watchers-count\">\r\n                    {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\r\n                </span>\r\n                <span class=\"dot\">&middot;</span>\r\n                <span class=\"upload-time\">{{video.created_at|dateFromNow}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<div [hidden]=\"isProduction\">\r\n    <img class=\"ads\" src=\"assets/img/ads.png\">\r\n    <img class=\"ads\" src=\"assets/img/ads.png\">\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {PlaylistsService} from '@core/services/playlists.service';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {API_URL, DEFAULT_VIDEO_SUGGESTIONS_COUNT} from '@core/constants/global';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {ConfirmationDialogComponent} from '@core/components/modals/confirmation-dialog/confirmation-dialog.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {environment} from '@env';\r\n\r\n@Component({\r\n    selector: 'app-video-suggestions',\r\n    templateUrl: './video-suggestions.component.html',\r\n    styleUrls: ['./video-suggestions.component.scss']\r\n})\r\nexport class VideoSuggestionsComponent implements OnInit {\r\n\r\n    urlParams;\r\n    videoId;\r\n    playlistId;\r\n    playlistData;\r\n\r\n    playlistOpened = false;\r\n    videoSuggestions = [];\r\n\r\n    apiUrl = API_URL;\r\n    authUser;\r\n\r\n    isProduction = environment.production;\r\n\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private playlistsService: PlaylistsService,\r\n        private videoService: VideoService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        public router: Router,\r\n        private dialog: MatDialog\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.urlParams = this.route.snapshot.queryParams;\r\n        this.videoId = +this.urlParams?.id;\r\n        this.playlistId = this.urlParams?.playlist_id;\r\n        this.playlistOpened = !!this.playlistId;\r\n\r\n        if (this.playlistOpened) {\r\n            this.playlistsService.getById({playlist_id: this.playlistId}).subscribe(dt => {\r\n                this.playlistData = dt;\r\n            });\r\n        }\r\n\r\n        this.videoService.get({limit: DEFAULT_VIDEO_SUGGESTIONS_COUNT}).subscribe(dt => {\r\n            this.videoSuggestions = dt.videos;\r\n        });\r\n\r\n    }\r\n\r\n    openVideoPage(video, playlistId = null) {\r\n        const route = '/videos/play';\r\n        const params = {id: video.id, playlist_id: playlistId};\r\n\r\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(async () =>\r\n            await this.router.navigate([route], {queryParams: params})\r\n        );\r\n\r\n    }\r\n\r\n    removeVideoFromPlaylist(video, playlistId) {\r\n        this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed) {\r\n                this.playlistsService.removeVideoFromPlaylist({\r\n                    playlist_id: playlistId,\r\n                    video_id: video.id\r\n                }).subscribe(dt => {\r\n                    const oldVideoIndex = this.playlistData.videos.indexOf(video);\r\n                    this.playlistData.videos = dt.videos;\r\n                    const nextVideo = this.playlistData.videos[oldVideoIndex];\r\n                    if (nextVideo) {\r\n                        this.openVideoPage(nextVideo);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div id=\"videos-list\" *ngIf=\"userVideos\">\r\n    <ng-container *ngIf=\"!search\">\r\n        <div class=\"video-container flex-wrap\" *ngFor=\"let video of userVideos.users_vids\">\r\n            <div class=\"thumbnail\">\r\n                <img [src]=\"video.thumbnail|getImgPath\" (click)=\"openVideoPage(video, userVideos.username)\">\r\n                <span class=\"duration\">{{video.duration}}</span>\r\n            </div>\r\n            <div class=\"details\">\r\n                <h4 class=\"title\">{{video.name}}</h4>\r\n                <div class=\"shortened-details\">\r\n                    <span class=\"channel-name\"\r\n                          (click)=\"openChannelPage(video.user.channel, video.user.username)\">{{video.channel.name}}</span>\r\n                    <span class=\"dot\">&middot;</span>\r\n                    <span class=\"watchers-count\">\r\n                        {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\r\n                    </span>\r\n                    <span class=\"dot\">&middot;</span>\r\n                    <span class=\"upload-time\">{{video.created_at | dateFromNow}}</span>\r\n                </div>\r\n                <p class=\"shortened-description\">\r\n                   {{video.description}}\r\n                </p>\r\n\r\n                <div class=\"tags\">\r\n                    <ul>\r\n                        <li *ngFor=\"let tag of video?.tags\" (click)=\"getVideosByTag(tag.name)\">\r\n                            <span>{{tag.name}}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {buildPlayVideoRoute} from '@core/helpers/build-play-video-route';\r\n\r\n@Component({\r\n    selector: 'app-show-saved-videos',\r\n    templateUrl: './show-saved-videos.component.html',\r\n    styleUrls: ['./show-saved-videos.component.scss']\r\n})\r\nexport class ShowSavedVideosComponent implements OnInit {\r\n\r\n    userVideos;\r\n    channelsVideos = [];\r\n    apiUrl = API_URL;\r\n    search;\r\n    authUser;\r\n\r\n    constructor(\r\n        private videoService: VideoService,\r\n        public router: Router,\r\n        private subject: SubjectService,\r\n        private channelsService: ChannelsService,\r\n        private route: ActivatedRoute,\r\n        private getAuthUser: GetAuthUserPipe\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.authUser = this.getAuthUser.transform();\r\n\r\n        this.videoService.getUserSavedVideos({user_id: this.authUser.id}).subscribe(dt => {\r\n            this.userVideos = dt;\r\n        });\r\n    }\r\n\r\n    async openVideoPage(video, username) {\r\n        const r = buildPlayVideoRoute(video, username);\r\n        await this.router.navigate([r.route], {queryParams: r.params});\r\n    }\r\n\r\n    openChannelPage(channel, username) {\r\n        this.router.navigate(['channels/show'], {queryParams: {username}});\r\n    }\r\n\r\n    async getVideosByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n}\r\n","<div class=\"playlist-container\" *ngFor=\"let playlist of items.playlists\">\r\n    <ng-container *ngIf=\"playlist.videos.length > 0\">\r\n        <div class=\"thumbnail-container\" (click)=\"openPlaylistPage(playlist, playlist.videos[0].id)\">\r\n            <div class=\"thumbnail\">\r\n                <div class=\"short-details\">\r\n                    <mat-icon>playlist_add_check</mat-icon>\r\n                    <p class=\"name\">{{playlist.name}}</p>\r\n                    <p class=\"video-count\">{{playlist.videos.length + (playlist.videos.length === 1 ? ' video' : ' videos')}}</p>\r\n                </div>\r\n                <img [src]=\"playlist.thumbnail|getImgPath\">\r\n            </div>\r\n            <div class=\"fake-bg thumbnail\"></div>\r\n        </div>\r\n        <div class=\"details\">\r\n\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-show-playlists-list',\r\n    templateUrl: './show-playlists-list.component.html',\r\n    styleUrls: ['./show-playlists-list.component.scss']\r\n})\r\nexport class ShowPlaylistsListComponent implements OnInit {\r\n\r\n    @Input('items') items;\r\n    @Input('authUser') authUser;\r\n\r\n    constructor(\r\n        public router: Router\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    async openPlaylistPage(playlist, firstVideoId) {\r\n        const route = 'videos/play';\r\n        const params = {id: firstVideoId, playlist_id: playlist.id};\r\n        await this.router.navigate([route], {queryParams: params});\r\n    }\r\n\r\n}\r\n","<div id=\"regular-video-list-container\">\r\n    <div class=\"video-container flex-wrap\" *ngFor=\"let video of items.videos\">\r\n        <div class=\"thumbnail\">\r\n            <img [src]=\"video.thumbnail|getImgPath\" (click)=\"openVideoPage(video, video.user.username)\">\r\n            <span class=\"live-now\" *ngIf=\"video.status==='live'\">Live now</span>\r\n            <span class=\"duration\">{{video.duration}}</span>\r\n        </div>\r\n        <div class=\"details\">\r\n            <h4 class=\"title\">{{video.name}}</h4>\r\n            <div class=\"shortened-details\">\r\n                    <span class=\"channel-name\" (click)=\"openChannelPage(video.user.channel, video.user.username)\">\r\n                        {{video.user.channel.name}}\r\n                    </span>\r\n                <span class=\"dot\">&middot;</span>\r\n                <span class=\"watchers-count\">\r\n                        {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\r\n                    </span>\r\n                <span class=\"dot\">&middot;</span>\r\n                <span class=\"upload-time\">{{video.created_at | dateFromNow}}</span>\r\n            </div>\r\n            <p class=\"shortened-description\">\r\n                {{video.description}}\r\n            </p>\r\n\r\n            <div class=\"saved-video\" *ngIf=\"checkIfSavedByCurrentUser(video)\">\r\n                <mat-icon>turned_in</mat-icon>\r\n                <span>Saved</span>\r\n            </div>\r\n\r\n            <div class=\"tags\">\r\n                <ul>\r\n                    <li *ngFor=\"let tag of video?.tags\" (click)=\"getVideosByTag(tag.name)\">\r\n                        <span>{{tag.name}}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div class=\"is-new-video\" *ngIf=\"checkIfNewVideo(video)\">\r\n                <span class=\"new\">New</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {buildPlayVideoRoute} from '@core/helpers/build-play-video-route';\r\nimport {Router} from '@angular/router';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector: 'app-show-regular-list',\r\n    templateUrl: './show-regular-list.component.html',\r\n    styleUrls: ['./show-regular-list.component.scss']\r\n})\r\nexport class ShowRegularListComponent implements OnInit {\r\n\r\n    @Input('items') items;\r\n    @Input('authUser') authUser;\r\n\r\n    constructor(\r\n        public router: Router\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    async openVideoPage(video, username) {\r\n        const r = buildPlayVideoRoute(video, username);\r\n        await this.router.navigate([r.route], {queryParams: r.params});\r\n    }\r\n\r\n    async openChannelPage(channel, username) {\r\n        await this.router.navigate(['channels/show'], {queryParams: {username}});\r\n    }\r\n\r\n    checkIfSavedByCurrentUser(video) {\r\n        return video.users_vids.find(v => v.username === this.authUser?.username && v.users_videos.saved);\r\n    }\r\n\r\n    checkIfNewVideo(video) {\r\n        const duration = moment.duration(moment().diff(video.created_at));\r\n        return Math.floor(duration.asDays()) < 7;\r\n    }\r\n\r\n    async getVideosByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n}\r\n","<div id=\"search-results-container\">\r\n    <ng-container *ngFor=\"let channel of channelsVideos\">\r\n        <div class=\"channel-item\">\r\n            <div class=\"thumbnail\">\r\n                <img class=\"avatar\" [src]=\"channel.avatar|getImgPath:'avatars'\"\r\n                     (click)=\"openChannelPage(channel,channel.user?.username)\">\r\n            </div>\r\n            <div class=\"info\">\r\n                <p class=\"name\" (click)=\"openChannelPage(channel, channel?.user?.username)\">{{channel.name}}</p>\r\n                <div class=\"shortened-details\">\r\n                    <p class=\"video-count\">{{channel.videos.length + (channel.videos.length === 1 ? ' video' : ' videos')}}</p>\r\n                </div>\r\n                <p>{{getDesc(channel.description)}}</p>\r\n                <button class=\"btn subscribe-to-channel-btn\" *ngIf=\"channel?.user?.username !== authUser?.username\"\r\n                        [class.subscribed]=\"checkIfSubscribed(channel)\"\r\n                        (click)=\"subscribeToChannel(channel)\">{{checkIfSubscribed(channel) ? 'Subscribed' : 'Subscribe'}}\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"video-container\" *ngFor=\"let video of channel.videos\">\r\n            <div class=\"thumbnail\">\r\n                <img [src]=\"video.thumbnail|getImgPath\" (click)=\"openVideoPage(video, channel.user.username)\">\r\n                <span class=\"duration\">{{video.duration}}</span>\r\n            </div>\r\n            <div class=\"details\">\r\n                <h4 class=\"title\">{{video.name}}</h4>\r\n                <div class=\"shortened-details\">\r\n                    <span class=\"channel-name\">{{channel.name}}</span>\r\n                    <span class=\"dot\">&middot;</span>\r\n                    <span class=\"watchers-count\">\r\n                    {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\r\n                </span>\r\n                    <span class=\"dot\">&middot;</span>\r\n                    <span class=\"upload-time\">{{video.created_at | dateFromNow}}</span>\r\n                </div>\r\n                <p class=\"shortened-description\">\r\n                    {{video.description}}\r\n                </p>\r\n                <div class=\"tags\">\r\n                    <ul>\r\n                        <li *ngFor=\"let tag of video?.tags\">\r\n                            <span>{{tag.name}}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {buildPlayVideoRoute} from '@core/helpers/build-play-video-route';\r\n\r\n@Component({\r\n    selector: 'app-show-search-results',\r\n    templateUrl: './show-search-results.component.html',\r\n    styleUrls: ['./show-search-results.component.scss']\r\n})\r\nexport class ShowSearchResultsComponent implements OnInit {\r\n\r\n    @Input('channelsVideos') channelsVideos;\r\n    @Input('authUser') authUser;\r\n\r\n    constructor(\r\n        public router: Router,\r\n        private subject: SubjectService,\r\n        private channelsService: ChannelsService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    async openChannelPage(channel, username) {\r\n        await this.router.navigate(['channels/show'], {queryParams: {username}});\r\n    }\r\n\r\n    async openVideoPage(video, username) {\r\n        const r = buildPlayVideoRoute(video, username);\r\n        await this.router.navigate([r.route], {queryParams: r.params});\r\n    }\r\n\r\n    subscribeToChannel(channel) {\r\n        this.channelsService.subscribeToChannel({user_id: this.authUser.id, channel_id: channel.id}).subscribe(dt => {\r\n            this.channelsService.getUserChannelSubscriptions({user_id: this.authUser.id}).subscribe(d => {\r\n                this.subject.setUserSubscriptions(d);\r\n                if (this.checkIfSubscribed(channel)) {\r\n                    channel.subscribers = channel.subscribers.filter(s => s.id !== this.authUser?.id);\r\n                } else {\r\n                    channel.subscribers.push(this.authUser);\r\n                }\r\n                // console.log(channel.subscribers)\r\n                // channel.subscribers = channel.subscribers.filter(s => s.id !== this.authUser?.id).concat([this.authUser]);\r\n                // console.log(channel.subscribers)\r\n\r\n                // this.searchChannelsVideos({search: this.search, filters: this.filters});\r\n            });\r\n        });\r\n    }\r\n\r\n    checkIfSubscribed(channel) {\r\n        return channel.subscribers.find(s => s.id === this.authUser?.id);\r\n    }\r\n\r\n    getDesc(d) {\r\n        return d?.replace(/<br\\s*[\\/]?>/gi, '\\n');\r\n    }\r\n\r\n\r\n}\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {API_URL} from '@core/constants/global';\r\nimport * as moment from 'moment';\r\nimport {ActivatedRoute, ActivationEnd, Data, Router} from '@angular/router';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {filter, map, tap} from 'rxjs/operators';\r\nimport {checkIfObjectEmpty} from '@core/helpers/check-if-object-empty';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {FilterOutFalsyValuesFromObjectPipe} from '@shared/pipes/filter-out-falsy-values-from-object.pipe';\r\nimport {Subscription} from 'rxjs';\r\nimport {buildPlayVideoRoute} from '@core/helpers/build-play-video-route';\r\n\r\n@Component({\r\n    selector: 'app-show-videos',\r\n    templateUrl: './show-videos.component.html',\r\n    styleUrls: ['./show-videos.component.scss']\r\n})\r\nexport class ShowVideosComponent implements OnInit, OnDestroy {\r\n    items = {videos: [], playlists: []};\r\n    channelsVideos = [];\r\n    apiUrl = API_URL;\r\n    search;\r\n    selectedTag;\r\n    authUser;\r\n    showTrending = false;\r\n    showFilters = false;\r\n    filters = {};\r\n    filterStatus = 'idle';\r\n    subscriptions: Subscription[] = [];\r\n    loadingVideos = false;\r\n\r\n    constructor(\r\n        private videoService: VideoService,\r\n        public router: Router,\r\n        private subject: SubjectService,\r\n        private channelsService: ChannelsService,\r\n        private route: ActivatedRoute,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private getExactParams: FilterOutFalsyValuesFromObjectPipe\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n\r\n        this.subscriptions.push(\r\n            this.route.queryParams.subscribe(d => {\r\n                this.search = this.route.snapshot.queryParams?.search;\r\n                this.showTrending = this.router.url.includes('trending');\r\n                this.selectedTag = this.route.snapshot.queryParams?.tag;\r\n                if (this.search) {\r\n                    this.searchChannelsVideos({search: this.search, filters: this.filters});\r\n                } else {\r\n                    this.getVideosList({search: this.search, filters: this.filters, tag: this.selectedTag});\r\n                }\r\n            }));\r\n\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n\r\n    }\r\n\r\n    getFilteredList(filters = {}) {\r\n        this.filters = filters;\r\n        this.filterStatus = 'applied';\r\n        if (this.search) {\r\n            this.searchChannelsVideos({search: this.search, filters: this.filters});\r\n        } else {\r\n            this.getVideosList({filters: this.filters});\r\n        }\r\n    }\r\n\r\n    getVideosList(params) {\r\n        params = this.getExactParams.transform(params);\r\n\r\n        this.videoService.get({\r\n            withPlaylists: !this.showTrending ? 1 : 0,\r\n            trending: this.showTrending ? 1 : 0,\r\n            ...params\r\n        }).subscribe(dt => {\r\n            this.items = dt;\r\n        });\r\n    }\r\n\r\n    searchChannelsVideos(params) {\r\n\r\n        params = this.getExactParams.transform(params);\r\n        this.loadingVideos = true;\r\n\r\n        this.channelsService.searchWithVideos({user_id: this.authUser?.id, ...params}).subscribe(dt => {\r\n            this.loadingVideos = false;\r\n            this.channelsVideos = dt;\r\n        });\r\n    }\r\n\r\n\r\n    isFiltersShown() {\r\n        return this.items.videos?.length > 0 ||\r\n            (this.search && this.channelsVideos.find(v => v.videos.length > 0))\r\n            || this.filterStatus === 'applied' && !this.loadingVideos;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    fixChannelDescription(description) {\r\n        return description.replace(/<br\\s*[\\/]?>/gi, '\\n').trim();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n}\r\n","<div class=\"all-videos\">\r\n    <button class=\"filter-toggle-btn\" *ngIf=\"isFiltersShown()\" (click)=\"showFilters = !showFilters\">\r\n        <mat-icon>tune</mat-icon>\r\n        <span>Filters</span>\r\n    </button>\r\n    <app-video-filters (filter)=\"getFilteredList($event)\" *ngIf=\"showFilters\"></app-video-filters>\r\n    <div id=\"videos-list\">\r\n        <mat-spinner [diameter]=\"20\" *ngIf=\"loadingVideos\"></mat-spinner>\r\n        <ng-container *ngIf=\"!search && !loadingVideos\">\r\n            <app-show-regular-list [items]=\"items\" [authUser]=\"authUser\"></app-show-regular-list>\r\n            <app-show-playlists-list [items]=\"items\" [authUser]=\"authUser\"></app-show-playlists-list>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"search && !loadingVideos\">\r\n            <app-show-search-results [channelsVideos]=\"channelsVideos\" [authUser]=\"authUser\"></app-show-search-results>\r\n        </ng-container>\r\n    </div>\r\n    <div *ngIf=\"search && channelsVideos?.length === 0\">\r\n        <span class=\"error\">No results found</span>\r\n    </div>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {ShowVideosComponent} from '@app/videos/show-videos/show-videos.component';\r\nimport {PlayVideoComponent} from '@app/videos/play-video/play-video.component';\r\nimport {ShowSavedVideosComponent} from '@app/videos/show-saved-videos/show-saved-videos.component';\r\nimport {AuthGuard} from '@core/guards/auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ShowVideosComponent,\r\n        pathMatch: 'full',\r\n        data: {\r\n            title: 'Videos',\r\n        }\r\n    },\r\n    {\r\n        path: 'play',\r\n        component: PlayVideoComponent,\r\n        data: {\r\n            title: 'Play Video',\r\n        }\r\n    },\r\n    {\r\n        path: 'saved',\r\n        component: ShowSavedVideosComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n            title: 'Saved Videos',\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class VideosRoutingModule {\r\n}\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {VideosRoutingModule} from './videos-routing.module';\r\nimport {ShowVideosComponent} from './show-videos/show-videos.component';\r\nimport {SharedModule} from '@shared/shared.module';\r\n\r\nimport {PlayVideoComponent} from '../videos/play-video/play-video.component';\r\nimport {ShowSavedVideosComponent} from './show-saved-videos/show-saved-videos.component';\r\nimport {VideoSuggestionsComponent} from './play-video/video-suggestions/video-suggestions.component';\r\nimport { VideoDetailsFormComponent } from './play-video/video-details-form/video-details-form.component';\r\nimport { ShowRegularListComponent } from './show-videos/show-regular-list/show-regular-list.component';\r\nimport { ShowSearchResultsComponent } from './show-videos/show-search-results/show-search-results.component';\r\nimport { ShowPlaylistsListComponent } from './show-videos/show-playlists-list/show-playlists-list.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ShowVideosComponent,\r\n        PlayVideoComponent,\r\n        ShowSavedVideosComponent,\r\n        VideoSuggestionsComponent,\r\n        VideoDetailsFormComponent,\r\n        ShowRegularListComponent,\r\n        ShowSearchResultsComponent,\r\n        ShowPlaylistsListComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        VideosRoutingModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class VideosModule {\r\n}\r\n"]}