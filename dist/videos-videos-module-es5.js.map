{"version":3,"sources":["webpack:///src/app/videos/play-video/play-video.component.html","webpack:///src/app/videos/play-video/play-video.component.ts","webpack:///src/app/videos/play-video/video-comments-form/video-comments-form.component.ts","webpack:///src/app/videos/play-video/video-comments-form/video-comments-form.component.html","webpack:///src/app/videos/play-video/video-comments-list/comment-actions/comment-actions.component.ts","webpack:///src/app/videos/play-video/video-comments-list/comment-actions/comment-actions.component.html","webpack:///src/app/videos/play-video/video-comments-list/single-comment/single-comment.component.html","webpack:///src/app/videos/play-video/video-comments-list/single-comment/single-comment.component.ts","webpack:///src/app/videos/play-video/video-comments-list/video-comments-list.component.ts","webpack:///src/app/videos/play-video/video-comments-list/video-comments-list.component.html","webpack:///src/app/videos/play-video/video-details-form/video-details-form.component.ts","webpack:///src/app/videos/play-video/video-details-form/video-details-form.component.html","webpack:///src/app/videos/play-video/video-suggestions/video-suggestions.component.html","webpack:///src/app/videos/play-video/video-suggestions/video-suggestions.component.ts","webpack:///src/app/videos/show-saved-videos/show-saved-videos.component.html","webpack:///src/app/videos/show-saved-videos/show-saved-videos.component.ts","webpack:///src/app/videos/show-videos/show-playlists-list/show-playlists-list.component.html","webpack:///src/app/videos/show-videos/show-playlists-list/show-playlists-list.component.ts","webpack:///src/app/videos/show-videos/show-regular-list/show-regular-list.component.html","webpack:///src/app/videos/show-videos/show-regular-list/show-regular-list.component.ts","webpack:///src/app/videos/show-videos/show-search-results/show-search-results.component.html","webpack:///src/app/videos/show-videos/show-search-results/show-search-results.component.ts","webpack:///src/app/videos/show-videos/show-videos.component.ts","webpack:///src/app/videos/show-videos/show-videos.component.html","webpack:///src/app/videos/videojs-test/videojs-test.component.ts","webpack:///src/app/videos/videojs-test/videojs-test.component.html","webpack:///src/app/videos/videos-routing.module.ts","webpack:///src/app/videos/videos.module.ts"],"names":["PlayVideoComponent","route","videoService","router","getAuthUser","auth","toastr","loader","titleService","apiUrl","userVideoConnection","liked","disliked","saved","viewed","videoJSPlayerOptions","showTagsForm","isSmallScreen","commentsRefreshed","videoComments","commentsLoading","subscriptions","authUser","transform","videoId","snapshot","queryParams","id","params","push","getVideoById","subscribe","dt","videoData","setTitle","name","loggedIn","checkUserVideoConnection","updateViewsCount","indexUserTags","getComments","users_vids","find","u","users_videos","user_id","video_id","updateViews","d","action","getLikesState","updateLikes","likes","dislikes","error","tags","navigate","username","tag","saveVideo","e","saveVideoDetails","getVideoComments","count","channel","subscribers_count","forEach","s","unsubscribe","selector","templateUrl","styleUrls","VideoCommentsFormComponent","fb","subject","cdr","fixLineBreaks","inputFocused","isSubmitted","originalFormattedComment","editComment","selectedComment","selectedReply","reply","isReplyComment","reply2Reply","parentComment","commentAdded","commentUpdated","cancelled","placeholderText","getPlaceholderText","videoCommentsForm","group","from_id","comment","required","to_user_id","to_comment_id","to_reply_id","is_reply","replyUsername","user","patchValue","valid","updatedUsername","commentCtrl","value","replace","updateVideoComment","emit","get","reset","addVideoComment","substring","lastIndexOf","detectChanges","onCancel","saveComment","CommentActionsComponent","commentSelected","remove","c","selectComment","removeComment","SingleCommentComponent","toggleReplies","likeDislikeComment","author_id","len","replies","length","foundInReactors","reactors","r","users_comments","reaction","filter","data","first_name","last_name","navigateByUrl","skipLocationChange","then","openChannelPage","likeDislikeCommentFn","selectCommentFn","VideoCommentsListComponent","dialog","showReplyForm","showReplyToReplyForm","showReplies","editReply","trackByElement","cm","replyBtnClicked","replyCommentSelected","open","afterClosed","confirmed","removeVideoComment","buildParams","updateCommentLikes","comm","comment_id","conn","checkUserCommentConnection","Math","max","VideoDetailsFormComponent","formReady","separatorKeysCodes","dropzoneConfig","videoDetailsForm","maxLength","thumbnail","event","input","trim","index","indexOf","splice","thumbnailFile","target","files","formData","FormData","field","append","JSON","stringify","removeImage","onAddedFile","changeThumbnail","add","saveDetails","VideoSuggestionsComponent","playlistsService","playlistOpened","videoSuggestions","isProduction","production","urlParams","playlistId","playlist_id","getById","playlistData","limit","videos","video","removeVideoFromPlaylist","oldVideoIndex","nextVideo","openVideoPage","ShowSavedVideosComponent","channelsService","channelsVideos","getUserSavedVideos","userVideos","ShowPlaylistsListComponent","playlist","firstVideoId","ShowRegularListComponent","v","duration","diff","created_at","floor","asDays","ShowSearchResultsComponent","subscribeToChannel","channel_id","getUserChannelSubscriptions","setUserSubscriptions","checkIfSubscribed","subscribers","ShowVideosComponent","getExactParams","items","playlists","showTrending","showFilters","filters","filterStatus","loadingVideos","search","url","includes","selectedTag","searchChannelsVideos","getVideosList","withPlaylists","trending","searchWithVideos","VideojsTestComponent","config","controls","bigPlayButton","width","height","fluid","plugins","record","audio","debug","player","document","getElementById","msg","VERSION","getPluginVersion","log","on","console","recordedData","routes","path","component","pathMatch","title","canActivate","VideosRoutingModule","forChild","imports","exports","VideosModule","declarations"],"mappings":"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","file":"videos-videos-module-es5.js","sourcesContent":["<app-user-tags *ngIf=\"auth.loggedIn()\" (tagSelected)=\"getVideosByTag($event)\"></app-user-tags>\r\n<div class=\"ads-block\">\r\n    <div class=\"ads-block-left\">\r\n        <ng-container *ngIf=\"videoData\">\r\n            <div class=\"videoWrap\">\r\n                <app-video-js-player [videoData]=\"videoData\"\r\n                                     [videoUrl]=\"apiUrl + 'uploads/videos/' + videoData.filename\"></app-video-js-player>\r\n                <!--                                <app-video-regular-player [videoData]=\"videoData\"></app-video-regular-player>-->\r\n                <!--                                <app-vjs-player [videoData]=\"videoData\" [options]=\"videoJSPlayerOptions\"></app-vjs-player>-->\r\n            </div>\r\n\r\n            <div class=\"main-tags\">\r\n                <div class=\"main-tags-text\">\r\n                    <span *ngIf=\"videoData.tags?.length === 0\">No tags defined for this video</span>\r\n                    <ng-container *ngIf=\"videoData.tags?.length > 0\">\r\n                        <p *ngFor=\"let tag of videoData.tags\" class=\"tag\" (click)=\"openVideoByTag(tag.name)\">\r\n                            #{{tag.name}}</p>\r\n                    </ng-container>\r\n                </div>\r\n\r\n                <div class=\"main-tags-like\">\r\n                    <div class=\"main-tags-share\" (click)=\"updateLikes(videoData, 'like')\">\r\n                        <i class=\"fas fa-thumbs-up\" [class.liked]=\"userVideoConnection?.liked\"></i>\r\n                        <p>{{videoData.likes}}</p>\r\n                    </div>\r\n                    <div class=\"main-tags-share\" (click)=\"updateLikes(videoData, 'dislike')\">\r\n                        <i class=\"fas fa-thumbs-down\"\r\n                           [class.disliked]=\"userVideoConnection?.disliked\"></i>\r\n                        <p>{{videoData.dislikes}}</p>\r\n                    </div>\r\n                    <div class=\"main-tags-share\">\r\n                        <i class=\"fas fa-share-alt\"></i>\r\n                        <p>Share</p>\r\n                    </div>\r\n                    <div class=\"main-tags-share\" (click)=\"saveVideo(videoData)\"\r\n                         [class.saved]=\"userVideoConnection?.saved === 'saved'\">\r\n                        <i class=\"fas fa-plus-square\"></i>\r\n                        <p>{{userVideoConnection?.saved === 'saved' ? 'Saved' : 'Save'}}</p>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"tags-container\">\r\n                <div class=\"editable-details\" *ngIf=\"!showTagsForm\">\r\n                    <p class=\"video-title\">{{videoData?.name}}</p>\r\n                    <button id=\"add-tags\"\r\n                            *ngIf=\"auth.loggedIn() && !showTagsForm && authUser?.id === videoData.author_id\"\r\n                            (click)=\"showTagsForm = !showTagsForm\">\r\n                        <mat-icon>edit</mat-icon>\r\n                        <span>Edit details</span>\r\n                    </button>\r\n                </div>\r\n                <app-video-details-form [videoData]=\"videoData\" *ngIf=\"showTagsForm\"\r\n                                        (formReady)=\"saveVideoDetails($event)\"></app-video-details-form>\r\n            </div>\r\n            <div class=\"details-row\">\r\n                <span class=\"views-count\">{{videoData?.views + ' view' + (videoData?.views === 1 ? '' : 's')}}</span>\r\n                <span class=\"dot\">&middot;</span>\r\n                <span class=\"date\">{{videoData.created_at|dateFromNow}}</span>\r\n            </div>\r\n            <div class=\"channel-block\" (click)=\"openChannelPage(videoData)\" *ngIf=\"videoData?.channel\">\r\n                <img alt=\"avatar\" class=\"avatar\" [src]=\"videoData.channel.avatar|getImgPath:'avatars'\">\r\n                <div>\r\n                    <p class=\"channel-name\">{{videoData.channel.name}}</p>\r\n                    <p class=\"subscribers-count\">{{buildSubscribersCountText(videoData)}}</p>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <app-video-suggestions *ngIf=\"isSmallScreen\"></app-video-suggestions>\r\n            </div>\r\n            <div class=\"comments-block\">\r\n                <app-video-comments-form *ngIf=\"auth.loggedIn()\" (added)=\"commentAdded($event)\" [videoData]=\"videoData\"\r\n                                         class=\"w-100\"></app-video-comments-form>\r\n                <mat-spinner [diameter]=\"15\"\r\n                             [hidden]=\"!auth.loggedIn() || commentsLoading === 'finished'\"></mat-spinner>\r\n                <app-video-comments-list [videoData]=\"videoData\"\r\n                                         [videoComments]=\"videoComments\"></app-video-comments-list>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"ads-block-right\">\r\n        <app-video-suggestions *ngIf=\"!isSmallScreen\"></app-video-suggestions>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n","import {AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {API_URL, VIDEOJS_PLAYER_OPTIONS} from '@core/constants/global';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {AuthService} from '@core/services/auth.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport IsResponsive from '@core/helpers/is-responsive';\r\nimport {Subscription} from 'rxjs';\r\nimport {LoaderService} from '@core/services/loader.service';\r\nimport {Title} from '@angular/platform-browser';\r\n\r\n@Component({\r\n    selector: 'app-play-video',\r\n    templateUrl: './play-video.component.html',\r\n    styleUrls: ['./play-video.component.scss']\r\n})\r\nexport class PlayVideoComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    videoData;\r\n    apiUrl = API_URL;\r\n\r\n    authUser;\r\n    userVideoConnection = {liked: 0, disliked: 0, saved: '', viewed: false};\r\n    videoJSPlayerOptions = VIDEOJS_PLAYER_OPTIONS;\r\n\r\n    showTagsForm = false;\r\n    isSmallScreen = IsResponsive.isSmallScreen();\r\n\r\n    commentsRefreshed = false;\r\n    formValue;\r\n    videoComments = [];\r\n    commentsLoading = 'idle';\r\n    subscriptions: Subscription[] = [];\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private videoService: VideoService,\r\n        public router: Router,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        public auth: AuthService,\r\n        private toastr: ToastrService,\r\n        private loader: LoaderService,\r\n        private titleService: Title\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        const videoId = this.route.snapshot.queryParams.id;\r\n        const params = {id: videoId};\r\n\r\n        this.subscriptions.push(this.videoService.getVideoById(params).subscribe(dt => {\r\n            this.videoData = dt;\r\n            this.titleService.setTitle(dt.name);\r\n            if (this.auth.loggedIn()) {\r\n                this.userVideoConnection = this.checkUserVideoConnection(dt);\r\n                this.updateViewsCount(dt);\r\n                this.indexUserTags(dt);\r\n                this.getComments();\r\n            }\r\n        }));\r\n\r\n\r\n    }\r\n\r\n\r\n    checkUserVideoConnection(videoData) {\r\n        const userVideoConnection = videoData?.users_vids.find(u => u.id === this.authUser.id);\r\n        if (!userVideoConnection) {\r\n            return this.userVideoConnection;\r\n        } else {\r\n            const liked = userVideoConnection.users_videos?.liked;\r\n            const disliked = userVideoConnection.users_videos?.disliked;\r\n            const saved = userVideoConnection.users_videos.saved ? 'saved' : '';\r\n            const viewed = !!userVideoConnection?.users_videos?.viewed;\r\n            return {liked, disliked, saved, viewed};\r\n        }\r\n    }\r\n\r\n    updateViewsCount(dt) {\r\n        const params = {user_id: this.authUser.id, video_id: dt.id};\r\n        if (!this.userVideoConnection.viewed) {\r\n            this.subscriptions.push(this.videoService.updateViews(params).subscribe((d) => {\r\n                this.videoData = d;\r\n            }));\r\n        }\r\n    }\r\n\r\n    updateLikes(videoData, action) {\r\n        if (this.auth.loggedIn()) {\r\n\r\n            videoData = this.getLikesState(action, videoData);\r\n\r\n            this.videoService.updateLikes({\r\n                video_id: videoData.id,\r\n                user_id: this.authUser.id,\r\n                likes: videoData.likes,\r\n                dislikes: videoData.dislikes,\r\n                liked: this.userVideoConnection.liked,\r\n                disliked: this.userVideoConnection.disliked,\r\n                saved: videoData.saved\r\n            }).subscribe(dt => {\r\n\r\n            });\r\n        } else {\r\n            this.toastr.error('Please log in first to take this action');\r\n        }\r\n    }\r\n\r\n    getLikesState(action, videoData) {\r\n        if (action === 'like') {\r\n            this.userVideoConnection.liked = +!this.userVideoConnection.liked;\r\n            if (this.userVideoConnection.disliked) {\r\n                videoData.dislikes += videoData.dislikes === 0 ? 0 : -1;\r\n            }\r\n            this.userVideoConnection.disliked = 0;\r\n            videoData.likes += this.userVideoConnection.liked ? 1 : -1;\r\n\r\n        } else {\r\n            this.userVideoConnection.disliked = +!this.userVideoConnection.disliked;\r\n            if (this.userVideoConnection.liked) {\r\n                videoData.likes += videoData.likes === 0 ? 0 : -1;\r\n            }\r\n            this.userVideoConnection.liked = 0;\r\n            videoData.dislikes += this.userVideoConnection.disliked ? 1 : -1;\r\n        }\r\n        return videoData;\r\n    }\r\n\r\n    indexUserTags(dt) {\r\n        const params = {user_id: this.authUser.id, video_id: dt.id, tags: this.videoData?.tags};\r\n        this.subscriptions.push(this.videoService.indexUserTags(params).subscribe(d => {\r\n\r\n        }));\r\n    }\r\n\r\n\r\n    openChannelPage(videoData) {\r\n        this.router.navigate(['channels/show'], {queryParams: {username: videoData.users_vids[0].username}});\r\n    }\r\n\r\n    async openVideoByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n    saveVideo(videoData) {\r\n\r\n        this.subscriptions.push(this.videoService.saveVideo({\r\n            video_id: videoData.id,\r\n            user_id: this.authUser.id,\r\n            saved: this.userVideoConnection.saved === 'saved' ? 0 : 1\r\n        }).subscribe(dt => {\r\n            this.userVideoConnection.saved = dt.saved ? 'saved' : '';\r\n        }));\r\n    }\r\n\r\n    saveVideoDetails(e) {\r\n        this.subscriptions.push(this.videoService.saveVideoDetails(e)\r\n            .subscribe(dt => {\r\n                this.videoData = dt;\r\n                this.titleService.setTitle(dt.name);\r\n                this.showTagsForm = false;\r\n            }));\r\n    }\r\n\r\n    getComments() {\r\n        this.commentsLoading = 'loading';\r\n        this.subscriptions.push(this.videoService.getVideoComments({video_id: this.videoData.id}).subscribe(dt => {\r\n            this.videoComments = dt;\r\n            this.commentsLoading = 'finished';\r\n        }));\r\n    }\r\n\r\n    commentAdded(e) {\r\n        this.commentsRefreshed = true;\r\n        this.videoComments = e;\r\n    }\r\n\r\n    async getVideosByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n    buildSubscribersCountText(videoData) {\r\n        const count = videoData.channel.subscribers_count;\r\n        return count + ' subscriber' + (count === 1 ? '' : 's');\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n    Renderer2,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {FixTextLineBreaksPipe} from '@shared/pipes/fix-text-line-breaks.pipe';\r\n\r\n@Component({\r\n    selector: 'app-video-comments-form',\r\n    templateUrl: './video-comments-form.component.html',\r\n    styleUrls: ['./video-comments-form.component.scss']\r\n})\r\nexport class VideoCommentsFormComponent implements OnInit, AfterViewInit {\r\n    @Input() videoData;\r\n    videoCommentsForm: FormGroup;\r\n    inputFocused = false;\r\n    authUser;\r\n    isSubmitted = false;\r\n    replyUsername;\r\n    originalFormattedComment = '';\r\n\r\n\r\n    @Input() editComment = false;\r\n    @Input() selectedComment = null;\r\n    @Input() selectedReply = null;\r\n    @Input() reply = false;\r\n    @Input() isReplyComment = false;\r\n    @Input() reply2Reply = false;\r\n    @Input() parentComment = null;\r\n    @ViewChild('cEditable') cEditable;\r\n    @Output('added') commentAdded = new EventEmitter();\r\n    @Output('updated') commentUpdated = new EventEmitter();\r\n    @Output('cancelled') cancelled = new EventEmitter();\r\n\r\n    placeholderText;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private videoService: VideoService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private subject: SubjectService,\r\n        private cdr: ChangeDetectorRef,\r\n        private fixLineBreaks: FixTextLineBreaksPipe\r\n    ) {\r\n    }\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.authUser = this.getAuthUser.transform();\r\n        this.placeholderText = this.getPlaceholderText();\r\n\r\n        this.videoCommentsForm = this.fb.group({\r\n            id: [''],\r\n            from_id: [this.authUser.id],\r\n            comment: ['', Validators.required],\r\n            video_id: [this.videoData.id],\r\n            to_user_id: [0],\r\n            to_comment_id: [0],\r\n            to_reply_id: [0],\r\n            is_reply: [0]\r\n        });\r\n\r\n        if (this.reply2Reply) {\r\n            this.replyUsername = '@' + this.selectedReply?.user.username + ' ';\r\n            this.videoCommentsForm.patchValue({comment: this.replyUsername});\r\n        }\r\n\r\n    }\r\n\r\n    saveComment() {\r\n        this.isSubmitted = true;\r\n        if (this.videoCommentsForm.valid) {\r\n            // Reply add\r\n            if (this.reply) {\r\n                this.videoCommentsForm.patchValue({\r\n                    to_comment_id: this.selectedComment.id,\r\n                    to_user_id: this.selectedComment.user.id,\r\n                    is_reply: 1\r\n                });\r\n                // Reply edit\r\n            } else if (this.isReplyComment) {\r\n                this.videoCommentsForm.patchValue({\r\n                    to_comment_id: this.parentComment.id,\r\n                    to_user_id: this.parentComment.user.id,\r\n                    is_reply: 1\r\n                });\r\n            } else if (this.reply2Reply) {\r\n                const updatedUsername = '<strong class=\"reply-username\">' + this.replyUsername + '</strong>';\r\n                const reply2Reply = this.commentCtrl.value.replace(this.replyUsername, updatedUsername);\r\n                this.videoCommentsForm.patchValue({\r\n                    to_comment_id: this.selectedComment.id,\r\n                    to_reply_id: this.selectedReply.id,\r\n                    to_user_id: this.selectedComment.user.id,\r\n                    comment: reply2Reply,\r\n                    is_reply: 1\r\n                });\r\n            }\r\n\r\n            // Comment & reply actions\r\n            if (this.editComment) {\r\n\r\n                if (this.parentComment) {\r\n                    const updatedUsername = '<strong class=\"reply-username\">' + this.replyUsername + '</strong>';\r\n                    const reply2Reply = this.commentCtrl.value.replace(this.replyUsername, updatedUsername);\r\n                    this.videoCommentsForm.patchValue({comment: reply2Reply});\r\n                }\r\n\r\n\r\n                this.videoService.updateVideoComment(this.videoCommentsForm.value).subscribe(dt => {\r\n                    this.commentUpdated.emit(dt);\r\n                    this.videoCommentsForm.get('comment').reset();\r\n                });\r\n            } else {\r\n\r\n                this.videoService.addVideoComment(this.videoCommentsForm.value).subscribe(dt => {\r\n                    this.inputFocused = false;\r\n                    this.commentAdded.emit(dt);\r\n                    this.videoCommentsForm.get('comment').reset();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCancel() {\r\n        this.inputFocused = false;\r\n        this.videoCommentsForm.get('comment').reset();\r\n        if (this.editComment || this.reply || this.reply2Reply) {\r\n            this.cancelled.emit();\r\n        }\r\n    }\r\n\r\n\r\n    getPlaceholderText() {\r\n        return 'Add a public ' + (this.reply ? 'reply' : 'comment') + '...';\r\n    }\r\n\r\n    get commentCtrl() {\r\n        return this.videoCommentsForm.get('comment');\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.editComment) {\r\n            const comment = this.selectedComment.comment;\r\n            if (this.parentComment) {\r\n                this.replyUsername = comment.substring(\r\n                    comment.lastIndexOf('@'),\r\n                    comment.lastIndexOf(' ')\r\n                );\r\n            }\r\n            this.videoCommentsForm.patchValue({\r\n                comment: this.fixLineBreaks.transform(comment.replace(/<[^>]*>?/gm, '')),\r\n                id: this.selectedComment.id\r\n            });\r\n            this.inputFocused = true;\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n\r\n}\r\n","<form [formGroup]=\"videoCommentsForm\" class=\"w-100\">\r\n    <div class=\"d-flex mt-3 comment-input-container\">\r\n        <img class=\"avatar\" [src]=\"authUser.channel.avatar|getImgPath:'avatars'\">\r\n        <input type=\"hidden\" formControlName=\"comment\">\r\n        <mat-form-field floatLabel=\"never\">\r\n            <textarea matInput cdkTextareaAutosize [placeholder]=\"placeholderText\" class=\"comment-input\" #cEditable\r\n                      (focus)=\"inputFocused = true\"\r\n                      formControlName=\"comment\"></textarea>\r\n        </mat-form-field>\r\n    </div>\r\n    <div class=\"d-flex justify-content-end\">\r\n        <div [ngClass]=\"inputFocused ? 'd-flex':'d-none'\">\r\n            <button class=\"btn text-btn\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\r\n            <button (click)=\"saveComment()\" type=\"button\" [class.green-bg]=\"videoCommentsForm.valid\"\r\n                    class=\"ml-3 px-2 btn enter\">{{reply ? 'Reply' : 'Comment'}}\r\n            </button>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\n\r\n@Component({\r\n    selector: 'app-comment-actions',\r\n    templateUrl: './comment-actions.component.html',\r\n    styleUrls: ['./comment-actions.component.scss']\r\n})\r\nexport class CommentActionsComponent implements OnInit {\r\n    authUser;\r\n\r\n    @Input() comment;\r\n    @Output() commentSelected = new EventEmitter();\r\n    @Output() remove = new EventEmitter();\r\n\r\n\r\n    constructor(\r\n        private getAuthUser: GetAuthUserPipe\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n\r\n\r\n    selectComment(c) {\r\n        this.commentSelected.emit(c);\r\n    }\r\n\r\n    removeComment(c) {\r\n        this.remove.emit(c);\r\n    }\r\n\r\n\r\n}\r\n","<div class=\"more-actions\">\r\n\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n        <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n        <button mat-menu-item (click)=\"selectComment(comment)\">\r\n            <mat-icon>edit</mat-icon>\r\n            <span>Edit</span>\r\n        </button>\r\n        <button mat-menu-item (click)=\"removeComment(comment)\">\r\n            <mat-icon>delete</mat-icon>\r\n            <span>Delete</span>\r\n        </button>\r\n    </mat-menu>\r\n</div>\r\n","<div class=\"d-flex\">\r\n    <img class=\"avatar\" [src]=\"comment.user?.channel.avatar|getImgPath:'avatars'\">\r\n    <div class=\"details\">\r\n        <div class=\"d-flex align-items-center mb-2\">\r\n            <div class=\"mr-3 user-name\" [class.author.px-2]=\"isAuthor(comment)\"\r\n                 (click)=\"openChannelPage(comment?.user?.username)\">\r\n                {{getFullName(comment?.user)}} <i class=\"fas fa-check-circle ml-1\" *ngIf=\"isAuthor(comment)\"></i>\r\n            </div>\r\n            <div class=\"comment-date\">{{comment.created_at | dateFromNow}}</div>\r\n        </div>\r\n\r\n        <div class=\"comment-text mb-2\" [innerHTML]=\"comment.comment\">\r\n        </div>\r\n        <div class=\"likes-reply\">\r\n            <div class=\"comments-like mb-2\">\r\n                <i class=\"fa fa-thumbs-up mr-1\" (click)=\"likeDislikeCommentFn(comment)\"\r\n                   [class.liked]=\"checkUserCommentConnection(comment)?.liked\"></i>\r\n                <span class=\"likes-count\"> {{getReactorsCount(comment.reactors, 'liked') }} </span>\r\n                <i class=\"fa fa-thumbs-down ml-3 mr-1\" (click)=\"likeDislikeCommentFn(comment, false)\"\r\n                   [class.disliked]=\"checkUserCommentConnection(comment)?.disliked\"></i>\r\n                <span class=\"likes-count\"> {{getReactorsCount(comment.reactors, 'disliked') }} </span>\r\n            </div>\r\n            <div class=\"reply-container\">\r\n                <span class=\"reply\" (click)=\"selectCommentFn(comment)\">Reply</span>\r\n                <app-video-comments-form [videoData]=\"videoData\" [reply]=\"reply\"\r\n                                         *ngIf=\"showReplyForm && (comment.id===selectedComment?.id ||comment.id == selectedReply?.id)\"\r\n                                         [selectedComment]=\"selectedComment\" [reply2Reply]=\"reply2Reply\"\r\n                                         [selectedReply]=\"selectedReply\"\r\n                                         (added)=\"commentAddedFn($event)\"\r\n                                         class=\"w-100\"></app-video-comments-form>\r\n            </div>\r\n        </div>\r\n        <p class=\"replies-toggler mt-3\" *ngIf=\"comment?.replies?.length > 0\"\r\n           (click)=\"toggleRepliesFn(comment)\">\r\n            <mat-icon>expand_{{showReplies && selectedComment === comment ? 'more' : 'less'}}</mat-icon>\r\n            <span>{{getRepliesTogglerText(comment)}}</span>\r\n        </p>\r\n    </div>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-single-comment',\r\n    templateUrl: './single-comment.component.html',\r\n    styleUrls: ['./single-comment.component.scss']\r\n})\r\nexport class SingleCommentComponent implements OnInit {\r\n\r\n    @Input() comment;\r\n    @Input() videoData;\r\n    @Input() showReplyForm;\r\n    @Input() selectedComment;\r\n    @Input() selectedReply;\r\n    @Input() showReplies;\r\n    @Input() reply;\r\n    @Input() reply2Reply;\r\n\r\n    @Output() toggleReplies = new EventEmitter();\r\n    @Output() commentAdded = new EventEmitter();\r\n    @Output() selectComment = new EventEmitter();\r\n    @Output() likeDislikeComment = new EventEmitter();\r\n\r\n    authUser;\r\n\r\n    constructor(\r\n        private getAuthUser: GetAuthUserPipe,\r\n        public router: Router\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    isAuthor(c) {\r\n        return c.user.id === this.videoData.author_id;\r\n    }\r\n\r\n    getRepliesTogglerText(c) {\r\n        const len = c.replies.length;\r\n        return `View ${len + (len > 1 ? ' replies' : ' reply')}`;\r\n    }\r\n\r\n    selectCommentFn(c) {\r\n        this.selectComment.emit(c);\r\n    }\r\n\r\n    commentAddedFn(e) {\r\n        this.commentAdded.emit(e);\r\n    }\r\n\r\n    toggleRepliesFn(c) {\r\n        this.toggleReplies.emit(c);\r\n    }\r\n\r\n    likeDislikeCommentFn(c, liked = true) {\r\n        this.likeDislikeComment.emit({c, liked});\r\n    }\r\n\r\n    checkUserCommentConnection(c) {\r\n        const foundInReactors = c.reactors.find(r => r.id === this.authUser.id);\r\n        return foundInReactors?.users_comments;\r\n    }\r\n\r\n    getReactorsCount(reactors, reaction) {\r\n        return reactors.filter(r => r?.users_comments[reaction]).length;\r\n    }\r\n\r\n    getFullName(data) {\r\n        return data.first_name + ' ' + data.last_name;\r\n    }\r\n\r\n    async openChannelPage(username) {\r\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(async () =>\r\n            await this.router.navigate(['channels/show'], {queryParams: {username}})\r\n        );\r\n    }\r\n}\r\n","import {ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {ConfirmationDialogComponent} from '@core/components/modals/confirmation-dialog/confirmation-dialog.component';\r\nimport {Subscription} from 'rxjs';\r\nimport trackByElement from '@core/helpers/track-by-element';\r\n\r\n@Component({\r\n    selector: 'app-video-comments-list',\r\n    templateUrl: './video-comments-list.component.html',\r\n    styleUrls: ['./video-comments-list.component.scss'],\r\n    // changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class VideoCommentsListComponent implements OnInit, OnDestroy {\r\n\r\n    authUser;\r\n    selectedComment;\r\n    subscriptions: Subscription[] = [];\r\n    showReplyForm = false;\r\n    showReplyToReplyForm = false;\r\n    showReplies = false;\r\n    editReply = false;\r\n    selectedReply;\r\n    trackByElement = trackByElement;\r\n\r\n    @Input() videoData;\r\n    @Input() videoComments = [];\r\n    @Input() editComment = false;\r\n\r\n    constructor(\r\n        private subject: SubjectService,\r\n        private videoService: VideoService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private dialog: MatDialog\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n\r\n    isAuthor(c) {\r\n        return c.user.id === this.videoData.author_id;\r\n    }\r\n\r\n    isMyComment(c) {\r\n        return c.user.id === this.authUser.id;\r\n    }\r\n\r\n    getUpdatedComments(e) {\r\n        this.videoComments = e;\r\n        this.editComment = false;\r\n        this.editReply = false;\r\n        this.selectedComment = e.find(cm => cm.id === this.selectedComment?.id);\r\n        this.selectedReply = e.find(c => c.id === this.selectedReply?.id);\r\n    }\r\n\r\n    selectComment(c, replyBtnClicked = false, replyCommentSelected = false) {\r\n        if (!replyBtnClicked && !replyCommentSelected) {\r\n            this.editComment = !this.editComment;\r\n            this.showReplyForm = !this.editComment;\r\n            this.selectedComment = c;\r\n        } else if (replyCommentSelected) {\r\n            this.editReply = true;\r\n            this.selectedReply = c;\r\n        } else {\r\n            this.showReplyForm = this.selectedComment !== c || !this.showReplyForm;\r\n            this.selectedComment = c;\r\n        }\r\n    }\r\n\r\n    replyToReply(c, r) {\r\n        this.showReplyToReplyForm = this.selectedReply !== r || !this.showReplyToReplyForm;\r\n        this.selectedComment = c;\r\n        this.selectedReply = r;\r\n    }\r\n\r\n\r\n    removeComment(c) {\r\n        this.subscriptions.push(this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed) {\r\n                this.videoService.removeVideoComment({\r\n                    user_id: this.authUser.id,\r\n                    id: c.id,\r\n                    video_id: c.video_id\r\n                }).subscribe(dt => {\r\n                    this.videoComments = dt;\r\n                    this.selectedComment = dt.find(cm => cm.id === this.selectedComment?.id);\r\n                });\r\n            }\r\n        }));\r\n    }\r\n\r\n    commentAdded(e) {\r\n        this.videoComments = e;\r\n        this.showReplyForm = false;\r\n        this.showReplyToReplyForm = false;\r\n        this.showReplies = true;\r\n        this.selectedComment = e.find(c => c.id === this.selectedComment.id);\r\n    }\r\n\r\n    toggleReplies(c) {\r\n        this.showReplies = !this.showReplies;\r\n        this.selectedComment = c;\r\n    }\r\n\r\n    likeDislikeComment(e) {\r\n        const params = this.buildParams(e.c, e.liked);\r\n\r\n\r\n        this.subscriptions.push(this.videoService.updateCommentLikes(params).subscribe(dt => {\r\n            this.videoComments = dt;\r\n            this.showReplies = true;\r\n            this.selectedComment = this.videoComments.find(comm => comm.id === this.selectedComment?.id);\r\n        }));\r\n    }\r\n\r\n    buildParams(c, liked) {\r\n        const params = {\r\n            video_id: c.video_id,\r\n            comment_id: c.id,\r\n            user_id: this.authUser.id,\r\n            liked: 0,\r\n            disliked: 0,\r\n            likes: c.likes,\r\n            dislikes: c.dislikes\r\n        };\r\n        const conn = this.checkUserCommentConnection(c);\r\n\r\n        // Avoiding negative values here\r\n        params.likes = Math.max(0, conn?.liked ? --c.likes : +c.likes);\r\n        params.dislikes = Math.max(0, conn?.disliked ? --c.dislikes : +c.dislikes);\r\n\r\n\r\n        if (liked) {\r\n            params.liked = +!conn?.liked;\r\n        } else {\r\n            params.disliked = +!conn?.disliked;\r\n        }\r\n\r\n        return params;\r\n    }\r\n\r\n    getReactorsCount(reactors, reaction) {\r\n        return reactors.filter(r => r?.users_comments[reaction]).length;\r\n    }\r\n\r\n\r\n    checkUserCommentConnection(comment) {\r\n        const foundInReactors = comment.reactors?.find(r => r.id === this.authUser.id);\r\n        return foundInReactors?.users_comments;\r\n    }\r\n\r\n    isCommentShown(c) {\r\n        return (c.id !== this.selectedComment?.id && !this.showReplyForm) || this.showReplyForm || !this.editComment;\r\n    }\r\n\r\n    isReplyShown(c) {\r\n        return this.showReplies && this.selectedComment === c;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n}\r\n","<div class=\"comments-container\" [hidden]=\"videoComments.length === 0\">\r\n    <ng-container *ngFor=\"let c of videoComments\">\r\n        <div class=\"comment d-flex mt-4\" *ngIf=\"isCommentShown(c)\">\r\n            <div class=\"left-group\" [class.w-100]=\"editComment\">\r\n                <app-single-comment [comment]=\"c\" [videoData]=\"videoData\" [showReplyForm]=\"showReplyForm\"\r\n                                    [showReplies]=\"showReplies\" [selectedComment]=\"selectedComment\"\r\n                                    class=\"w-100\" [reply]=\"true\" (likeDislikeComment)=\"likeDislikeComment($event)\"\r\n                                    (commentAdded)=\"commentAdded($event)\" (toggleReplies)=\"toggleReplies($event)\"\r\n                                    (selectComment)=\"selectComment($event, true)\"></app-single-comment>\r\n                <div class=\"replies\" [hidden]=\"!isReplyShown(c)\">\r\n                    <ng-container *ngFor=\"let reply of c.replies\">\r\n                        <div class=\"d-flex reply mt-4\" *ngIf=\"reply.id!==selectedReply?.id || !editReply\">\r\n                            <div class=\"left-group\">\r\n                                <app-single-comment [comment]=\"reply\" [videoData]=\"videoData\"\r\n                                                    [showReplyForm]=\"showReplyToReplyForm\"\r\n                                                    [showReplies]=\"showReplies\"\r\n                                                    [selectedComment]=\"selectedComment\"\r\n                                                    [selectedReply]=\"selectedReply\" [reply2Reply]=\"true\"\r\n                                                    (likeDislikeComment)=\"likeDislikeComment($event)\"\r\n                                                    (commentAdded)=\"commentAdded($event)\" class=\"w-100\"\r\n                                                    (selectComment)=\"replyToReply(c, reply)\"></app-single-comment>\r\n                            </div>\r\n                            <div class=\"right-group\">\r\n                                <app-comment-actions [comment]=\"reply\"\r\n                                                     *ngIf=\"isMyComment(reply) && !editReply\"\r\n                                                     (remove)=\"removeComment($event)\"\r\n                                                     (commentSelected)=\"selectComment($event, false,true)\">\r\n                                </app-comment-actions>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <app-video-comments-form [editComment]=\"true\" [selectedComment]=\"selectedReply\"\r\n                                                 class=\"w-100\" [isReplyComment]=\"true\" [parentComment]=\"c\"\r\n                                                 *ngIf=\"editReply && reply.id===selectedReply.id\"\r\n                                                 (updated)=\"getUpdatedComments($event)\"\r\n                                                 (cancelled)=\"editReply = false\"\r\n                                                 [videoData]=\"videoData\">\r\n                        </app-video-comments-form>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n            <div class=\"right-group\">\r\n                <app-comment-actions [comment]=\"c\" *ngIf=\"isMyComment(c) && !editComment\"\r\n                                     (remove)=\"removeComment($event)\"\r\n                                     (commentSelected)=\"selectComment($event)\">\r\n                </app-comment-actions>\r\n            </div>\r\n        </div>\r\n        <app-video-comments-form [editComment]=\"true\" [selectedComment]=\"selectedComment\"\r\n                                 class=\"edit-comment-form w-100\"\r\n                                 *ngIf=\"editComment && c.id===selectedComment.id\"\r\n                                 (updated)=\"getUpdatedComments($event)\" (cancelled)=\"editComment = false\"\r\n                                 [videoData]=\"videoData\">\r\n        </app-video-comments-form>\r\n    </ng-container>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport {MatChipInputEvent} from '@angular/material/chips';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {API_URL, TAG_CHARACTERS_LIMIT} from '@core/constants/global';\r\nimport {DROPZONE_CONFIG} from 'ngx-dropzone-wrapper';\r\n\r\n@Component({\r\n    selector: 'app-video-details-form',\r\n    templateUrl: './video-details-form.component.html',\r\n    styleUrls: ['./video-details-form.component.scss']\r\n})\r\nexport class VideoDetailsFormComponent implements OnInit {\r\n    @Input('videoData') videoData;\r\n    @Output('formReady') formReady = new EventEmitter();\r\n    videoDetailsForm: FormGroup;\r\n\r\n    isSubmitted = false;\r\n    readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n\r\n    apiUrl = API_URL;\r\n\r\n    thumbnailFile;\r\n\r\n    dropzoneConfig = DROPZONE_CONFIG;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private toastr: ToastrService\r\n    ) {\r\n        this.videoDetailsForm = this.fb.group({\r\n            name: ['', [Validators.required, Validators.maxLength(TAG_CHARACTERS_LIMIT)]],\r\n            tags: [[], Validators.required],\r\n            thumbnail: [''],\r\n            video_id: []\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.videoDetailsForm.patchValue({\r\n            video_id: this.videoData.id,\r\n            ...this.videoData\r\n        });\r\n    }\r\n\r\n    add(event: MatChipInputEvent): void {\r\n        const input = event.input;\r\n        const value = event.value;\r\n\r\n        if ((value || '').trim()) {\r\n            if (this.videoData.tags.length === 3) {\r\n                this.toastr.error('We don\\'t support more than 3 tags per video');\r\n            } else {\r\n                this.videoData.tags.push({name: value.trim()});\r\n                this.videoDetailsForm.patchValue({tags: this.videoData.tags});\r\n            }\r\n\r\n            // this.saveTags();\r\n        }\r\n\r\n        // Reset the input value\r\n        if (input) {\r\n            input.value = '';\r\n        }\r\n    }\r\n\r\n    remove(tag): void {\r\n        const index = this.videoData.tags.indexOf(tag);\r\n\r\n        if (index >= 0) {\r\n            this.videoData.tags.splice(index, 1);\r\n            this.videoDetailsForm.patchValue({tags: this.videoData.tags});\r\n        }\r\n    }\r\n\r\n    removeThumbnail() {\r\n        this.videoDetailsForm.patchValue({thumbnail: ''});\r\n        this.videoData.thumbnail = '';\r\n    }\r\n\r\n    changeThumbnail(e) {\r\n        this.thumbnailFile = e.target.files[0];\r\n        this.videoDetailsForm.patchValue({thumbnail: this.thumbnailFile.name});\r\n    }\r\n\r\n    saveDetails() {\r\n        this.videoDetailsForm.patchValue({tags: this.videoData.tags});\r\n        this.isSubmitted = true;\r\n        if (this.videoDetailsForm.valid) {\r\n            const formData = new FormData();\r\n            for (const field in this.videoDetailsForm.value) {\r\n                if (field !== 'tags') {\r\n                    formData.append(field, this.videoDetailsForm.value[field]);\r\n                } else {\r\n                    formData.append(field, JSON.stringify(this.videoDetailsForm.value[field]));\r\n                }\r\n            }\r\n            if (this.thumbnailFile) {\r\n                formData.append('video_thumbnail_file', this.thumbnailFile, this.thumbnailFile.name);\r\n            }\r\n            this.formReady.emit(formData);\r\n        }\r\n    }\r\n\r\n    removeImage() {\r\n\r\n    }\r\n\r\n    onAddedFile(e) {\r\n        this.thumbnailFile = e[0];\r\n        this.videoDetailsForm.patchValue({thumbnail: this.thumbnailFile.name});\r\n    }\r\n\r\n}\r\n","<form [formGroup]=\"videoDetailsForm\" id=\"tags-form\">\r\n    <div class=\"left-group\">\r\n\r\n        <div id=\"video-name\">\r\n            <mat-form-field>\r\n                <input matInput formControlName=\"name\">\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"isSubmitted && videoDetailsForm.get('name').hasError('required')\">\r\n                The video name is required\r\n            </mat-error>\r\n            <mat-error *ngIf=\"videoDetailsForm.get('name').hasError('maxlength')\">\r\n                Not more than 12 characters please\r\n            </mat-error>\r\n        </div>\r\n    </div>\r\n    <div class=\"center-group\">\r\n        <div class=\"image-container\" *ngIf=\"videoData.thumbnail\">\r\n            <img class=\"saved-thumbnail\" [src]=\"apiUrl+ 'uploads/thumbnails/'+videoData.thumbnail\">\r\n        </div>\r\n        <div class=\"actions-container\">\r\n            <button id=\"change-thumbnail\" *ngIf=\"videoData.thumbnail\" (click)=\"removeThumbnail()\">Change thumbnail\r\n            </button>\r\n            <dropzone [config]=\"dropzoneConfig\" [hidden]=\"videoData.thumbnail\" (removedFile)=\"removeImage()\"\r\n                      id=\"video-thumbnail-dropzone\" class=\"single\" #dropzone (thumbnail)=\"onAddedFile($event)\"\r\n                      [message]=\"'Click or drag an image to upload'\">\r\n            </dropzone>\r\n            <input type=\"file\" (change)=\"changeThumbnail($event)\" [hidden]=\"true\">\r\n        </div>\r\n    </div>\r\n    <div class=\"right-group\">\r\n\r\n        <div id=\"video-tags\">\r\n            <mat-form-field class=\"example-chip-list\">\r\n                <mat-chip-list #tagList formControlName=\"tags\">\r\n                    <mat-chip *ngFor=\"let tag of videoData.tags\" (removed)=\"remove(tag)\">\r\n                        {{tag.name}}\r\n                        <mat-icon matChipRemove>cancel</mat-icon>\r\n                    </mat-chip>\r\n                    <input placeholder=\"Tags...\" #chipsInput\r\n                           [matChipInputFor]=\"tagList\"\r\n                           [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                           (matChipInputTokenEnd)=\"add($event)\">\r\n                </mat-chip-list>\r\n                <mat-hint align=\"end\">Please press 'Enter' after the tag name</mat-hint>\r\n\r\n            </mat-form-field>\r\n            <mat-error *ngIf=\"videoData.tags.length ===0 && isSubmitted\">Please provide some tags describing your live\r\n                video\r\n            </mat-error>\r\n        </div>\r\n\r\n        <div class=\"actions\">\r\n            <button id=\"save-tags\" (click)=\"saveDetails()\">\r\n                <mat-icon>checked</mat-icon>\r\n                <span>Save changes</span>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</form>\r\n","<div class=\"playlist-wrap\" *ngIf=\"playlistOpened && playlistData && playlistData.videos.length > 0\">\r\n    <h2>{{playlistData.name}}</h2>\r\n    <div class=\"list-wrap\">\r\n        <ng-container *ngFor=\"let video of playlistData.videos\">\r\n\r\n            <div class=\"playlist-video\" [class.selected]=\"videoId === video.id\"\r\n                 (click)=\"openVideoPage(video, playlistData?.id)\">\r\n\r\n                <div class=\"thumbnail-container\">\r\n                    <img [src]=\"video.thumbnail|getImgPath\">\r\n                </div>\r\n\r\n                <div class=\"details-container\">\r\n                    <p class=\"video-name\" (click)=\"openVideoPage(video, playlistData?.id)\">{{video.name}}</p>\r\n                    <p class=\"main-text-3\">{{video.channel.name}}</p>\r\n                </div>\r\n\r\n                <div class=\"remove-btn-container\" *ngIf=\"authUser.id === playlistData.channel.id\"\r\n                     (click)=\"removeVideoFromPlaylist(video,playlistId)\">\r\n                    <span class=\"material-icons\">delete</span>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"suggested-videos\" *ngFor=\"let video of videoSuggestions;let ind = index\">\r\n    <div class=\"suggested-video\" *ngIf=\"ind < 5\">\r\n\r\n        <div class=\"thumbnail-container\">\r\n            <img [src]=\"video.thumbnail|getImgPath\" (click)=\"openVideoPage(video)\">\r\n        </div>\r\n\r\n        <div class=\"details-container\">\r\n            <p class=\"video-name\">{{video.name}}</p>\r\n            <p class=\"channel-sub-name\">{{video.channel.name}}</p>\r\n            <div class=\"details-row\">\r\n                <span class=\"watchers-count\">\r\n                    {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\r\n                </span>\r\n                <span class=\"dot\">&middot;</span>\r\n                <span class=\"upload-time\">{{video.created_at|dateFromNow}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<!--<div [hidden]=\"isProduction\">-->\r\n<!--    <img class=\"ads\" src=\"assets/img/ads.png\">-->\r\n<!--    <img class=\"ads\" src=\"assets/img/ads.png\">-->\r\n<!--</div>-->\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {PlaylistsService} from '@core/services/playlists.service';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {API_URL, DEFAULT_VIDEO_SUGGESTIONS_COUNT} from '@core/constants/global';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {ConfirmationDialogComponent} from '@core/components/modals/confirmation-dialog/confirmation-dialog.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {environment} from '@env';\r\n\r\n@Component({\r\n    selector: 'app-video-suggestions',\r\n    templateUrl: './video-suggestions.component.html',\r\n    styleUrls: ['./video-suggestions.component.scss']\r\n})\r\nexport class VideoSuggestionsComponent implements OnInit {\r\n\r\n    urlParams;\r\n    videoId;\r\n    playlistId;\r\n    playlistData;\r\n\r\n    playlistOpened = false;\r\n    videoSuggestions = [];\r\n\r\n    apiUrl = API_URL;\r\n    authUser;\r\n\r\n    isProduction = environment.production;\r\n\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private playlistsService: PlaylistsService,\r\n        private videoService: VideoService,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        public router: Router,\r\n        private dialog: MatDialog\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.urlParams = this.route.snapshot.queryParams;\r\n        this.videoId = +this.urlParams?.id;\r\n        this.playlistId = this.urlParams?.playlist_id;\r\n        this.playlistOpened = !!this.playlistId;\r\n\r\n        if (this.playlistOpened) {\r\n            this.playlistsService.getById({playlist_id: this.playlistId}).subscribe(dt => {\r\n                this.playlistData = dt;\r\n            });\r\n        }\r\n\r\n        this.videoService.get({limit: DEFAULT_VIDEO_SUGGESTIONS_COUNT}).subscribe(dt => {\r\n            this.videoSuggestions = dt.videos;\r\n        });\r\n\r\n    }\r\n\r\n    openVideoPage(video, playlistId = null) {\r\n        const route = '/videos/play';\r\n        const params = {id: video.id, playlist_id: playlistId};\r\n\r\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(async () =>\r\n            await this.router.navigate([route], {queryParams: params})\r\n        );\r\n\r\n    }\r\n\r\n    removeVideoFromPlaylist(video, playlistId) {\r\n        this.dialog.open(ConfirmationDialogComponent).afterClosed().subscribe(confirmed => {\r\n            if (confirmed) {\r\n                this.playlistsService.removeVideoFromPlaylist({\r\n                    playlist_id: playlistId,\r\n                    video_id: video.id\r\n                }).subscribe(dt => {\r\n                    const oldVideoIndex = this.playlistData.videos.indexOf(video);\r\n                    this.playlistData.videos = dt.videos;\r\n                    const nextVideo = this.playlistData.videos[oldVideoIndex];\r\n                    if (nextVideo) {\r\n                        this.openVideoPage(nextVideo);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div id=\"videos-list\" *ngIf=\"userVideos\">\r\n    <ng-container *ngIf=\"!search\">\r\n        <div class=\"video-container flex-wrap\" *ngFor=\"let video of userVideos.users_vids\">\r\n            <div class=\"thumbnail\">\r\n                <img [src]=\"video.thumbnail|getImgPath\" (click)=\"openVideoPage(video, userVideos.username)\">\r\n                <span class=\"duration\">{{video.duration}}</span>\r\n            </div>\r\n            <div class=\"details\">\r\n                <h4 class=\"title\">{{video.name}}</h4>\r\n                <div class=\"shortened-details\">\r\n                    <span class=\"channel-name\"\r\n                          (click)=\"openChannelPage(video.user.channel, video.user.username)\">{{video.channel.name}}</span>\r\n                    <span class=\"dot\">&middot;</span>\r\n                    <span class=\"watchers-count\">\r\n                        {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\r\n                    </span>\r\n                    <span class=\"dot\">&middot;</span>\r\n                    <span class=\"upload-time\">{{video.created_at | dateFromNow}}</span>\r\n                </div>\r\n                <p class=\"shortened-description\">\r\n                   {{video.description}}\r\n                </p>\r\n\r\n                <div class=\"tags\">\r\n                    <ul>\r\n                        <li *ngFor=\"let tag of video?.tags\" (click)=\"getVideosByTag(tag.name)\">\r\n                            <span>{{tag.name}}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {API_URL} from '@core/constants/global';\r\nimport {buildPlayVideoRoute} from '@core/helpers/build-play-video-route';\r\n\r\n@Component({\r\n    selector: 'app-show-saved-videos',\r\n    templateUrl: './show-saved-videos.component.html',\r\n    styleUrls: ['./show-saved-videos.component.scss']\r\n})\r\nexport class ShowSavedVideosComponent implements OnInit {\r\n\r\n    userVideos;\r\n    channelsVideos = [];\r\n    apiUrl = API_URL;\r\n    search;\r\n    authUser;\r\n\r\n    constructor(\r\n        private videoService: VideoService,\r\n        public router: Router,\r\n        private subject: SubjectService,\r\n        private channelsService: ChannelsService,\r\n        private route: ActivatedRoute,\r\n        private getAuthUser: GetAuthUserPipe\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.authUser = this.getAuthUser.transform();\r\n\r\n        this.videoService.getUserSavedVideos({user_id: this.authUser.id}).subscribe(dt => {\r\n            this.userVideos = dt;\r\n        });\r\n    }\r\n\r\n    async openVideoPage(video, username) {\r\n        const r = buildPlayVideoRoute(video, username);\r\n        await this.router.navigate([r.route], {queryParams: r.params});\r\n    }\r\n\r\n    openChannelPage(channel, username) {\r\n        this.router.navigate(['channels/show'], {queryParams: {username}});\r\n    }\r\n\r\n    async getVideosByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n}\r\n","<div class=\"playlist-container\" *ngFor=\"let playlist of items.playlists\">\r\n    <ng-container *ngIf=\"playlist.videos.length > 0\">\r\n        <div class=\"thumbnail-container\" (click)=\"openPlaylistPage(playlist, playlist.videos[0].id)\">\r\n            <div class=\"thumbnail\">\r\n                <div class=\"short-details\">\r\n                    <mat-icon>playlist_add_check</mat-icon>\r\n                    <p class=\"name\">{{playlist.name}}</p>\r\n                    <p class=\"video-count\">{{playlist.videos.length + (playlist.videos.length === 1 ? ' video' : ' videos')}}</p>\r\n                </div>\r\n                <img [src]=\"playlist.thumbnail|getImgPath\">\r\n            </div>\r\n            <div class=\"fake-bg thumbnail\"></div>\r\n        </div>\r\n        <div class=\"details\">\r\n\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-show-playlists-list',\r\n    templateUrl: './show-playlists-list.component.html',\r\n    styleUrls: ['./show-playlists-list.component.scss']\r\n})\r\nexport class ShowPlaylistsListComponent implements OnInit {\r\n\r\n    @Input('items') items;\r\n    @Input('authUser') authUser;\r\n\r\n    constructor(\r\n        public router: Router\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    async openPlaylistPage(playlist, firstVideoId) {\r\n        const route = 'videos/play';\r\n        const params = {id: firstVideoId, playlist_id: playlist.id};\r\n        await this.router.navigate([route], {queryParams: params});\r\n    }\r\n\r\n}\r\n","<div id=\"regular-video-list-container\">\r\n    <div class=\"video-container flex-wrap\" *ngFor=\"let video of items.videos; trackBy: trackByElement\">\r\n        <div class=\"thumbnail\">\r\n            <img [src]=\"video.thumbnail|getImgPath\" (click)=\"openVideoPage(video, video.user.username)\">\r\n            <span class=\"live-now\" *ngIf=\"video.status==='live'\">Live now</span>\r\n            <span class=\"duration\">{{video.duration}}</span>\r\n        </div>\r\n        <div class=\"details\">\r\n            <h4 class=\"title\">{{video.name}}</h4>\r\n            <div class=\"shortened-details\">\r\n                    <span class=\"channel-name\" (click)=\"openChannelPage(video.user.channel, video.user.username)\">\r\n                        {{video.user.channel.name}}\r\n                    </span>\r\n                <span class=\"dot\">&middot;</span>\r\n                <span class=\"watchers-count\">\r\n                        {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\r\n                    </span>\r\n                <span class=\"dot\">&middot;</span>\r\n                <span class=\"upload-time\">{{video.created_at | dateFromNow}}</span>\r\n            </div>\r\n            <p class=\"shortened-description\">\r\n                {{video.description}}\r\n            </p>\r\n\r\n            <div class=\"saved-video\" *ngIf=\"checkIfSavedByCurrentUser(video)\">\r\n                <mat-icon>turned_in</mat-icon>\r\n                <span>Saved</span>\r\n            </div>\r\n\r\n            <div class=\"tags\">\r\n                <ul>\r\n                    <li *ngFor=\"let tag of video?.tags\" (click)=\"getVideosByTag(tag.name)\">\r\n                        <span>{{tag.name}}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div class=\"is-new-video\" *ngIf=\"checkIfNewVideo(video)\">\r\n                <span class=\"new\">New</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {buildPlayVideoRoute} from '@core/helpers/build-play-video-route';\r\nimport trackByElement from '@core/helpers/track-by-element';\r\nimport {Router} from '@angular/router';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector: 'app-show-regular-list',\r\n    templateUrl: './show-regular-list.component.html',\r\n    styleUrls: ['./show-regular-list.component.scss']\r\n})\r\nexport class ShowRegularListComponent implements OnInit {\r\n\r\n    @Input('items') items;\r\n    @Input('authUser') authUser;\r\n    trackByElement = trackByElement;\r\n\r\n    constructor(\r\n        public router: Router\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    async openVideoPage(video, username) {\r\n        const r = buildPlayVideoRoute(video, username);\r\n        await this.router.navigate([r.route], {queryParams: r.params});\r\n    }\r\n\r\n    async openChannelPage(channel, username) {\r\n        await this.router.navigate(['channels/show'], {queryParams: {username}});\r\n    }\r\n\r\n    checkIfSavedByCurrentUser(video) {\r\n        return video.users_vids.find(v => v.username === this.authUser?.username && v.users_videos.saved);\r\n    }\r\n\r\n    checkIfNewVideo(video) {\r\n        const duration = moment.duration(moment().diff(video.created_at));\r\n        return Math.floor(duration.asDays()) < 7;\r\n    }\r\n\r\n    async getVideosByTag(name) {\r\n        await this.router.navigate(['videos'], {queryParams: {tag: name}});\r\n    }\r\n\r\n}\r\n","<div id=\"search-results-container\">\r\n    <ng-container *ngFor=\"let channel of channelsVideos\">\r\n        <div class=\"channel-item\">\r\n            <div class=\"thumbnail\">\r\n                <img class=\"avatar\" [src]=\"channel.avatar|getImgPath:'avatars'\"\r\n                     (click)=\"openChannelPage(channel,channel.user?.username)\">\r\n            </div>\r\n            <div class=\"info\">\r\n                <p class=\"name\" (click)=\"openChannelPage(channel, channel?.user?.username)\">{{channel.name}}</p>\r\n                <div class=\"shortened-details\">\r\n                    <p class=\"video-count\">{{channel.videos.length + (channel.videos.length === 1 ? ' video' : ' videos')}}</p>\r\n                </div>\r\n                <p>{{getDesc(channel.description)}}</p>\r\n                <button class=\"btn subscribe-to-channel-btn\" *ngIf=\"channel?.user?.username !== authUser?.username\"\r\n                        [class.subscribed]=\"checkIfSubscribed(channel)\"\r\n                        (click)=\"subscribeToChannel(channel)\">{{checkIfSubscribed(channel) ? 'Subscribed' : 'Subscribe'}}\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"video-container\" *ngFor=\"let video of channel.videos\">\r\n            <div class=\"thumbnail\">\r\n                <img [src]=\"video.thumbnail|getImgPath\" (click)=\"openVideoPage(video, channel.user.username)\">\r\n                <span class=\"duration\">{{video.duration}}</span>\r\n            </div>\r\n            <div class=\"details\">\r\n                <h4 class=\"title\">{{video.name}}</h4>\r\n                <div class=\"shortened-details\">\r\n                    <span class=\"channel-name\">{{channel.name}}</span>\r\n                    <span class=\"dot\">&middot;</span>\r\n                    <span class=\"watchers-count\">\r\n                    {{video.status === 'live' ? '17k watching' : video.views + ' view' + (video.views === 1 ? '' : 's')}}\r\n                </span>\r\n                    <span class=\"dot\">&middot;</span>\r\n                    <span class=\"upload-time\">{{video.created_at | dateFromNow}}</span>\r\n                </div>\r\n                <p class=\"shortened-description\">\r\n                    {{video.description}}\r\n                </p>\r\n                <div class=\"tags\">\r\n                    <ul>\r\n                        <li *ngFor=\"let tag of video?.tags\">\r\n                            <span>{{tag.name}}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {buildPlayVideoRoute} from '@core/helpers/build-play-video-route';\r\n\r\n@Component({\r\n    selector: 'app-show-search-results',\r\n    templateUrl: './show-search-results.component.html',\r\n    styleUrls: ['./show-search-results.component.scss']\r\n})\r\nexport class ShowSearchResultsComponent implements OnInit {\r\n\r\n    @Input('channelsVideos') channelsVideos;\r\n    @Input('authUser') authUser;\r\n\r\n    constructor(\r\n        public router: Router,\r\n        private subject: SubjectService,\r\n        private channelsService: ChannelsService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    async openChannelPage(channel, username) {\r\n        await this.router.navigate(['channels/show'], {queryParams: {username}});\r\n    }\r\n\r\n    async openVideoPage(video, username) {\r\n        const r = buildPlayVideoRoute(video, username);\r\n        await this.router.navigate([r.route], {queryParams: r.params});\r\n    }\r\n\r\n    subscribeToChannel(channel) {\r\n        this.channelsService.subscribeToChannel({user_id: this.authUser.id, channel_id: channel.id}).subscribe(dt => {\r\n            this.channelsService.getUserChannelSubscriptions({user_id: this.authUser.id}).subscribe(d => {\r\n                this.subject.setUserSubscriptions(d);\r\n                if (this.checkIfSubscribed(channel)) {\r\n                    channel.subscribers = channel.subscribers.filter(s => s.id !== this.authUser?.id);\r\n                } else {\r\n                    channel.subscribers.push(this.authUser);\r\n                }\r\n                // console.log(channel.subscribers)\r\n                // channel.subscribers = channel.subscribers.filter(s => s.id !== this.authUser?.id).concat([this.authUser]);\r\n                // console.log(channel.subscribers)\r\n\r\n                // this.searchChannelsVideos({search: this.search, filters: this.filters});\r\n            });\r\n        });\r\n    }\r\n\r\n    checkIfSubscribed(channel) {\r\n        return channel.subscribers.find(s => s.id === this.authUser?.id);\r\n    }\r\n\r\n    getDesc(d) {\r\n        return d?.replace(/<br\\s*[\\/]?>/gi, '\\n');\r\n    }\r\n\r\n\r\n}\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {VideoService} from '@core/services/video.service';\r\nimport {API_URL} from '@core/constants/global';\r\nimport * as moment from 'moment';\r\nimport {ActivatedRoute, ActivationEnd, Data, Router} from '@angular/router';\r\nimport {SubjectService} from '@core/services/subject.service';\r\nimport {ChannelsService} from '@core/services/channels.service';\r\nimport {filter, map, tap} from 'rxjs/operators';\r\nimport {checkIfObjectEmpty} from '@core/helpers/check-if-object-empty';\r\nimport {GetAuthUserPipe} from '@shared/pipes/get-auth-user.pipe';\r\nimport {FilterOutFalsyValuesFromObjectPipe} from '@shared/pipes/filter-out-falsy-values-from-object.pipe';\r\nimport {Subscription} from 'rxjs';\r\nimport {buildPlayVideoRoute} from '@core/helpers/build-play-video-route';\r\n\r\n@Component({\r\n    selector: 'app-show-videos',\r\n    templateUrl: './show-videos.component.html',\r\n    styleUrls: ['./show-videos.component.scss']\r\n})\r\nexport class ShowVideosComponent implements OnInit, OnDestroy {\r\n    items = {videos: [], playlists: []};\r\n    channelsVideos = [];\r\n    apiUrl = API_URL;\r\n    search;\r\n    selectedTag;\r\n    authUser;\r\n    showTrending = false;\r\n    showFilters = false;\r\n    filters = {};\r\n    filterStatus = 'idle';\r\n    subscriptions: Subscription[] = [];\r\n    loadingVideos = false;\r\n\r\n    constructor(\r\n        private videoService: VideoService,\r\n        public router: Router,\r\n        private subject: SubjectService,\r\n        private channelsService: ChannelsService,\r\n        private route: ActivatedRoute,\r\n        private getAuthUser: GetAuthUserPipe,\r\n        private getExactParams: FilterOutFalsyValuesFromObjectPipe\r\n    ) {\r\n        this.authUser = this.getAuthUser.transform();\r\n\r\n        this.subscriptions.push(\r\n            this.route.queryParams.subscribe(d => {\r\n                this.search = this.route.snapshot.queryParams?.search;\r\n                this.showTrending = this.router.url.includes('trending');\r\n                this.selectedTag = this.route.snapshot.queryParams?.tag;\r\n                if (this.search) {\r\n                    this.searchChannelsVideos({search: this.search, filters: this.filters});\r\n                } else {\r\n                    this.getVideosList({search: this.search, filters: this.filters, tag: this.selectedTag});\r\n                }\r\n            }));\r\n\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n\r\n    }\r\n\r\n    getFilteredList(filters = {}) {\r\n        this.filters = filters;\r\n        this.filterStatus = 'applied';\r\n        if (this.search) {\r\n            this.searchChannelsVideos({search: this.search, filters: this.filters});\r\n        } else {\r\n            this.getVideosList({filters: this.filters});\r\n        }\r\n    }\r\n\r\n    getVideosList(params) {\r\n        params = this.getExactParams.transform(params);\r\n\r\n        this.videoService.get({\r\n            withPlaylists: !this.showTrending ? 1 : 0,\r\n            trending: this.showTrending ? 1 : 0,\r\n            ...params\r\n        }).subscribe(dt => {\r\n            this.items = dt;\r\n        });\r\n    }\r\n\r\n    searchChannelsVideos(params) {\r\n\r\n        params = this.getExactParams.transform(params);\r\n        this.loadingVideos = true;\r\n\r\n        this.channelsService.searchWithVideos({user_id: this.authUser?.id, ...params}).subscribe(dt => {\r\n            this.loadingVideos = false;\r\n            this.channelsVideos = dt;\r\n        });\r\n    }\r\n\r\n\r\n    isFiltersShown() {\r\n        return this.items.videos?.length > 0 ||\r\n            (this.search && this.channelsVideos.find(v => v.videos.length > 0))\r\n            || this.filterStatus === 'applied' && !this.loadingVideos;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n}\r\n","<div class=\"all-videos\">\r\n    <button class=\"filter-toggle-btn\" *ngIf=\"isFiltersShown()\" (click)=\"showFilters = !showFilters\">\r\n        <mat-icon>tune</mat-icon>\r\n        <span>Filters</span>\r\n    </button>\r\n    <app-video-filters (filter)=\"getFilteredList($event)\" *ngIf=\"showFilters\"></app-video-filters>\r\n    <div id=\"videos-list\">\r\n        <mat-spinner [diameter]=\"20\" *ngIf=\"loadingVideos\"></mat-spinner>\r\n        <ng-container *ngIf=\"!search && !loadingVideos\">\r\n            <app-show-regular-list [items]=\"items\" [authUser]=\"authUser\"></app-show-regular-list>\r\n            <app-show-playlists-list [items]=\"items\" [authUser]=\"authUser\"></app-show-playlists-list>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"search && !loadingVideos\">\r\n            <app-show-search-results [channelsVideos]=\"channelsVideos\" [authUser]=\"authUser\"></app-show-search-results>\r\n        </ng-container>\r\n    </div>\r\n    <div *ngIf=\"search && channelsVideos?.length === 0\">\r\n        <span class=\"error\">No results found</span>\r\n    </div>\r\n</div>\r\n","import {AfterViewInit, Component, OnInit} from '@angular/core';\r\nimport videojs from 'video.js';\r\nimport * as RecordRTC from 'recordrtc';\r\n\r\n@Component({\r\n    selector: 'app-videojs-test',\r\n    templateUrl: './videojs-test.component.html',\r\n    styleUrls: ['./videojs-test.component.scss']\r\n})\r\nexport class VideojsTestComponent implements OnInit, AfterViewInit {\r\n    config = {\r\n        controls: true,\r\n        bigPlayButton: false,\r\n        width: 320,\r\n        height: 240,\r\n        fluid: false,\r\n        plugins: {\r\n            record: {\r\n                audio: true,\r\n                video: true,\r\n                maxLength: 110,\r\n                debug: true\r\n            }\r\n        }\r\n    };\r\n    player;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.player = videojs(document.getElementById('video'), this.config, () => {\r\n            // console.log('player ready! id:', el);\r\n\r\n            // print version information at startup\r\n            const msg = 'Using video.js ' + videojs.VERSION +\r\n                ' with videojs-record ' + videojs.getPluginVersion('record') +\r\n                ' and recordrtc ' + RecordRTC.version;\r\n            videojs.log(msg);\r\n        }, () => {\r\n        });\r\n\r\n        let player = this.player;\r\n\r\n        this.player.on('finishRecord', () => {\r\n            // the blob object contains the recorded data that\r\n            // can be downloaded by the user, stored on server etc.\r\n            console.log('finished recording: ', player.recordedData);\r\n            // player.record().saveAs({'video': 'my-video-file-name.webm'});\r\n        });\r\n\r\n    }\r\n}\r\n","<video id=\"video\" class=\"video-js\" playsinline></video>\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {ShowVideosComponent} from '@app/videos/show-videos/show-videos.component';\r\nimport {PlayVideoComponent} from '@app/videos/play-video/play-video.component';\r\nimport {ShowSavedVideosComponent} from '@app/videos/show-saved-videos/show-saved-videos.component';\r\nimport {AuthGuard} from '@core/guards/auth.guard';\r\nimport {VideojsTestComponent} from '@app/videos/videojs-test/videojs-test.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n      path: 'test',\r\n      component: VideojsTestComponent\r\n    },\r\n    {\r\n        path: '',\r\n        component: ShowVideosComponent,\r\n        pathMatch: 'full',\r\n        data: {\r\n            title: 'Videos',\r\n        }\r\n    },\r\n    {\r\n        path: 'play',\r\n        component: PlayVideoComponent,\r\n        data: {\r\n            title: 'Play Video',\r\n        }\r\n    },\r\n    {\r\n        path: 'saved',\r\n        component: ShowSavedVideosComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n            title: 'Saved Videos',\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class VideosRoutingModule {\r\n}\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {VideosRoutingModule} from './videos-routing.module';\r\nimport {ShowVideosComponent} from './show-videos/show-videos.component';\r\nimport {SharedModule} from '@shared/shared.module';\r\n\r\nimport {PlayVideoComponent} from '../videos/play-video/play-video.component';\r\nimport {ShowSavedVideosComponent} from './show-saved-videos/show-saved-videos.component';\r\nimport {VideoSuggestionsComponent} from './play-video/video-suggestions/video-suggestions.component';\r\nimport { VideoDetailsFormComponent } from './play-video/video-details-form/video-details-form.component';\r\nimport { ShowRegularListComponent } from './show-videos/show-regular-list/show-regular-list.component';\r\nimport { ShowSearchResultsComponent } from './show-videos/show-search-results/show-search-results.component';\r\nimport { ShowPlaylistsListComponent } from './show-videos/show-playlists-list/show-playlists-list.component';\r\nimport { VideoCommentsFormComponent } from './play-video/video-comments-form/video-comments-form.component';\r\nimport { VideoCommentsListComponent } from './play-video/video-comments-list/video-comments-list.component';\r\nimport { CommentActionsComponent } from './play-video/video-comments-list/comment-actions/comment-actions.component';\r\nimport { SingleCommentComponent } from './play-video/video-comments-list/single-comment/single-comment.component';\r\nimport { VideojsTestComponent } from './videojs-test/videojs-test.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ShowVideosComponent,\r\n        PlayVideoComponent,\r\n        ShowSavedVideosComponent,\r\n        VideoSuggestionsComponent,\r\n        VideoDetailsFormComponent,\r\n        ShowRegularListComponent,\r\n        ShowSearchResultsComponent,\r\n        ShowPlaylistsListComponent,\r\n        VideoCommentsFormComponent,\r\n        VideoCommentsListComponent,\r\n        CommentActionsComponent,\r\n        SingleCommentComponent,\r\n        VideojsTestComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        VideosRoutingModule,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class VideosModule {\r\n}\r\n"]}